{"version":3,"names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_reactNative","_ensureNativeModuleAvailable","_iconButton","_tabBarItemIos","_toolbarAndroid","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","NativeIconAPI","NativeModules","RNVectorIconsManager","RNVectorIconsModule","exports","DEFAULT_ICON_SIZE","DEFAULT_ICON_COLOR","createIconSet","glyphMap","fontFamily","fontFile","fontStyle","fontBasename","replace","fontReference","Platform","select","windows","android","web","IconNamePropType","PropTypes","oneOf","keys","Icon","_PureComponent","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","root","handleRef","ref","_createClass2","value","setNativeProps","nativeProps","render","_this$props","props","name","size","color","style","children","_objectWithoutProperties2","glyph","String","fromCharCode","styleDefaults","fontSize","styleOverrides","fontWeight","createElement","Text","PureComponent","propTypes","allowFontScaling","bool","number","oneOfType","string","node","any","defaultProps","imageSourceCache","getImageSource","undefined","ensureNativeModuleAvailable","processedColor","processColor","cacheKey","scale","PixelRatio","Promise","resolve","reject","cached","Error","uri","getImageForFont","err","image","error","loadFont","file","OS","loadFontWithFileName","_toConsumableArray2","split","hasIcon","getRawGlyphMap","getFontFamily","Button","createIconButtonComponent","TabBarItem","createTabBarItemIOSComponent","TabBarItemIOS","ToolbarAndroid","createToolbarAndroidComponent"],"sources":["create-icon-set.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NativeModules,\n  Platform,\n  PixelRatio,\n  processColor,\n  Text,\n} from './react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconButtonComponent from './icon-button';\nimport createTabBarItemIOSComponent from './tab-bar-item-ios';\nimport createToolbarAndroidComponent from './toolbar-android';\n\nexport const NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  const IconNamePropType = PropTypes.oneOf(Object.keys(glyphMap));\n\n  class Icon extends PureComponent {\n    static propTypes = {\n      allowFontScaling: PropTypes.bool,\n      name: IconNamePropType,\n      size: PropTypes.number,\n      color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      children: PropTypes.node,\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    root = null;\n\n    setNativeProps(nativeProps) {\n      if (this.root) {\n        this.root.setNativeProps(nativeProps);\n      }\n    }\n\n    handleRef = ref => {\n      this.root = ref;\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCharCode(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n      props.ref = this.handleRef;\n\n      return (\n        <Text {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = {};\n\n  function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    let glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      glyph = String.fromCharCode(glyph);\n    }\n\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n    const scale = PixelRatio.get();\n\n    return new Promise((resolve, reject) => {\n      const cached = imageSourceCache[cacheKey];\n      if (typeof cached !== 'undefined') {\n        if (!cached || cached instanceof Error) {\n          reject(cached);\n        } else {\n          resolve({ uri: cached, scale });\n        }\n      } else {\n        NativeIconAPI.getImageForFont(\n          fontReference,\n          glyph,\n          size,\n          processedColor,\n          (err, image) => {\n            const error = typeof err === 'string' ? new Error(err) : err;\n            imageSourceCache[cacheKey] = image || error || false;\n            if (!error && image) {\n              resolve({ uri: image, scale });\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    });\n  }\n\n  function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        return Promise.reject(\n          new Error('Unable to load font, because no file was specified. ')\n        );\n      }\n      return NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n    return Promise.resolve();\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.TabBarItem = createTabBarItemIOSComponent(\n    IconNamePropType,\n    getImageSource\n  );\n  Icon.TabBarItemIOS = Icon.TabBarItem;\n  Icon.ToolbarAndroid = createToolbarAndroidComponent(\n    IconNamePropType,\n    getImageSource\n  );\n  Icon.getImageSource = getImageSource;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n"],"mappings":"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"}