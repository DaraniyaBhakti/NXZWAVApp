{"version":3,"names":["BatchedBridge","require","EventEmitter","TaskQueue","infoLog","invariant","keyMirror","_emitter","DEBUG_DELAY","DEBUG","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","tasks","promise","Promise","resolve","_scheduleUpdate","push","run","name","_taskQueue","enqueueTasks","then","bind","done","apply","arguments","console","warn","cancel","cancelTasks","createInteractionHandle","handle","_inc","_addInteractionSet","add","clearInteractionHandle","delete","_deleteInteractionSet","addListener","setDeadline","deadline","_deadline","_interactionSet","Set","onMoreTasks","_nextUpdateHandle","setTimeout","_processUpdate","setImmediate","interactionCount","size","forEach","nextInteractionCount","emit","hasTasksToProcess","processNext","getEventLoopRunningTime","clear","module","exports"],"sources":["InteractionManager.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\nconst EventEmitter = require('../vendor/emitter/EventEmitter');\nconst TaskQueue = require('./TaskQueue');\n\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\nconst keyMirror = require('fbjs/lib/keyMirror');\n\nexport type Handle = number;\nimport type {Task} from './TaskQueue';\n\nconst _emitter = new EventEmitter();\n\nconst DEBUG_DELAY: 0 = 0;\nconst DEBUG: false = false;\n\n/**\n * InteractionManager allows long-running work to be scheduled after any\n * interactions/animations have completed. In particular, this allows JavaScript\n * animations to run smoothly.\n *\n * Applications can schedule tasks to run after interactions with the following:\n *\n * ```\n * InteractionManager.runAfterInteractions(() => {\n *   // ...long-running synchronous task...\n * });\n * ```\n *\n * Compare this to other scheduling alternatives:\n *\n * - requestAnimationFrame(): for code that animates a view over time.\n * - setImmediate/setTimeout(): run code later, note this may delay animations.\n * - runAfterInteractions(): run code later, without delaying active animations.\n *\n * The touch handling system considers one or more active touches to be an\n * 'interaction' and will delay `runAfterInteractions()` callbacks until all\n * touches have ended or been cancelled.\n *\n * InteractionManager also allows applications to register animations by\n * creating an interaction 'handle' on animation start, and clearing it upon\n * completion:\n *\n * ```\n * var handle = InteractionManager.createInteractionHandle();\n * // run animation... (`runAfterInteractions` tasks are queued)\n * // later, on animation completion:\n * InteractionManager.clearInteractionHandle(handle);\n * // queued tasks run if all handles were cleared\n * ```\n *\n * `runAfterInteractions` takes either a plain callback function, or a\n * `PromiseTask` object with a `gen` method that returns a `Promise`.  If a\n * `PromiseTask` is supplied, then it is fully resolved (including asynchronous\n * dependencies that also schedule more tasks via `runAfterInteractions`) before\n * starting on the next task that might have been queued up synchronously\n * earlier.\n *\n * By default, queued tasks are executed together in a loop in one\n * `setImmediate` batch. If `setDeadline` is called with a positive number, then\n * tasks will only be executed until the deadline (in terms of js event loop run\n * time) approaches, at which point execution will yield via setTimeout,\n * allowing events such as touches to start interactions and block queued tasks\n * from executing, making apps more responsive.\n */\nconst InteractionManager = {\n  Events: keyMirror({\n    interactionStart: true,\n    interactionComplete: true,\n  }),\n\n  /**\n   * Schedule a function to run after all interactions have completed. Returns a cancellable\n   * \"promise\".\n   */\n  runAfterInteractions(\n    task: ?Task,\n  ): {then: Function, done: Function, cancel: Function} {\n    const tasks = [];\n    const promise = new Promise(resolve => {\n      _scheduleUpdate();\n      if (task) {\n        tasks.push(task);\n      }\n      tasks.push({\n        run: resolve,\n        name: 'resolve ' + ((task && task.name) || '?'),\n      });\n      _taskQueue.enqueueTasks(tasks);\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: (...args) => {\n        if (promise.done) {\n          return promise.done(...args);\n        } else {\n          console.warn(\n            'Tried to call done when not supported by current Promise implementation.',\n          );\n        }\n      },\n      cancel: function() {\n        _taskQueue.cancelTasks(tasks);\n      },\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle(): Handle {\n    DEBUG && infoLog('InteractionManager: create interaction handle');\n    _scheduleUpdate();\n    const handle = ++_inc;\n    _addInteractionSet.add(handle);\n    return handle;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle: Handle) {\n    DEBUG && infoLog('InteractionManager: clear interaction handle');\n    invariant(!!handle, 'InteractionManager: Must provide a handle to clear.');\n    _scheduleUpdate();\n    _addInteractionSet.delete(handle);\n    _deleteInteractionSet.add(handle);\n  },\n\n  addListener: (_emitter.addListener.bind(_emitter): $FlowFixMe),\n\n  /**\n   * A positive number will use setTimeout to schedule any tasks after the\n   * eventLoopRunningTime hits the deadline value, otherwise all tasks will be\n   * executed in one setImmediate batch (default).\n   */\n  setDeadline(deadline: number) {\n    _deadline = deadline;\n  },\n};\n\nconst _interactionSet = new Set();\nconst _addInteractionSet = new Set();\nconst _deleteInteractionSet = new Set();\nconst _taskQueue = new TaskQueue({onMoreTasks: _scheduleUpdate});\nlet _nextUpdateHandle = 0;\nlet _inc = 0;\nlet _deadline = -1;\n\ndeclare function setImmediate(callback: any, ...args: Array<any>): number;\n\n/**\n * Schedule an asynchronous update to the interaction state.\n */\nfunction _scheduleUpdate() {\n  if (!_nextUpdateHandle) {\n    if (_deadline > 0) {\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);\n    } else {\n      _nextUpdateHandle = setImmediate(_processUpdate);\n    }\n  }\n}\n\n/**\n * Notify listeners, process queue, etc\n */\nfunction _processUpdate() {\n  _nextUpdateHandle = 0;\n\n  const interactionCount = _interactionSet.size;\n  _addInteractionSet.forEach(handle => _interactionSet.add(handle));\n  _deleteInteractionSet.forEach(handle => _interactionSet.delete(handle));\n  const nextInteractionCount = _interactionSet.size;\n\n  if (interactionCount !== 0 && nextInteractionCount === 0) {\n    // transition from 1+ --> 0 interactions\n    _emitter.emit(InteractionManager.Events.interactionComplete);\n  } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n    // transition from 0 --> 1+ interactions\n    _emitter.emit(InteractionManager.Events.interactionStart);\n  }\n\n  // process the queue regardless of a transition\n  if (nextInteractionCount === 0) {\n    while (_taskQueue.hasTasksToProcess()) {\n      _taskQueue.processNext();\n      if (\n        _deadline > 0 &&\n        BatchedBridge.getEventLoopRunningTime() >= _deadline\n      ) {\n        // Hit deadline before processing all tasks, so process more later.\n        _scheduleUpdate();\n        break;\n      }\n    }\n  }\n  _addInteractionSet.clear();\n  _deleteInteractionSet.clear();\n}\n\nmodule.exports = InteractionManager;\n"],"mappings":"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"}