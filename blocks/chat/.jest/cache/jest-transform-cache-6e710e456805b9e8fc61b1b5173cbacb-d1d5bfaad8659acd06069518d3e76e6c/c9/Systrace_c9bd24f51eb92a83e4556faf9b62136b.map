{"version":3,"names":["invariant","require","TRACE_TAG_REACT_APPS","TRACE_TAG_JS_VM_CALLS","_enabled","_asyncCookie","_markStack","_markStackIndex","_canInstallReactHook","REACT_MARKER","userTimingPolyfill","__DEV__","mark","markName","systraceLabel","indexOfId","lastIndexOf","cutoffIndex","length","slice","Systrace","beginEvent","measure","measureName","startMark","endMark","topMark","endEvent","clearMarks","clearMeasures","installReactHook","global","performance","setEnabled","enabled","nativeTraceBeginLegacy","nativeTraceEndLegacy","undefined","isEnabled","profileName","args","nativeTraceBeginSection","nativeTraceEndSection","beginAsyncEvent","cookie","nativeTraceBeginAsyncSection","endAsyncEvent","nativeTraceEndAsyncSection","counterEvent","value","nativeTraceCounter","module","exports"],"sources":["Systrace.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst TRACE_TAG_REACT_APPS = 1 << 17; // eslint-disable-line no-bitwise\nconst TRACE_TAG_JS_VM_CALLS = 1 << 27; // eslint-disable-line no-bitwise\n\nlet _enabled = false;\nlet _asyncCookie = 0;\nconst _markStack = [];\nlet _markStackIndex = -1;\nlet _canInstallReactHook = false;\n\n// Implements a subset of User Timing API necessary for React measurements.\n// https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\nconst REACT_MARKER = '\\u269B';\nconst userTimingPolyfill = __DEV__\n  ? {\n      mark(markName: string) {\n        if (_enabled) {\n          _markStackIndex++;\n          _markStack[_markStackIndex] = markName;\n          let systraceLabel = markName;\n          // Since perf measurements are a shared namespace in User Timing API,\n          // we prefix all React results with a React emoji.\n          if (markName[0] === REACT_MARKER) {\n            // This is coming from React.\n            // Removing component IDs keeps trace colors stable.\n            const indexOfId = markName.lastIndexOf(' (#');\n            const cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;\n            // Also cut off the emoji because it breaks Systrace\n            systraceLabel = markName.slice(2, cutoffIndex);\n          }\n          Systrace.beginEvent(systraceLabel);\n        }\n      },\n      measure(measureName: string, startMark: ?string, endMark: ?string) {\n        if (_enabled) {\n          invariant(\n            typeof measureName === 'string' &&\n              typeof startMark === 'string' &&\n              typeof endMark === 'undefined',\n            'Only performance.measure(string, string) overload is supported.',\n          );\n          const topMark = _markStack[_markStackIndex];\n          invariant(\n            startMark === topMark,\n            'There was a mismatching performance.measure() call. ' +\n              'Expected \"%s\" but got \"%s.\"',\n            topMark,\n            startMark,\n          );\n          _markStackIndex--;\n          // We can't use more descriptive measureName because Systrace doesn't\n          // let us edit labels post factum.\n          Systrace.endEvent();\n        }\n      },\n      clearMarks(markName: string) {\n        if (_enabled) {\n          if (_markStackIndex === -1) {\n            return;\n          }\n          if (markName === _markStack[_markStackIndex]) {\n            // React uses this for \"cancelling\" started measurements.\n            // Systrace doesn't support deleting measurements, so we just stop them.\n            if (userTimingPolyfill != null) {\n              userTimingPolyfill.measure(markName, markName);\n            }\n          }\n        }\n      },\n      clearMeasures() {\n        // React calls this to avoid memory leaks in browsers, but we don't keep\n        // measurements anyway.\n      },\n    }\n  : null;\n\nconst Systrace = {\n  installReactHook() {\n    if (_enabled) {\n      if (__DEV__) {\n        global.performance = userTimingPolyfill;\n      }\n    }\n    _canInstallReactHook = true;\n  },\n\n  setEnabled(enabled: boolean) {\n    if (_enabled !== enabled) {\n      if (__DEV__) {\n        if (enabled) {\n          global.nativeTraceBeginLegacy &&\n            global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);\n        } else {\n          global.nativeTraceEndLegacy &&\n            global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);\n        }\n        if (_canInstallReactHook) {\n          if (enabled && global.performance === undefined) {\n            global.performance = userTimingPolyfill;\n          }\n        }\n      }\n      _enabled = enabled;\n    }\n  },\n\n  isEnabled(): boolean {\n    return _enabled;\n  },\n\n  /**\n   * beginEvent/endEvent for starting and then ending a profile within the same call stack frame\n   **/\n  beginEvent(profileName?: any, args?: any) {\n    if (_enabled) {\n      profileName =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);\n    }\n  },\n\n  endEvent() {\n    if (_enabled) {\n      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);\n    }\n  },\n\n  /**\n   * beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either\n   * occur on another thread or out of the current stack frame, eg await\n   * the returned cookie variable should be used as input into the endAsyncEvent call to end the profile\n   **/\n  beginAsyncEvent(profileName?: any): any {\n    const cookie = _asyncCookie;\n    if (_enabled) {\n      _asyncCookie++;\n      profileName =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginAsyncSection(\n        TRACE_TAG_REACT_APPS,\n        profileName,\n        cookie,\n      );\n    }\n    return cookie;\n  },\n\n  endAsyncEvent(profileName?: any, cookie?: any) {\n    if (_enabled) {\n      profileName =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceEndAsyncSection(\n        TRACE_TAG_REACT_APPS,\n        profileName,\n        cookie,\n      );\n    }\n  },\n\n  /**\n   * counterEvent registers the value to the profileName on the systrace timeline\n   **/\n  counterEvent(profileName?: any, value?: any) {\n    if (_enabled) {\n      profileName =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceCounter &&\n        global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);\n    }\n  },\n};\n\nif (__DEV__) {\n  // This is needed, because require callis in polyfills are not processed as\n  // other files. Therefore, calls to `require('moduleId')` are not replaced\n  // with numeric IDs\n  // TODO(davidaurelio) Scan polyfills for dependencies, too (t9759686)\n  (require: any).Systrace = Systrace;\n}\n\nmodule.exports = Systrace;\n"],"mappings":"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"}