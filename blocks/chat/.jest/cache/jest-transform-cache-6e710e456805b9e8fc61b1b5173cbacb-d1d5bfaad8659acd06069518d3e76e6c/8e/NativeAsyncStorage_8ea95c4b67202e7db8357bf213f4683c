3bd1344a6ad200550b7881953b0ec082
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiTmF0aXZlQXN5bmNTdG9yYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0eXBlIHtUdXJib01vZHVsZX0gZnJvbSAnLi4vVHVyYm9Nb2R1bGUvUkNURXhwb3J0JztcbmltcG9ydCAqIGFzIFR1cmJvTW9kdWxlUmVnaXN0cnkgZnJvbSAnLi4vVHVyYm9Nb2R1bGUvVHVyYm9Nb2R1bGVSZWdpc3RyeSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3BlYyBleHRlbmRzIFR1cmJvTW9kdWxlIHtcbiAgK2dldENvbnN0YW50czogKCkgPT4ge3x8fTtcbiAgK211bHRpR2V0OiAoXG4gICAga2V5czogQXJyYXk8c3RyaW5nPixcbiAgICBjYWxsYmFjazogKFxuICAgICAgZXJyb3JzOiA/QXJyYXk8e3xtZXNzYWdlOiBzdHJpbmd8fT4sXG4gICAgICBrdlBhaXJzOiA/QXJyYXk8QXJyYXk8c3RyaW5nPj4sXG4gICAgKSA9PiB2b2lkLFxuICApID0+IHZvaWQ7XG4gICttdWx0aVNldDogKFxuICAgIGt2UGFpcnM6IEFycmF5PEFycmF5PHN0cmluZz4+LFxuICAgIGNhbGxiYWNrOiAoZXJyb3JzOiA/QXJyYXk8e3xtZXNzYWdlOiBzdHJpbmd8fT4pID0+IHZvaWQsXG4gICkgPT4gdm9pZDtcbiAgK211bHRpTWVyZ2U6IChcbiAgICBrdlBhaXJzOiBBcnJheTxBcnJheTxzdHJpbmc+PixcbiAgICBjYWxsYmFjazogKGVycm9yczogP0FycmF5PHt8bWVzc2FnZTogc3RyaW5nfH0+KSA9PiB2b2lkLFxuICApID0+IHZvaWQ7XG4gICttdWx0aVJlbW92ZTogKFxuICAgIGtleXM6IEFycmF5PHN0cmluZz4sXG4gICAgY2FsbGJhY2s6IChlcnJvcnM6ID9BcnJheTx7fG1lc3NhZ2U6IHN0cmluZ3x9PikgPT4gdm9pZCxcbiAgKSA9PiB2b2lkO1xuICArY2xlYXI6IChjYWxsYmFjazogKGVycm9yOiB7fG1lc3NhZ2U6IHN0cmluZ3x9KSA9PiB2b2lkKSA9PiB2b2lkO1xuICArZ2V0QWxsS2V5czogKFxuICAgIGNhbGxiYWNrOiAoZXJyb3I6ID97fG1lc3NhZ2U6IHN0cmluZ3x9LCBhbGxLZXlzOiA/QXJyYXk8c3RyaW5nPikgPT4gdm9pZCxcbiAgKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZGVmYXVsdCAoVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXQ8U3BlYz4oJ0FzeW5jU1FMaXRlREJTdG9yYWdlJykgfHxcbiAgVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXQ8U3BlYz4oJ0FzeW5jTG9jYWxTdG9yYWdlJyk6ID9TcGVjKTtcbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFBQ0EsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsT0FBQTtBQUdiLElBQUFDLG1CQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFBMEUsU0FBQUMseUJBQUFDLFdBQUEsZUFBQUMsT0FBQSxrQ0FBQUMsaUJBQUEsT0FBQUQsT0FBQSxRQUFBRSxnQkFBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFILHdCQUFBTyxHQUFBLEVBQUFKLFdBQUEsU0FBQUEsV0FBQSxJQUFBSSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxXQUFBRCxHQUFBLFFBQUFBLEdBQUEsb0JBQUFBLEdBQUEsd0JBQUFBLEdBQUEsNEJBQUFULE9BQUEsRUFBQVMsR0FBQSxVQUFBRSxLQUFBLEdBQUFQLHdCQUFBLENBQUFDLFdBQUEsT0FBQU0sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUgsR0FBQSxZQUFBRSxLQUFBLENBQUFFLEdBQUEsQ0FBQUosR0FBQSxTQUFBSyxNQUFBLFdBQUFDLHFCQUFBLEdBQUFuQixNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBb0Isd0JBQUEsV0FBQUMsR0FBQSxJQUFBUixHQUFBLFFBQUFRLEdBQUEsa0JBQUFyQixNQUFBLENBQUFzQixTQUFBLENBQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBWCxHQUFBLEVBQUFRLEdBQUEsU0FBQUksSUFBQSxHQUFBTixxQkFBQSxHQUFBbkIsTUFBQSxDQUFBb0Isd0JBQUEsQ0FBQVAsR0FBQSxFQUFBUSxHQUFBLGNBQUFJLElBQUEsS0FBQUEsSUFBQSxDQUFBUixHQUFBLElBQUFRLElBQUEsQ0FBQUMsR0FBQSxLQUFBMUIsTUFBQSxDQUFBQyxjQUFBLENBQUFpQixNQUFBLEVBQUFHLEdBQUEsRUFBQUksSUFBQSxZQUFBUCxNQUFBLENBQUFHLEdBQUEsSUFBQVIsR0FBQSxDQUFBUSxHQUFBLFNBQUFILE1BQUEsQ0FBQWQsT0FBQSxHQUFBUyxHQUFBLE1BQUFFLEtBQUEsSUFBQUEsS0FBQSxDQUFBVyxHQUFBLENBQUFiLEdBQUEsRUFBQUssTUFBQSxZQUFBQSxNQUFBO0FBQUEsSUFBQVMsUUFBQSxHQTZCMUR0QixtQkFBbUIsQ0FBQ1ksR0FBRyxDQUFPLHNCQUFzQixDQUFDLElBQ25FWixtQkFBbUIsQ0FBQ1ksR0FBRyxDQUFPLG1CQUFtQixDQUFDO0FBQUFmLE9BQUEsQ0FBQUUsT0FBQSxHQUFBdUIsUUFBQSJ9