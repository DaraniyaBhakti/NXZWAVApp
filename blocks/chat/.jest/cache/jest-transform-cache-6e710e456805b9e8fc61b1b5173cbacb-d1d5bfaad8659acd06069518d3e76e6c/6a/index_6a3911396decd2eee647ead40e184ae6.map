{"version":3,"names":["_reactNative","require","convertErrors","errs","Array","isArray","filter","e","checkValidInput","usedKey","value","isValuePassed","arguments","length","console","warn","Error","LegacyAsyncStorage","_classCallCheck2","default","_defineProperty","_asyncStorageNativeModule","NativeModules","RNC_AsyncSQLiteDBStorage","RNCAsyncStorage","_createClass2","key","getSingle","_","_this","_regenerator","async","getSingle$","_context","prev","next","abrupt","Promise","resolve","reject","multiGet","errors","result","stop","setSingle","_this2","setSingle$","_context2","multiSet","getMany","keys","_this3","getMany$","_context3","forEach","k","reduce","acc","current","val","_objectSpread","_defineProperty3","setMany","values","_this4","setMany$","_context4","keyValue","Object","valuesArray","map","entry","removeSingle","_this5","removeSingle$","_context5","multiRemove","removeMany","_this6","removeMany$","_context6","getKeys","_this7","getKeys$","_context7","getAllKeys","err","dropStorage","_this8","dropStorage$","_context8","clear","error"],"sources":["../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {NativeModules} from 'react-native';\nimport {\n  EmptyStorageModel,\n  IStorageBackend,\n  StorageOptions,\n} from '@react-native-community/async-storage';\nimport {ILegacyNativeModule} from '../types/nativeModule';\n\nfunction convertErrors(errs?: Array<Error> | Error) {\n  if (!errs) {\n    return null;\n  }\n  return Array.isArray(errs) ? errs.filter(e => !!e) : [errs];\n}\n\nfunction checkValidInput(usedKey: any, value?: any) {\n  const isValuePassed = arguments.length > 1;\n\n  if (typeof usedKey !== 'string') {\n    console.warn(\n      `[AsyncStorageLegacy] Using \"${typeof usedKey}\" type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: ${usedKey}\\n`,\n    );\n  }\n\n  if (isValuePassed && typeof value !== 'string') {\n    if (value == null) {\n      throw new Error(\n        `[AsyncStorageLegacy] Passing \"null\" or \"undefined\" as value is not supported. If you need to remove a value, use \".removeSingle\" method instead.\\nUsed key: ${usedKey}\\n`,\n      );\n    } else {\n      console.warn(\n        `[AsyncStorageLegacy] The value for key \"${usedKey}\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: ${value}\\nPassed key: ${usedKey}\\n`,\n      );\n    }\n  }\n}\n\nexport default class LegacyAsyncStorage<\n  T extends EmptyStorageModel = EmptyStorageModel\n> implements IStorageBackend<T> {\n  private readonly _asyncStorageNativeModule: ILegacyNativeModule;\n\n  constructor() {\n    this._asyncStorageNativeModule =\n      NativeModules.RNC_AsyncSQLiteDBStorage || NativeModules.RNCAsyncStorage;\n\n    if (!this._asyncStorageNativeModule) {\n      throw new Error(\n        '[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.',\n      );\n    }\n  }\n\n  async getSingle<K extends keyof T>(\n    key: K,\n    _?: StorageOptions,\n  ): Promise<T[K] | null> {\n    checkValidInput(key);\n\n    return new Promise((resolve, reject) => {\n      this._asyncStorageNativeModule.multiGet([key], function(\n        errors: Array<Error>,\n        result: Array<[any, T[K] | null]>,\n      ) {\n        const value = (result && result[0] && result[0][1]) || null;\n        const errs = convertErrors(errors);\n        if (errs && errs.length) {\n          reject(errs[0]);\n        } else {\n          resolve(value);\n        }\n      });\n    });\n  }\n\n  async setSingle<K extends keyof T>(\n    key: K,\n    value: T[K],\n    _?: StorageOptions,\n  ): Promise<void> {\n    checkValidInput(key, value);\n\n    return new Promise((resolve, reject) => {\n      this._asyncStorageNativeModule.multiSet([[key, value]], function(\n        errors: Array<Error>,\n      ) {\n        const errs = convertErrors(errors);\n        if (errs && errs.length) {\n          reject(errs[0]);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  async getMany<K extends keyof T>(\n    keys: Array<K>,\n    _?: StorageOptions,\n  ): Promise<{[k in K]: T[k] | null}> {\n    keys.forEach(k => checkValidInput(k));\n\n    return new Promise((resolve, reject) => {\n      this._asyncStorageNativeModule.multiGet(keys, function(\n        errors: Array<Error>,\n        result: Array<[K, T[K]]>,\n      ) {\n        const value: {[k in K]: T[k]} = result.reduce<any>(\n          (acc, current: [K, T[K]]) => {\n            const key = current[0];\n            const val = current[1];\n            return {\n              ...acc,\n              [key]: val,\n            };\n          },\n          {},\n        );\n        const errs = convertErrors(errors);\n        if (errs && errs.length) {\n          reject(errs[0]);\n        } else {\n          resolve(value);\n        }\n      });\n    });\n  }\n\n  async setMany<K extends keyof T>(\n    values: Array<Partial<{[k in K]: T[k]}>>,\n    _?: StorageOptions,\n  ): Promise<void> {\n    values.forEach(keyValue => {\n      (Object.keys(keyValue) as Array<K>).forEach(key => {\n        checkValidInput(key, keyValue[key]);\n      });\n    });\n\n    return new Promise((resolve, reject) => {\n      const valuesArray = values.map(entry => {\n        const key = Object.keys(entry)[0] as K;\n        const value = entry[key];\n\n        return [key, value];\n      });\n      this._asyncStorageNativeModule.multiSet(valuesArray, function(\n        errors: Array<Error>,\n      ) {\n        const errs = convertErrors(errors);\n        if (errs && errs.length) {\n          reject(errs[0]);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  async removeSingle(key: keyof T, _?: StorageOptions): Promise<void> {\n    checkValidInput(key);\n\n    return new Promise<void>((resolve, reject) => {\n      this._asyncStorageNativeModule.multiRemove([key], function(\n        errors: Array<Error>,\n      ) {\n        const errs = convertErrors(errors);\n        if (errs && errs.length) {\n          reject(errs[0]);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  async removeMany(keys: Array<keyof T>, _?: StorageOptions): Promise<void> {\n    keys.forEach(k => checkValidInput(k));\n\n    return new Promise<void>((resolve, reject) => {\n      this._asyncStorageNativeModule.multiRemove(keys, function(\n        errors: Array<Error>,\n      ) {\n        const errs = convertErrors(errors);\n        if (errs && errs.length) {\n          reject(errs[0]);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  async getKeys(_?: StorageOptions): Promise<Array<keyof T>> {\n    return new Promise((resolve, reject) => {\n      this._asyncStorageNativeModule.getAllKeys(function(\n        errors: Array<Error>,\n        keys: Array<keyof T>,\n      ) {\n        const err = convertErrors(errors);\n\n        if (err && err.length) {\n          reject(err[0]);\n        } else {\n          resolve(keys);\n        }\n      });\n    });\n  }\n\n  async dropStorage(_?: StorageOptions): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this._asyncStorageNativeModule.clear(function(\n        error: Array<Error> | Error,\n      ) {\n        const err = convertErrors(error);\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n"],"mappings":"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"}