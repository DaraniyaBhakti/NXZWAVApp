{"version":3,"names":["Message_1","cov_2ewh89ltqi","s","require","BlockComponent_1","MessageEnum_1","__importStar","RunEngine_1","react_1","__importDefault","AppGlobals_1","AppConstant_1","Utilities_1","exports","configJSON","ChatViewController","BlockComponent","constructor","props","f","getChatListApiCallId","addUserToChatApiCallId","leaveChatApiCallId","sendMessageApiCallId","updateReadMessageApiCallId","apiToken","loginUserProfileId","putReadMessageApiCallId","chatTypeDM","conversationID","isStringNullOrBlank","string","b","length","showModal","setState","isVisibleModal","hideModal","hidePreviewModal","isVisiblePreviewModal","imageUrl","docRes","handleAccountIdInputChange","accountIdInput","handleMessageChange","message","handleFileChange","event","target","value","files","file","reader","FileReader","onload","readerEvent","_a","result","readAsDataURL","handleSendMessage","handleInsertImage","refrence","fileInputRef","current","click","addUserToChat","chatId","leaveChatRoom","sendChatMessage","receiverId","__awaiter","requestMessage","Message","getName","default","RestAPIRequestMessage","messageId","token","getStorageData","AsyncStorageKey","headerToken","header","APIRequest","jsonApiContentType","addData","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","httpPostMethod","apiEndPoint","APIEndPoint","endPointAPIPostChat","APIConstant","markQuestion","paramsReceiverID","markEqual","RestAPIResponceEndPointMessage","httpBody","RestAPIRequestBodyMessage","runEngine","sendMessage","id","changeNotificationStatus","muted","state","inputMessageProps","onChangeText","text","btnSendMessageProps","onPress","receiverUserID","doButtonBackPressed","navigation","goBack","receive","bind","subScribedMessages","SessionResponseMessage","RestAPIResponceMessage","NavigationPayLoadMessage","accountId","chatData","keyboardHeight","messageList","receiverUserName","receiverUserRole","receiverUserPic","receiverUserPoints","attachBuildingBlock","scrollViewRef","createRef","navigationParams","params","getReceiverData","receiverUser","userID","userName","userRole","userPic","userPoints","getChatList","refreshChatInterval","setInterval","componentDidMount","_super","call","userProfileId","profileUserID","isTypeDM","chatTypeDm","Boolean","componentWillUnmount","clearInterval","from","apiRequestCallId","getData","RestAPIResponceDataMessage","doActionForRestAPIMessage","SessionResponseToken","debugLog","responseData","SessionResponseData","responseJson","RestAPIResponceSuccessMessage","errorResponse","RestAPIResponceErrorMessage","parseApiCatchErrorResponse","errors","parseApiErrorResponse","data","attributes","conversation_id","getReadMessage","refreshConversationListScreen","httpGetMethod","endPointAPIGetDMChatList","httpPutMethod","conversationKey","paramsDMConversationID","paramsPMConversationID","endPointAPIPutReadMessage","NavigationMessage","NavigationPropsMessage","messageType","send"],"sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/ChatViewController.tsx"],"sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\nimport React, { ChangeEvent } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport {\n  InputProps\n} from \"@material-ui/core\";\nimport { AsyncStorageKey } from \"../../../components/src/AppGlobals\";\nimport { APIConstant, APIEndPoint, APIRequest } from \"../../../components/src/AppHelper/AppConstant\";\nimport { getStorageData } from \"../../../framework/src/Utilities\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\n// Customizable Area Start\nexport interface IChatData {\n  id: string;\n  attributes: {\n    id: number;\n    name: string;\n    is_notification_mute: boolean;\n    accounts_chats: [\n      {\n        id: string;\n        attributes: {\n          account_id: number;\n          muted: boolean;\n          unread_count: number;\n        };\n      }\n    ];\n    messages: IMessage[];\n  };\n  relationships: { accounts: { data: { id: string; type: string }[] } };\n}\n\nexport interface IMessage {\n  id: string;\n  type: \"conversation\";\n  attributes: {\n    id: number;\n    message: string;\n    user_profile_info_id: number;\n    conversation_id: number;\n    created_at: string;\n    updated_at: string;\n    is_mark_read: boolean;\n    profile_image: string | null;\n    user_name: string | null;\n  };\n}\n\nexport interface ReceiveUser {\n  userID: string,\n  userName: string,\n  userRole: string,\n  userPic: string,\n  userPoints: string,\n}\n// Customizable Area End\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  token: string;\n  chatId: number;\n  message: string;\n  accountIdInput: string;\n  accountId: number;\n  chatData: IChatData | null;\n  isVisibleModal: boolean;\n  isVisiblePreviewModal: boolean;\n  imageUrl: string;\n  docRes: unknown;\n  keyboardHeight: number;\n  muted: boolean | null;\n  messageList: IMessage[];\n  receiverUserID: string;\n  receiverUserName: string;\n  receiverUserRole: string;\n  receiverUserPic: string;\n  receiverUserPoints: string;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\nexport default class ChatViewController extends BlockComponent<Props, S, SS> {\n  // Customizable Area Start\n  getChatListApiCallId: string = \"\";\n  addUserToChatApiCallId: string = \"\";\n  leaveChatApiCallId: string = \"\";\n  sendMessageApiCallId: string = \"\";\n  \n  updateReadMessageApiCallId: string = \"\";\n  refreshChatInterval: unknown;\n  scrollViewRef: React.RefObject<ScrollView>;\n  fileInputRef: React.RefObject<InputProps & { click: Function }>;\n  apiToken: string = \"\";\n  loginUserProfileId: string = \"\"\n  putReadMessageApiCallId: string = \"\";\n  chatTypeDM: boolean = true;\n  conversationID: string = \"\";\n  navigationParams:any;\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    this.subScribedMessages = [\n      // Customizable Area Start\n      getName(MessageEnum.SessionResponseMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n      // Customizable Area End\n    ];\n\n    this.state = {\n      // Customizable Area Start\n      token: \"\",\n      chatId: 3,\n      message: \"\",\n      accountId: -1,\n      accountIdInput: \"\",\n      chatData: null,\n      isVisibleModal: false,\n      isVisiblePreviewModal: false,\n      imageUrl: \"\",\n      docRes: null,\n      keyboardHeight: 0,\n      muted: null,\n      messageList: [],\n      receiverUserID: \"\",\n      receiverUserName: \"\",\n      receiverUserRole: \"\",\n      receiverUserPic: \"\",\n      receiverUserPoints: \"\",\n\n      // Customizable Area End\n    };\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n    // Customizable Area Start\n    this.scrollViewRef = React.createRef();\n    this.fileInputRef = React.createRef();\n    this.navigationParams = this.props.navigation.state.params;\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n  getReceiverData(){\n    let receiverUser = this.navigationParams.receiverUser;\n    \n    this.setState(\n      {\n        receiverUserID: receiverUser.userID,\n        receiverUserName: receiverUser.userName,\n        receiverUserRole: receiverUser.userRole,\n        receiverUserPic: receiverUser.userPic,\n        receiverUserPoints: receiverUser.userPoints,\n      },\n      () => {\n        this.getChatList()\n        this.refreshChatInterval = setInterval(\n          () => this.getChatList(),\n          30000\n        );\n      }\n    );\n  }\n\n  async componentDidMount() {\n    super.componentDidMount();\n    const token = await getStorageData(AsyncStorageKey.headerToken);\n    this.apiToken = \"\" + token;\n    let userProfileId = await getStorageData(AsyncStorageKey.profileUserID);\n    this.loginUserProfileId = \"\" + userProfileId;\n    this.getReceiverData();\n    let isTypeDM = await getStorageData(AsyncStorageKey.chatTypeDm);\n    this.chatTypeDM = Boolean(isTypeDM);\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.refreshChatInterval as number);\n  }\n\n  isStringNullOrBlank = (string: string) => {\n    return !string || string.length === 0;\n  };\n\n  showModal = () => {\n    this.setState({ isVisibleModal: true });\n  };\n\n  hideModal = () => {\n    this.setState({ isVisibleModal: false });\n  };\n\n  hidePreviewModal = () => {\n    this.setState({ isVisiblePreviewModal: false, imageUrl: '', docRes: null });\n  };\n\n  handleAccountIdInputChange = (accountIdInput: string) => {\n    this.setState({ accountIdInput });\n  };\n\n  handleMessageChange = (message: string) => {\n    this.setState({ message });\n  };\n\n  handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value && event.target.files) {\n      const file = event.target.files[0] as Blob;\n      let reader = new FileReader();\n      reader.onload = (readerEvent) => {\n        this.setState({ imageUrl: readerEvent.target?.result as string, docRes: file, isVisiblePreviewModal: true });\n      };\n      reader.readAsDataURL(file);\n      this.setState({ docRes: file, isVisiblePreviewModal: true });\n    }\n    else {\n      this.setState({ imageUrl: \"\", docRes: null })\n    }\n  };\n\n  handleSendMessage = () => {\n  };\n\n  handleInsertImage = () => {\n    const refrence = this.fileInputRef.current;\n    if (refrence) {\n      refrence.click();\n    }\n  };\n\n  addUserToChat = (accountIdInput: string, chatId: number) => {\n  }\n\n  leaveChatRoom = (chatId: number) => {\n  }\n\n  sendChatMessage = async (receiverId: string, message: string, imageUrl?: string) => {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.sendMessageApiCallId = requestMessage.messageId;\n\n    let token = await getStorageData(AsyncStorageKey.headerToken);\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: token,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPostMethod\n    );\n\n    let apiEndPoint =\n      APIEndPoint.endPointAPIPostChat + APIConstant.markQuestion + APIConstant.paramsReceiverID + APIConstant.markEqual + receiverId\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n\n    let httpBody = { message: message };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(httpBody)\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  changeNotificationStatus = () => {\n    const { muted } = this.state;\n    if (muted === null) {\n      this.setState({ muted: true });\n    } else {\n      this.setState({ muted: !muted });\n    }\n  };\n\n  inputMessageProps = {\n    onChangeText: (text: string) => {\n      this.setState({ message: text });\n    },\n  };\n\n  btnSendMessageProps = {\n    onPress: () => {\n      this.sendChatMessage(this.state.receiverUserID, this.state.message);\n      this.setState({ message: \"\", imageUrl: \"\", isVisiblePreviewModal: false });\n    },\n  };\n\n  async receive(from: string, message: Message) {\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n\n      if (apiRequestCallId === this.sendMessageApiCallId\n        || apiRequestCallId === this.getChatListApiCallId\n        || apiRequestCallId === this.addUserToChatApiCallId\n        || apiRequestCallId === this.putReadMessageApiCallId\n        || apiRequestCallId === this.leaveChatApiCallId\n        ) {\n          this.doActionForRestAPIMessage(message, apiRequestCallId)\n      }\n    }\n    else if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      const token: string = message.getData(\n        getName(MessageEnum.SessionResponseToken)\n      );\n      runEngine.debugLog(\"ChatViewController receive TOKEN\", token);\n      const responseData: string = message.getData(\n        getName(MessageEnum.SessionResponseData)\n      );\n      runEngine.debugLog(\"ChatViewController receive responseData\", responseData);\n    }\n  }\n\n  doActionForRestAPIMessage(message: Message, apiRequestCallId:string){\n    const responseJson = message.getData(\n      getName(MessageEnum.RestAPIResponceSuccessMessage)\n    );\n    const errorResponse = message.getData(\n      getName(MessageEnum.RestAPIResponceErrorMessage)\n    );\n    if (errorResponse) this.parseApiCatchErrorResponse(errorResponse);\n    if (responseJson?.errors) this.parseApiErrorResponse(responseJson);\n\n    if (responseJson) {\n     if (\n        apiRequestCallId === this.sendMessageApiCallId\n      ) {\n        this.getChatList();\n      }\n      else if (\n        apiRequestCallId === this.getChatListApiCallId && responseJson.data\n      ) {\n        this.setState(\n          {\n            messageList: responseJson.data\n          },\n          () => {\n            if (!this.conversationID && this.state.messageList.length > 0) {\n              //This function call one time after the message list  \n              this.conversationID = \"\" + this.state.messageList[0].attributes.conversation_id\n              this.getReadMessage();\n            }\n          }\n        );\n      }\n      else if (\n        apiRequestCallId === this.addUserToChatApiCallId\n      ) {\n        this.hideModal();\n      }\n      else if (\n        apiRequestCallId === this.putReadMessageApiCallId\n      ) {\n        //Callback message for conversation screen \n        this.refreshConversationListScreen()\n      }\n      else if (apiRequestCallId === this.leaveChatApiCallId) {\n        this.props.navigation.goBack();\n      }\n    }\n  }\n\n  doButtonBackPressed = () => {\n    this.props.navigation.goBack();\n  };\n\n  async getChatList() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getChatListApiCallId = requestMessage.messageId;\n\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: this.apiToken,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpGetMethod\n    );\n\n    let apiEndPoint = APIEndPoint.endPointAPIGetDMChatList +\n      APIConstant.markQuestion +\n      APIConstant.paramsReceiverID +\n      APIConstant.markEqual +\n      this.state.receiverUserID;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  async getReadMessage() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.putReadMessageApiCallId = requestMessage.messageId;\n\n    let token = await getStorageData(AsyncStorageKey.headerToken);\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: token,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPutMethod\n    );\n\n    let conversationKey = \"\";\n    if (this.chatTypeDM) {\n      conversationKey = APIConstant.paramsDMConversationID\n    } else {\n      conversationKey = APIConstant.paramsPMConversationID\n    }\n    let apiEndPoint = APIEndPoint.endPointAPIPutReadMessage\n      + APIConstant.markQuestion\n      + conversationKey\n      + APIConstant.markEqual + this.conversationID\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  refreshConversationListScreen() {\n    const message = new Message(getName(MessageEnum.NavigationMessage));\n    message.addData(getName(MessageEnum.NavigationPropsMessage), {\n      messageType: \"readMessage\",\n      conversationID: this.conversationID\n    });\n    this.send(message);\n  }\n  // Customizable Area End\n}\n"],"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"}