{"version":3,"names":["deepDiffer","one","two","maxDepth","arguments","length","undefined","constructor","Array","isArray","len","ii","key","twoKey","module","exports"],"sources":["deepDiffer.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function(\n  one: any,\n  two: any,\n  maxDepth: number = -1,\n): boolean {\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nmodule.exports = deepDiffer;\n"],"mappings":"AAUA,YAAY;AAKZ,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CACdC,GAAQ,EACRC,GAAQ,EAEC;EAAA,IADTC,QAAgB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAErB,IAAID,QAAQ,KAAK,CAAC,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAIF,GAAG,KAAKC,GAAG,EAAE;IAEf,OAAO,KAAK;EACd;EACA,IAAI,OAAOD,GAAG,KAAK,UAAU,IAAI,OAAOC,GAAG,KAAK,UAAU,EAAE;IAE1D,OAAO,KAAK;EACd;EACA,IAAI,OAAOD,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IAE3C,OAAOA,GAAG,KAAKC,GAAG;EACpB;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IAG3C,OAAO,IAAI;EACb;EACA,IAAID,GAAG,CAACM,WAAW,KAAKL,GAAG,CAACK,WAAW,EAAE;IACvC,OAAO,IAAI;EACb;EACA,IAAIC,KAAK,CAACC,OAAO,CAACR,GAAG,CAAC,EAAE;IAEtB,IAAMS,GAAG,GAAGT,GAAG,CAACI,MAAM;IACtB,IAAIH,GAAG,CAACG,MAAM,KAAKK,GAAG,EAAE;MACtB,OAAO,IAAI;IACb;IACA,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGD,GAAG,EAAEC,EAAE,EAAE,EAAE;MAC/B,IAAIX,UAAU,CAACC,GAAG,CAACU,EAAE,CAAC,EAAET,GAAG,CAACS,EAAE,CAAC,EAAER,QAAQ,GAAG,CAAC,CAAC,EAAE;QAC9C,OAAO,IAAI;MACb;IACF;EACF,CAAC,MAAM;IACL,KAAK,IAAMS,GAAG,IAAIX,GAAG,EAAE;MACrB,IAAID,UAAU,CAACC,GAAG,CAACW,GAAG,CAAC,EAAEV,GAAG,CAACU,GAAG,CAAC,EAAET,QAAQ,GAAG,CAAC,CAAC,EAAE;QAChD,OAAO,IAAI;MACb;IACF;IACA,KAAK,IAAMU,MAAM,IAAIX,GAAG,EAAE;MAGxB,IAAID,GAAG,CAACY,MAAM,CAAC,KAAKP,SAAS,IAAIJ,GAAG,CAACW,MAAM,CAAC,KAAKP,SAAS,EAAE;QAC1D,OAAO,IAAI;MACb;IACF;EACF;EACA,OAAO,KAAK;AACd,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAGf,UAAU"}