14b574a80841b85f68d37dd995dafe66
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScreenWidth = exports.ScreenHeight = void 0;
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function get() {
    return _color.default;
  }
});
exports.conditionalStyle = void 0;
Object.defineProperty(exports, "getIconType", {
  enumerable: true,
  get: function get() {
    return _getIconType.default;
  }
});
exports.isIOS = void 0;
Object.defineProperty(exports, "nodeType", {
  enumerable: true,
  get: function get() {
    return _nodeType.default;
  }
});
Object.defineProperty(exports, "normalizeText", {
  enumerable: true,
  get: function get() {
    return _normalizeText.default;
  }
});
exports.patchWebProps = void 0;
Object.defineProperty(exports, "renderNode", {
  enumerable: true,
  get: function get() {
    return _renderNode.default;
  }
});
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _renderNode = _interopRequireDefault(require("./renderNode"));
var _getIconType = _interopRequireDefault(require("./getIconType"));
var _normalizeText = _interopRequireDefault(require("./normalizeText"));
var _nodeType = _interopRequireDefault(require("./nodeType"));
var _excluded = ["updateTheme", "replaceTheme", "onClear"];
var Screen = _reactNative.Dimensions.get('window');
var ScreenWidth = Screen.width;
exports.ScreenWidth = ScreenWidth;
var ScreenHeight = Screen.height;
exports.ScreenHeight = ScreenHeight;
var isIOS = _reactNative.Platform.OS === 'ios';
exports.isIOS = isIOS;
var conditionalStyle = function conditionalStyle(condition, style) {
  return condition ? style : {};
};
exports.conditionalStyle = conditionalStyle;
var patchWebProps = function patchWebProps(_ref) {
  var updateTheme = _ref.updateTheme,
    replaceTheme = _ref.replaceTheme,
    onClear = _ref.onClear,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return rest;
};
exports.patchWebProps = patchWebProps;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2NvbG9yIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9yZW5kZXJOb2RlIiwiX2dldEljb25UeXBlIiwiX25vcm1hbGl6ZVRleHQiLCJfbm9kZVR5cGUiLCJfZXhjbHVkZWQiLCJTY3JlZW4iLCJEaW1lbnNpb25zIiwiZ2V0IiwiU2NyZWVuV2lkdGgiLCJ3aWR0aCIsImV4cG9ydHMiLCJTY3JlZW5IZWlnaHQiLCJoZWlnaHQiLCJpc0lPUyIsIlBsYXRmb3JtIiwiT1MiLCJjb25kaXRpb25hbFN0eWxlIiwiY29uZGl0aW9uIiwic3R5bGUiLCJwYXRjaFdlYlByb3BzIiwiX3JlZiIsInVwZGF0ZVRoZW1lIiwicmVwbGFjZVRoZW1lIiwib25DbGVhciIsInJlc3QiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBsYXRmb3JtLCBEaW1lbnNpb25zIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBjb2xvciBmcm9tICdjb2xvcic7XG5pbXBvcnQgcmVuZGVyTm9kZSBmcm9tICcuL3JlbmRlck5vZGUnO1xuaW1wb3J0IGdldEljb25UeXBlIGZyb20gJy4vZ2V0SWNvblR5cGUnO1xuaW1wb3J0IG5vcm1hbGl6ZVRleHQgZnJvbSAnLi9ub3JtYWxpemVUZXh0JztcbmltcG9ydCBub2RlVHlwZSBmcm9tICcuL25vZGVUeXBlJztcblxuY29uc3QgU2NyZWVuID0gRGltZW5zaW9ucy5nZXQoJ3dpbmRvdycpO1xuY29uc3QgU2NyZWVuV2lkdGggPSBTY3JlZW4ud2lkdGg7XG5jb25zdCBTY3JlZW5IZWlnaHQgPSBTY3JlZW4uaGVpZ2h0O1xuY29uc3QgaXNJT1MgPSBQbGF0Zm9ybS5PUyA9PT0gJ2lvcyc7XG5cbmNvbnN0IGNvbmRpdGlvbmFsU3R5bGUgPSAoY29uZGl0aW9uLCBzdHlsZSkgPT4gKGNvbmRpdGlvbiA/IHN0eWxlIDoge30pO1xuXG5leHBvcnQgY29uc3QgcGF0Y2hXZWJQcm9wcyA9ICh7XG4gIHVwZGF0ZVRoZW1lLFxuICByZXBsYWNlVGhlbWUsXG4gIG9uQ2xlYXIsXG4gIC4uLnJlc3Rcbn0pID0+IHtcbiAgcmV0dXJuIHJlc3Q7XG59O1xuXG5leHBvcnQge1xuICByZW5kZXJOb2RlLFxuICBnZXRJY29uVHlwZSxcbiAgbm9ybWFsaXplVGV4dCxcbiAgbm9kZVR5cGUsXG4gIFNjcmVlbldpZHRoLFxuICBTY3JlZW5IZWlnaHQsXG4gIGlzSU9TLFxuICBjb25kaXRpb25hbFN0eWxlLFxuICBjb2xvcixcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLFlBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLFdBQUEsR0FBQUQsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFJLFlBQUEsR0FBQUYsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFLLGNBQUEsR0FBQUgsc0JBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFNLFNBQUEsR0FBQUosc0JBQUEsQ0FBQUYsT0FBQTtBQUFrQyxJQUFBTyxTQUFBO0FBRWxDLElBQU1DLE1BQU0sR0FBR0MsdUJBQVUsQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsQ0FBQztBQUN2QyxJQUFNQyxXQUFXLEdBQUdILE1BQU0sQ0FBQ0ksS0FBSztBQUFDQyxPQUFBLENBQUFGLFdBQUEsR0FBQUEsV0FBQTtBQUNqQyxJQUFNRyxZQUFZLEdBQUdOLE1BQU0sQ0FBQ08sTUFBTTtBQUFDRixPQUFBLENBQUFDLFlBQUEsR0FBQUEsWUFBQTtBQUNuQyxJQUFNRSxLQUFLLEdBQUdDLHFCQUFRLENBQUNDLEVBQUUsS0FBSyxLQUFLO0FBQUNMLE9BQUEsQ0FBQUcsS0FBQSxHQUFBQSxLQUFBO0FBRXBDLElBQU1HLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBZ0JBLENBQUlDLFNBQVMsRUFBRUMsS0FBSztFQUFBLE9BQU1ELFNBQVMsR0FBR0MsS0FBSyxHQUFHLENBQUMsQ0FBQztBQUFBLENBQUM7QUFBQ1IsT0FBQSxDQUFBTSxnQkFBQSxHQUFBQSxnQkFBQTtBQUVqRSxJQUFNRyxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQUFDLElBQUEsRUFLcEI7RUFBQSxJQUpKQyxXQUFXLEdBQUFELElBQUEsQ0FBWEMsV0FBVztJQUNYQyxZQUFZLEdBQUFGLElBQUEsQ0FBWkUsWUFBWTtJQUNaQyxPQUFPLEdBQUFILElBQUEsQ0FBUEcsT0FBTztJQUNKQyxJQUFJLE9BQUFDLHlCQUFBLENBQUFDLE9BQUEsRUFBQU4sSUFBQSxFQUFBaEIsU0FBQTtFQUVQLE9BQU9vQixJQUFJO0FBQ2IsQ0FBQztBQUFDZCxPQUFBLENBQUFTLGFBQUEsR0FBQUEsYUFBQSJ9