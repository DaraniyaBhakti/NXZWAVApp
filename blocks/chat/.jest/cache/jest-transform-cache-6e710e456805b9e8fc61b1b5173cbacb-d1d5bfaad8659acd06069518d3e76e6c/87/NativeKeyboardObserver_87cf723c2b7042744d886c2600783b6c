b8e8bb0bdd10cf183303fccd6d76d7f7
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = TurboModuleRegistry.get('KeyboardObserver');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiTmF0aXZlS2V5Ym9hcmRPYnNlcnZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdHlwZSB7VHVyYm9Nb2R1bGV9IGZyb20gJy4uLy4uL1R1cmJvTW9kdWxlL1JDVEV4cG9ydCc7XG5pbXBvcnQgKiBhcyBUdXJib01vZHVsZVJlZ2lzdHJ5IGZyb20gJy4uLy4uL1R1cmJvTW9kdWxlL1R1cmJvTW9kdWxlUmVnaXN0cnknO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICthZGRMaXN0ZW5lcjogKGV2ZW50TmFtZTogc3RyaW5nKSA9PiB2b2lkO1xuICArcmVtb3ZlTGlzdGVuZXJzOiAoY291bnQ6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgKFR1cmJvTW9kdWxlUmVnaXN0cnkuZ2V0PFNwZWM+KCdLZXlib2FyZE9ic2VydmVyJyk6ID9TcGVjKTtcbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFBQ0EsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsT0FBQTtBQUdiLElBQUFDLG1CQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFBNkUsU0FBQUMseUJBQUFDLFdBQUEsZUFBQUMsT0FBQSxrQ0FBQUMsaUJBQUEsT0FBQUQsT0FBQSxRQUFBRSxnQkFBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFILHdCQUFBTyxHQUFBLEVBQUFKLFdBQUEsU0FBQUEsV0FBQSxJQUFBSSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxXQUFBRCxHQUFBLFFBQUFBLEdBQUEsb0JBQUFBLEdBQUEsd0JBQUFBLEdBQUEsNEJBQUFULE9BQUEsRUFBQVMsR0FBQSxVQUFBRSxLQUFBLEdBQUFQLHdCQUFBLENBQUFDLFdBQUEsT0FBQU0sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUgsR0FBQSxZQUFBRSxLQUFBLENBQUFFLEdBQUEsQ0FBQUosR0FBQSxTQUFBSyxNQUFBLFdBQUFDLHFCQUFBLEdBQUFuQixNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBb0Isd0JBQUEsV0FBQUMsR0FBQSxJQUFBUixHQUFBLFFBQUFRLEdBQUEsa0JBQUFyQixNQUFBLENBQUFzQixTQUFBLENBQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBWCxHQUFBLEVBQUFRLEdBQUEsU0FBQUksSUFBQSxHQUFBTixxQkFBQSxHQUFBbkIsTUFBQSxDQUFBb0Isd0JBQUEsQ0FBQVAsR0FBQSxFQUFBUSxHQUFBLGNBQUFJLElBQUEsS0FBQUEsSUFBQSxDQUFBUixHQUFBLElBQUFRLElBQUEsQ0FBQUMsR0FBQSxLQUFBMUIsTUFBQSxDQUFBQyxjQUFBLENBQUFpQixNQUFBLEVBQUFHLEdBQUEsRUFBQUksSUFBQSxZQUFBUCxNQUFBLENBQUFHLEdBQUEsSUFBQVIsR0FBQSxDQUFBUSxHQUFBLFNBQUFILE1BQUEsQ0FBQWQsT0FBQSxHQUFBUyxHQUFBLE1BQUFFLEtBQUEsSUFBQUEsS0FBQSxDQUFBVyxHQUFBLENBQUFiLEdBQUEsRUFBQUssTUFBQSxZQUFBQSxNQUFBO0FBQUEsSUFBQVMsUUFBQSxHQU83RHRCLG1CQUFtQixDQUFDWSxHQUFHLENBQU8sa0JBQWtCLENBQUM7QUFBQWYsT0FBQSxDQUFBRSxPQUFBLEdBQUF1QixRQUFBIn0=