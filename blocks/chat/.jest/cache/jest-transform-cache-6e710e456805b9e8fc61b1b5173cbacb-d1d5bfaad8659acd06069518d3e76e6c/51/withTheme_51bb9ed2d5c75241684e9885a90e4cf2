ea6f8920372c899a8b706371c13a981d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireDefault(require("react"));
var _deepmerge = _interopRequireDefault(require("deepmerge"));
var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));
var _ThemeProvider = require("./ThemeProvider");
var _theme = _interopRequireDefault(require("./theme"));
var _excluded = ["forwardedRef", "children"];
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var isClassComponent = function isClassComponent(Component) {
  return Boolean(Component.prototype && Component.prototype.isReactComponent);
};
var withTheme = function withTheme(WrappedComponent, themeKey) {
  var ThemedComponent = function (_React$Component) {
    (0, _inherits2.default)(ThemedComponent, _React$Component);
    var _super = _createSuper(ThemedComponent);
    function ThemedComponent() {
      (0, _classCallCheck2.default)(this, ThemedComponent);
      return _super.apply(this, arguments);
    }
    (0, _createClass2.default)(ThemedComponent, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
          forwardedRef = _this$props.forwardedRef,
          children = _this$props.children,
          rest = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
        return _react.default.createElement(_ThemeProvider.ThemeConsumer, null, function (context) {
          if (!context) {
            var _props = (0, _extends2.default)({}, rest, {
              theme: _theme.default,
              children: children
            });
            return isClassComponent(WrappedComponent) ? _react.default.createElement(WrappedComponent, (0, _extends2.default)({
              ref: forwardedRef
            }, _props)) : _react.default.createElement(WrappedComponent, _props);
          }
          var theme = context.theme,
            updateTheme = context.updateTheme,
            replaceTheme = context.replaceTheme;
          var props = (0, _extends2.default)({
            theme: theme,
            updateTheme: updateTheme,
            replaceTheme: replaceTheme
          }, (0, _deepmerge.default)(themeKey && theme[themeKey] || {}, rest), {
            children: children
          });
          if (isClassComponent(WrappedComponent)) {
            return _react.default.createElement(WrappedComponent, (0, _extends2.default)({
              ref: forwardedRef
            }, props));
          }
          return _react.default.createElement(WrappedComponent, props);
        });
      }
    }]);
    return ThemedComponent;
  }(_react.default.Component);
  var name = themeKey ? "Themed." + themeKey : "Themed." + (WrappedComponent.displayName || WrappedComponent.name || 'Component');
  if (isClassComponent(WrappedComponent)) {
    var forwardRef = function forwardRef(props, ref) {
      return _react.default.createElement(ThemedComponent, (0, _extends2.default)({}, props, {
        forwardedRef: ref
      }));
    };
    forwardRef.displayName = name;
    return (0, _hoistNonReactStatics.default)(_react.default.forwardRef(forwardRef), WrappedComponent);
  }
  ThemedComponent.displayName = name;
  return ThemedComponent;
};
var _default = withTheme;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,