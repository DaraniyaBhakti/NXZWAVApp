{"version":3,"file":"/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/ChatView.web.steps.tsx","sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/ChatView.web.steps.tsx"],"names":[],"mappings":"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","sourcesContent":["// import { defineFeature, loadFeature } from \"jest-cucumber\";\n// import { shallow, ShallowWrapper } from \"enzyme\";\n\n// import * as helpersChatViewWeb from \"../../../../framework/src/Helpers\";\n// import { runEngine } from \"../../../../framework/src/RunEngine\";\n// import { Message } from \"../../../../framework/src/Message\";\n\n// import MessageEnum, {\n//   getName,\n// } from \"../../../../framework/src/Messages/MessageEnum\";\n// import React from \"react\";\n// import ChatView from \"../../src/ChatView.web\";\n// import { IChatData } from \"../../src/ChatViewController\";\n\n// const paramsChatViewWeb = {\n//   receiverUser: \"ReceiveUser\",\n//   userID:\"7\",\n//   userName:\"name\",\n//   userPic:\"\",\n//   userPoints:\"12\",\n//   userRole:\"designer\"\n// };\n\n// const testChatData: IChatData = {\n//   id: \"17\",\n//   attributes: {\n//     id: 1,\n//     name: \"test group\",\n//     is_notification_mute: true,\n//     accounts_chats: [\n//       { id: \"1\", attributes: { account_id: 1, muted: true, unread_count: 5 } },\n//     ],\n//     messages: [\n//       {\n//         id: \"1\",\n//         type: \"conversation\",\n//         attributes: {\n//           id: 1,\n//           message: \"hello\",\n//           user_profile_info_id: 1,\n//           conversation_id: 1,\n//           created_at: \"2022-05-02T21:31:05.047Z\",\n//           updated_at: \"2022-05-03T02:45:09.837Z\",\n//           is_mark_read: true,\n//           profile_image: \"\",\n//           user_name: \"\"\n//         },\n//       },\n//     ],\n//   },\n//   relationships: {\n//     accounts: {\n//       data: [\n//         {\n//           id: \"1\",\n//           type: \"account\",\n//         },\n//       ],\n//     },\n//   },\n// };\n\n// const screenPropsChatViewWeb = {\n//   navigation: {\n//     navigate: jest.fn(),\n//     setOptions: jest.fn(),\n//     push: jest.fn(),\n//     addListener: jest.fn().mockImplementation((event, callback) => {\n//       callback();\n//     }),\n//     onGoBack: jest.fn(),\n//     state: {\n//       params: {\n//         receiverUser: paramsChatViewWeb.receiverUser,\n//         userID:paramsChatViewWeb.userID,\n//         userName:paramsChatViewWeb.userName,\n//         userPic:paramsChatViewWeb.userPic,\n//         userPoints:paramsChatViewWeb.userPoints,\n//         userRole:paramsChatViewWeb.userRole\n//       },\n//     },\n//   },\n//   id: \"ChatView\",\n// };\n\n// const featureChatViewWeb = loadFeature(\n//   \"./__tests__/features/ChatView-scenario.web.feature\"\n// );\n\n// defineFeature(featureChatViewWeb, (test) => {\n//   beforeEach(() => {\n//     jest.resetModules();\n//     jest.clearAllMocks();\n//     jest.doMock(\"react-native\", () => ({ Platform: { OS: \"web\" } }));\n//     jest.spyOn(helpersChatViewWeb, \"getOS\").mockImplementation(() => \"web\");\n//     jest.spyOn(runEngine, \"sendMessage\");\n//   });\n\n//   test(\"User navigates to ChatView\", ({ given, when, then }) => {\n//     let chatViewWebWrapper: ShallowWrapper;\n//     let instanceChatViewWeb: ChatView;\n//     let fileChatViewWeb: Blob;\n\n//     given(\"I am a User loading ChatView\", () => {\n//       chatViewWebWrapper = shallow(<ChatView {...screenPropsChatViewWeb} />);\n//     });\n\n//     when(\"I navigate to ChatView\", () => {\n//       instanceChatViewWeb = chatViewWebWrapper.instance() as ChatView;\n\n//       const accountIdInputChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"inputAccountID\"\n//       );\n//       accountIdInputChatViewWeb.simulate(\"change\", \"2\");\n//       accountIdInputChatViewWeb.simulate(\"change\", \"hey\");\n      \n//       const addAccountButtonChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnAddAccount\"\n//       );\n//       addAccountButtonChatViewWeb.simulate(\"click\");\n\n//       const buttonComponentChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnCloseModal\"\n//       );\n//       buttonComponentChatViewWeb.simulate(\"click\");\n\n//       const buttonClosePreviewComponentChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnClosePreviewModal\"\n//       );\n//       buttonClosePreviewComponentChatViewWeb.simulate(\"click\");\n\n//       const messageInputChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"inputImageMessage\"\n//       );\n//       messageInputChatViewWeb.simulate(\"change\", \"Hi\");\n\n//       const messageInputmChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"inputMessage\"\n//       );\n//       messageInputmChatViewWeb.simulate(\"change\", \"Hi\");\n//     });\n\n//     then(\"ChatView will load\", () => {\n//       instanceChatViewWeb.setState({ chatData: testChatData });\n//       const buttonComponentChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnShowAddModal\"\n//       );\n//       buttonComponentChatViewWeb.simulate(\"click\");\n//     });\n\n//     when(\"I click on the btnInsertImage button\", () => {\n//       const insertButtonChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnInsertImage\"\n//       );\n//       insertButtonChatViewWeb.simulate(\"click\");\n\n//       const buttonComponentSendChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnSendImageMessage\"\n//       );\n//       buttonComponentSendChatViewWeb.simulate(\"click\");\n//     });\n\n//     then(\"I can change image file\", () => {\n//       const fileInputChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"FileInput\"\n//       );\n//       fileInputChatViewWeb.simulate(\"change\", { target: { value: '', files: [] } });\n//       fileChatViewWeb = new Blob([new ArrayBuffer(1)]);\n//       fileInputChatViewWeb.simulate(\"change\", { target: { value: 'T', files: [fileChatViewWeb] } });\n//     });\n\n//     when(\"I click on the leaveChat button\", () => {\n//       const buttonComponentChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnLeaveChat\"\n//       );\n//       buttonComponentChatViewWeb.simulate(\"click\");\n//     });\n\n//     then(\"a call to leave the chat room will be made\", () => {\n//       const leaveChatRoomApiMessageChatViewWeb = new Message(\n//         getName(MessageEnum.RestAPIResponceMessage)\n//       );\n\n//       leaveChatRoomApiMessageChatViewWeb.addData(\n//         getName(MessageEnum.RestAPIResponceDataMessage),\n//         leaveChatRoomApiMessageChatViewWeb.messageId\n//       );\n\n//       instanceChatViewWeb.leaveChatApiCallId = leaveChatRoomApiMessageChatViewWeb.messageId;\n//       runEngine.sendMessage(\"Unit Test\", leaveChatRoomApiMessageChatViewWeb);\n\n//       instanceChatViewWeb.setState({message:\"\"})\n//       const buttonComponentSendChatViewWeb = chatViewWebWrapper.findWhere(\n//         (node) => node.prop(\"data-test-id\") === \"btnSendImageMessage\"\n//       );\n//       buttonComponentSendChatViewWeb.simulate(\"click\");\n//       instanceChatViewWeb.handleMessageChange(\"message\")\n\n\n\n//     });\n  \n//     then(\"I can leave the screen\", () => {\n//       instanceChatViewWeb.componentWillUnmount()\n//     });\n//   });\n// });"]}