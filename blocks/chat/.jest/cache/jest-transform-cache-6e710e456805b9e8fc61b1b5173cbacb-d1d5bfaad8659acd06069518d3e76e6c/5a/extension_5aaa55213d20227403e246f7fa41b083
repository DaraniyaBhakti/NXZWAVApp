b1d2ca1df3ceb41b29d712f7150d34d6
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createExtension = createExtension;
var EXCLUDED_METHODS = ['getSingle', 'setSingle', 'getMany', 'setMany', 'removeSingle', 'removeMany', 'getKeys', 'dropStorage'];
function createExtension(storageInstance) {
  var propertyNames = Object.getOwnPropertyNames(storageInstance).filter(function (propName) {
    return EXCLUDED_METHODS.indexOf(propName) === -1 && !propName.startsWith('_') && typeof storageInstance[propName] === 'function';
  });
  var extension = {};
  propertyNames.forEach(function (propName) {
    var desc = {
      enumerable: true,
      get: function get() {
        return storageInstance[propName].bind(storageInstance);
      }
    };
    Object.defineProperty(extension, propName, desc);
  });
  Object.seal(extension);
  return extension;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFWENMVURFRF9NRVRIT0RTIiwiY3JlYXRlRXh0ZW5zaW9uIiwic3RvcmFnZUluc3RhbmNlIiwicHJvcGVydHlOYW1lcyIsIk9iamVjdCIsImdldE93blByb3BlcnR5TmFtZXMiLCJmaWx0ZXIiLCJwcm9wTmFtZSIsImluZGV4T2YiLCJzdGFydHNXaXRoIiwiZXh0ZW5zaW9uIiwiZm9yRWFjaCIsImRlc2MiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiYmluZCIsImRlZmluZVByb3BlcnR5Iiwic2VhbCJdLCJzb3VyY2VzIjpbIi4uL3NyYy9leHRlbnNpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFJlYWN0IE5hdGl2ZSBDb21tdW5pdHkuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5pbXBvcnQge0V4dGVuc2lvblR5cGUsIElTdG9yYWdlQmFja2VuZH0gZnJvbSAnLi4vdHlwZXMnO1xuXG4vLyBNZXRob2RzIGF2YWlsYWJsZSBpbiBzdG9yYWdlIEFQSSwgdG8gYmUgZXhjbHVkZWQgZnJvbSB0aGUgZXh0ZW5zaW9uXG5jb25zdCBFWENMVURFRF9NRVRIT0RTID0gW1xuICAnZ2V0U2luZ2xlJyxcbiAgJ3NldFNpbmdsZScsXG4gICdnZXRNYW55JyxcbiAgJ3NldE1hbnknLFxuICAncmVtb3ZlU2luZ2xlJyxcbiAgJ3JlbW92ZU1hbnknLFxuICAnZ2V0S2V5cycsXG4gICdkcm9wU3RvcmFnZScsXG5dO1xuXG4vKlxuICogRXh0ZW5zaW9uIGlzIGFuIG9iamVjdCBjb250YWluaW5nICdwdWJsaWMnLCBmdW5jdGlvbi10eXBlIHByb3BlcnRpZXMgb2YgU3RvcmFnZSBpbnN0YW5jZVxuICogVG8gcHJvcGVydHkgYmUgaW5jbHVkZSBpbiB0aGUgZXh0ZW5zaW9uLCBpdCBoYXMgdG8gbWVldCB0aHJlZSBjb25kaXRpb25zOlxuICogLSBoYXMgcHVibGljIGFjY2Vzc29yXG4gKiAtIGhhcyB0byBiZSBhIGZ1bmN0aW9uXG4gKiAtIGNhbm5vdCBzdGFydCB3aXRoIGFuIHVuZGVyc2NvcmUgKGNvbnZlbnRpb24gY29uc2lkZXJlZCBwcml2YXRlIGluIEpTKVxuICpcbiAqIEFsbCBtZXRob2RzIGluIHRoZSBleHRlbnNpb25zIGFyZSBjYWxsZWQgaW4gU3RvcmFnZSBpbnN0YW5jZSBjb250ZXh0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFeHRlbnNpb248VCBleHRlbmRzIElTdG9yYWdlQmFja2VuZD4oXG4gIHN0b3JhZ2VJbnN0YW5jZTogVCxcbik6IEV4dGVuc2lvblR5cGU8VD4ge1xuICBjb25zdCBwcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoc3RvcmFnZUluc3RhbmNlKS5maWx0ZXIoXG4gICAgcHJvcE5hbWUgPT4ge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgRVhDTFVERURfTUVUSE9EUy5pbmRleE9mKHByb3BOYW1lKSA9PT0gLTEgJiZcbiAgICAgICAgIXByb3BOYW1lLnN0YXJ0c1dpdGgoJ18nKSAmJlxuICAgICAgICAvLyBAdHMtaWdub3JlIHRoaXMgaXMgYSBwcm9wZXJ0eSBvbiB0aGUgaW5zdGFuY2VcbiAgICAgICAgdHlwZW9mIHN0b3JhZ2VJbnN0YW5jZVtwcm9wTmFtZV0gPT09ICdmdW5jdGlvbidcbiAgICAgICk7XG4gICAgfSxcbiAgKTtcblxuICBsZXQgZXh0ZW5zaW9uID0ge307XG4gIHByb3BlcnR5TmFtZXMuZm9yRWFjaChwcm9wTmFtZSA9PiB7XG4gICAgY29uc3QgZGVzYyA9IHtcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBAdHMtaWdub3JlIHRoaXMgaXMgYSBwcm9wZXJ0eSBvbiB0aGUgaW5zdGFuY2VcbiAgICAgICAgcmV0dXJuIHN0b3JhZ2VJbnN0YW5jZVtwcm9wTmFtZV0uYmluZChzdG9yYWdlSW5zdGFuY2UpO1xuICAgICAgfSxcbiAgICB9O1xuXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4dGVuc2lvbiwgcHJvcE5hbWUsIGRlc2MpO1xuICB9KTtcblxuICBPYmplY3Quc2VhbChleHRlbnNpb24pO1xuICByZXR1cm4gZXh0ZW5zaW9uIGFzIEV4dGVuc2lvblR5cGU8VD47XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQVVBLElBQU1BLGdCQUFnQixHQUFHLENBQ3ZCLFdBRHVCLEVBRXZCLFdBRnVCLEVBR3ZCLFNBSHVCLEVBSXZCLFNBSnVCLEVBS3ZCLGNBTHVCLEVBTXZCLFlBTnVCLEVBT3ZCLFNBUHVCLEVBUXZCLGFBUnVCLENBQXpCO0FBb0JPLFNBQVNDLGVBQVRBLENBQ0xDLGVBREssRUFFYTtFQUNsQixJQUFNQyxhQUFhLEdBQUdDLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkJILGVBQTNCLEVBQTRDSSxNQUE1QyxDQUNwQixVQUFBQyxRQUFRLEVBQUk7SUFDVixPQUNFUCxnQkFBZ0IsQ0FBQ1EsT0FBakIsQ0FBeUJELFFBQXpCLE1BQXVDLENBQUMsQ0FBeEMsSUFDQSxDQUFDQSxRQUFRLENBQUNFLFVBQVQsQ0FBb0IsR0FBcEIsQ0FERCxJQUdBLE9BQU9QLGVBQWUsQ0FBQ0ssUUFBRCxDQUF0QixLQUFxQyxVQUp2QztFQU1ELENBUm1CLENBQXRCO0VBV0EsSUFBSUcsU0FBUyxHQUFHLEVBQWhCO0VBQ0FQLGFBQWEsQ0FBQ1EsT0FBZCxDQUFzQixVQUFBSixRQUFRLEVBQUk7SUFDaEMsSUFBTUssSUFBSSxHQUFHO01BQ1hDLFVBQVUsRUFBRSxJQUREO01BRVhDLEdBQUcsRUFBRSxTQUFBQSxJQUFBLEVBQVc7UUFFZCxPQUFPWixlQUFlLENBQUNLLFFBQUQsQ0FBZixDQUEwQlEsSUFBMUIsQ0FBK0JiLGVBQS9CLENBQVA7TUFDRDtJQUxVLENBQWI7SUFRQUUsTUFBTSxDQUFDWSxjQUFQLENBQXNCTixTQUF0QixFQUFpQ0gsUUFBakMsRUFBMkNLLElBQTNDO0VBQ0QsQ0FWRDtFQVlBUixNQUFNLENBQUNhLElBQVAsQ0FBWVAsU0FBWjtFQUNBLE9BQU9BLFNBQVA7QUFDRCJ9