{"version":3,"names":["_interopRequireDefault","require","_toConsumableArray2","_classCallCheck2","_createClass2","ErrorUtils","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","warnOnce","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","MessageQueue","default","_lazyCallableModules","_queue","_successCallbacks","Map","_failureCallbacks","_callID","_lastFlush","_eventLoopStartTime","Date","now","_immediatesCallback","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","callFunctionReturnFlushedQueue","bind","callFunctionReturnResultAndFlushedQueue","flushedQueue","invokeCallbackAndReturnFlushedQueue","key","value","module","method","args","_this","__guard","__callFunction","_this2","result","cbID","_this3","__invokeCallback","_this4","__callImmediates","queue","length","getEventLoopRunningTime","registerCallableModule","name","registerLazyCallableModule","factory","getValue","getCallableModule","callNativeSyncHook","moduleID","methodID","params","onFail","onSucc","global","nativeCallSyncHook","processCallbacks","e","framesToPop","test","message","_this5","size","info","forEach","_","callID","debug","push","set","nativeTraceBeginAsyncFlow","enqueueNativeCall","isValidArgument","val","t","isFinite","Array","isArray","every","k","replacer","toString","JSON","stringify","nativeFlushQueueImmediate","counterEvent","__spy","type","createDebugLookup","methods","setImmediatesCallback","fn","__shouldPauseOnThrow","error","reportFatalError","DebuggerInternal","shouldPauseOnThrow","beginEvent","endEvent","moduleMethods","apply","isSuccess","callback","get","profileName","delete","spy","spyOrToggle","prototype","console","log","exports"],"sources":["MessageQueue.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ErrorUtils = require('../vendor/core/ErrorUtils');\nconst Systrace = require('../Performance/Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('../Utilities/deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('invariant');\nconst stringifySafe = require('../Utilities/stringifySafe');\nconst warnOnce = require('../Utilities/warnOnce');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string | number,\n  args: any[],\n};\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\n// eslint-disable-next-line no-bitwise\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 32;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: (void) => Object};\n  _queue: [number[], number[], any[], number];\n  _successCallbacks: Map<number, ?Function>;\n  _failureCallbacks: Map<number, ?Function>;\n  _callID: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n  _immediatesCallback: ?() => void;\n\n  _debugInfo: {[number]: [number, number]};\n  _remoteModuleTable: {[number]: string};\n  _remoteMethodTable: {[number]: $ReadOnlyArray<string>};\n\n  __spy: ?(data: SpyData) => void;\n\n  constructor() {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = new Map();\n    this._failureCallbacks = new Map();\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = Date.now();\n    this._immediatesCallback = null;\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n\n    (this: any).callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(\n      this,\n    );\n    (this: any).callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(\n      this,\n    );\n    (this: any).flushedQueue = this.flushedQueue.bind(this);\n    (this: any).invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(\n      this,\n    );\n  }\n\n  /**\n   * Public APIs\n   */\n\n  static spy(spyOrToggle: boolean | ((data: SpyData) => void)) {\n    if (spyOrToggle === true) {\n      MessageQueue.prototype.__spy = info => {\n        console.log(\n          `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n            `${info.module ? info.module + '.' : ''}${info.method}` +\n            `(${JSON.stringify(info.args)})`,\n        );\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue(\n    module: string,\n    method: string,\n    args: any[],\n  ): null | [Array<number>, Array<number>, Array<any>, number] {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  callFunctionReturnResultAndFlushedQueue(\n    module: string,\n    method: string,\n    args: any[],\n  ): $TEMPORARY$array<?[Array<number>, Array<number>, Array<any>, number]> {\n    let result;\n    this.__guard(() => {\n      result = this.__callFunction(module, method, args);\n    });\n\n    return [result, this.flushedQueue()];\n  }\n\n  invokeCallbackAndReturnFlushedQueue(\n    cbID: number,\n    args: any[],\n  ): null | [Array<number>, Array<number>, Array<any>, number] {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  flushedQueue(): null | [Array<number>, Array<number>, Array<any>, number] {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  }\n\n  getEventLoopRunningTime(): number {\n    return Date.now() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void) => Object = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string): any | null {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  callNativeSyncHook(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ): any {\n    if (__DEV__) {\n      invariant(\n        global.nativeCallSyncHook,\n        'Calling synchronous methods on native ' +\n          'modules is not supported in Chrome.\\n\\n Consider providing alternative ' +\n          'methods to expose this method in debug mode, e.g. by exposing constants ' +\n          'ahead-of-time.',\n      );\n    }\n    this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n    try {\n      return global.nativeCallSyncHook(moduleID, methodID, params);\n    } catch (e) {\n      if (\n        typeof e === 'object' &&\n        e != null &&\n        typeof e.framesToPop === 'undefined' &&\n        /^Exception in HostFunction: /.test(e.message)\n      ) {\n        e.framesToPop = 2;\n      }\n      throw e;\n    }\n  }\n\n  processCallbacks(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n        if (this._successCallbacks.size > 500) {\n          const info = {};\n          this._successCallbacks.forEach((_, callID) => {\n            const debug = this._debugInfo[callID];\n            const module = debug && this._remoteModuleTable[debug[0]];\n            const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n            info[callID] = {module, method};\n          });\n          warnOnce(\n            'excessive-number-of-pending-callbacks',\n            `Please report: Excessive number of pending callbacks: ${\n              this._successCallbacks.size\n            }. Some pending callbacks that might have leaked by never being called from native code: ${stringifySafe(\n              info,\n            )}`,\n          );\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      // eslint-disable-next-line no-bitwise\n      onFail && params.push(this._callID << 1);\n      // eslint-disable-next-line no-bitwise\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks.set(this._callID, onSucc);\n      this._failureCallbacks.set(this._callID, onFail);\n    }\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(\n          TRACE_TAG_REACT_APPS,\n          'native',\n          this._callID,\n        );\n    }\n    this._callID++;\n  }\n\n  enqueueNativeCall(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Validate that parameters passed over the bridge are\n      // folly-convertible.  As a special case, if a prop value is a\n      // function it is permitted here, and special-cased in the\n      // conversion.\n      const isValidArgument = val => {\n        const t = typeof val;\n        if (\n          t === 'undefined' ||\n          t === 'null' ||\n          t === 'boolean' ||\n          t === 'string'\n        ) {\n          return true;\n        }\n        if (t === 'number') {\n          return isFinite(val);\n        }\n        if (t === 'function' || t !== 'object') {\n          return false;\n        }\n        if (Array.isArray(val)) {\n          return val.every(isValidArgument);\n        }\n        for (const k in val) {\n          if (typeof val[k] !== 'function' && !isValidArgument(val[k])) {\n            return false;\n          }\n        }\n        return true;\n      };\n\n      // Replacement allows normally non-JSON-convertible values to be\n      // seen.  There is ambiguity with string values, but in context,\n      // it should at least be a strong hint.\n      const replacer = (key, val) => {\n        const t = typeof val;\n        if (t === 'function') {\n          return '<<Function ' + val.name + '>>';\n        } else if (t === 'number' && !isFinite(val)) {\n          return '<<' + val.toString() + '>>';\n        } else {\n          return val;\n        }\n      };\n\n      // Note that JSON.stringify\n      invariant(\n        isValidArgument(params),\n        '%s is not usable as a native method argument',\n        JSON.stringify(params, replacer),\n      );\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params: any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = Date.now();\n    if (\n      global.nativeFlushQueueImmediate &&\n      now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS\n    ) {\n      const queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n    if (__DEV__ && this.__spy && isFinite(moduleID)) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: this._remoteModuleTable[moduleID],\n        method: this._remoteMethodTable[moduleID][methodID],\n        args: params,\n      });\n    } else if (this.__spy) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: moduleID + '',\n        method: methodID,\n        args: params,\n      });\n    }\n  }\n\n  createDebugLookup(\n    moduleID: number,\n    name: string,\n    methods: ?$ReadOnlyArray<string>,\n  ) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods || [];\n    }\n  }\n\n  // For JSTimers to register its callback. Otherwise a circular dependency\n  // between modules is introduced. Note that only one callback may be\n  // registered at a time.\n  setImmediatesCallback(fn: () => void) {\n    this._immediatesCallback = fn;\n  }\n\n  /**\n   * Private methods\n   */\n\n  __guard(fn: () => void) {\n    if (this.__shouldPauseOnThrow()) {\n      fn();\n    } else {\n      try {\n        fn();\n      } catch (error) {\n        ErrorUtils.reportFatalError(error);\n      }\n    }\n  }\n\n  // MessageQueue installs a global handler to catch all exceptions where JS users can register their own behavior\n  // This handler makes all exceptions to be propagated from inside MessageQueue rather than by the VM at their origin\n  // This makes stacktraces to be placed at MessageQueue rather than at where they were launched\n  // The parameter DebuggerInternal.shouldPauseOnThrow is used to check before catching all exceptions and\n  // can be configured by the VM or any Inspector\n  __shouldPauseOnThrow(): boolean {\n    return (\n      // $FlowFixMe\n      typeof DebuggerInternal !== 'undefined' &&\n      DebuggerInternal.shouldPauseOnThrow === true // eslint-disable-line no-undef\n    );\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (this._immediatesCallback != null) {\n      this._immediatesCallback();\n    }\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: any[]): any {\n    this._lastFlush = Date.now();\n    this._eventLoopStartTime = this._lastFlush;\n    if (__DEV__ || this.__spy) {\n      Systrace.beginEvent(`${module}.${method}(${stringifySafe(args)})`);\n    } else {\n      Systrace.beginEvent(`${module}.${method}(...)`);\n    }\n    if (this.__spy) {\n      this.__spy({type: TO_JS, module, method, args});\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module,\n      method,\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method,\n      module,\n    );\n    const result = moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n    return result;\n  }\n\n  __invokeCallback(cbID: number, args: any[]) {\n    this._lastFlush = Date.now();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    // eslint-disable-next-line no-bitwise\n    const callID = cbID >>> 1;\n    // eslint-disable-next-line no-bitwise\n    const isSuccess = cbID & 1;\n    const callback = isSuccess\n      ? this._successCallbacks.get(callID)\n      : this._failureCallbacks.get(callID);\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      invariant(\n        callback,\n        `No callback found with cbID ${cbID} and callID ${callID} for ` +\n          (method\n            ? ` ${module}.${method} - most likely the callback was already invoked`\n            : `module ${module || '<unknown>'}`) +\n          `. Args: '${stringifySafe(args)}'`,\n      );\n      const profileName = debug\n        ? '<callback for ' + module + '.' + method + '>'\n        : cbID;\n      if (callback && this.__spy) {\n        this.__spy({type: TO_JS, module: null, method: profileName, args});\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`,\n      );\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    this._successCallbacks.delete(callID);\n    this._failureCallbacks.delete(callID);\n    callback(...args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n}\n\nmodule.exports = MessageQueue;\n"],"mappings":"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"}