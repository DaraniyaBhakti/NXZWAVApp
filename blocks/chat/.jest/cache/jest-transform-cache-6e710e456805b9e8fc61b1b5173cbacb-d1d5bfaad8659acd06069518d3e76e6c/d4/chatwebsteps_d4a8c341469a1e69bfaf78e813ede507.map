{"version":3,"file":"/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/chat.web.steps.tsx","sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/chat.web.steps.tsx"],"names":[],"mappings":"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","sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\nimport { shallow, ShallowWrapper } from \"enzyme\";\n\nimport * as helpers from \"../../../../framework/src/Helpers\";\nimport { runEngine } from \"../../../../framework/src/RunEngine\";\nimport { Message } from \"../../../../framework/src/Message\";\n\nimport MessageEnum, {\n  getName,\n} from \"../../../../framework/src/Messages/MessageEnum\";\nimport React from \"react\";\nimport Chat from \"../../src/Chat.web\";\nimport { IChat } from \"../../src/ChatController\";\nconst navigation = require(\"react-navigation\");\n\nconst screenProps = {\n  navigation,\n  id: \"Chat\",\n};\n\nconst feature = loadFeature(\"./__tests__/features/Chat-scenario.web.feature\");\n\nconst initialState = {\n  token: \"\",\n  accountId: -1,\n  chatName: \"\",\n  chatList: [],\n  isVisibleModal: false,\n};\n\nconst testChatList: IChat[] = [\n  { id: \"1\", muted: false, unreadCount: 5, lastMessage: \"\", name: \"Test\" },\n  { id: \"2\", muted: true, unreadCount: 5, lastMessage: \"\", name: \"Test\" },\n];\n\nconst EXAMPLE_CHATLIST_RESPONSE = {\n  data: [\n    {\n      id: \"7\",\n      type: \"chat_my_chat\",\n      attributes: {\n        name: \"Name\",\n        accounts_chats: [\n          {\n            id: \"12\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 1,\n              muted: false,\n              unread_count: 4,\n            },\n          },\n          {\n            id: \"8\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 2,\n              muted: false,\n              unread_count: 0,\n            },\n          },\n        ],\n        messages: {\n          id: \"33\",\n          type: \"chat_message\",\n          attributes: {\n            id: 33,\n            message: \"Hi\",\n            account_id: 2,\n            chat_id: 7,\n            created_at: \"2022-12-06T22:15:22.488Z\",\n            updated_at: \"2022-12-06T22:15:27.465Z\",\n            is_mark_read: true,\n            attachments: null,\n          },\n        },\n      },\n    },\n    {\n      id: \"11\",\n      type: \"chat_my_chat\",\n      attributes: {\n        name: \"Test 4\",\n        accounts_chats: [\n          {\n            id: \"21\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 5,\n              muted: false,\n              unread_count: 7,\n            },\n          },\n          {\n            id: \"22\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 7,\n              muted: false,\n              unread_count: 7,\n            },\n          },\n          {\n            id: \"13\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 2,\n              muted: true,\n              unread_count: 0,\n            },\n          },\n        ],\n        messages: {\n          id: \"34\",\n          type: \"chat_message\",\n          attributes: {\n            id: 34,\n            message: \"hi\",\n            account_id: 2,\n            chat_id: 11,\n            created_at: \"2022-12-07T16:20:33.804Z\",\n            updated_at: \"2022-12-07T16:20:42.485Z\",\n            is_mark_read: true,\n            attachments: null,\n          },\n        },\n      },\n    },\n\n    {\n      id: \"15\",\n      type: \"chat_my_chat\",\n      attributes: {\n        name: \"Builder\",\n        accounts_chats: [\n          {\n            id: \"17\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 2,\n              muted: false,\n              unread_count: 0,\n            },\n          },\n        ],\n        messages: {\n          id: \"29\",\n          type: \"chat_message\",\n          attributes: {\n            id: 29,\n            message: \"Hello\",\n            account_id: 2,\n            chat_id: 15,\n            created_at: \"2022-12-06T04:01:17.789Z\",\n            updated_at: \"2022-12-06T04:01:20.383Z\",\n            is_mark_read: true,\n            attachments: null,\n          },\n        },\n      },\n    },\n    {\n      id: \"16\",\n      type: \"chat_my_chat\",\n      attributes: {\n        name: \"Duis est moll\",\n        accounts_chats: [\n          {\n            id: \"18\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 2,\n              muted: true,\n              unread_count: 1,\n            },\n          },\n        ],\n        messages: {\n          id: \"26\",\n          type: \"chat_message\",\n          attributes: {\n            id: 26,\n            message: \"is this. a read message\",\n            account_id: 2,\n            chat_id: 16,\n            created_at: \"2022-12-06T03:48:55.707Z\",\n            updated_at: \"2022-12-06T03:48:55.707Z\",\n            is_mark_read: false,\n            attachments: null,\n          },\n        },\n      },\n    },\n    {\n      id: \"17\",\n      type: \"chat_my_chat\",\n      attributes: {\n        name: \"Duis est moll\",\n        accounts_chats: [\n          {\n            id: \"19\",\n            type: \"accounts_chats\",\n            attributes: {\n              account_id: 2,\n              muted: true,\n              unread_count: 0,\n            },\n          },\n        ],\n        messages: null,\n      },\n    },\n  ],\n};\n\ndefineFeature(feature, (test) => {\n  beforeEach(() => {\n    jest.resetModules();\n    jest.clearAllMocks();\n    jest.doMock(\"react-native\", () => ({ Platform: { OS: \"web\" } }));\n    jest.spyOn(helpers, \"getOS\").mockImplementation(() => \"web\");\n    jest.spyOn(runEngine, \"sendMessage\");\n  });\n\n  test(\"User navigates to Chat\", ({ given, when, then }) => {\n    let chatWrapper: ShallowWrapper;\n    let instance: Chat;\n\n    given(\"I am a User loading Chat\", () => {\n      chatWrapper = shallow(<Chat {...screenProps} />);\n    });\n\n    when(\"I navigate to Chat\", () => {\n      instance = chatWrapper.instance() as Chat;\n      jest.spyOn(instance, \"send\");\n      const msgToken = new Message(getName(MessageEnum.SessionResponseMessage));\n      msgToken.addData(getName(MessageEnum.SessionResponseToken), \"TOKEN\");\n      runEngine.sendMessage(\"Unit Test\", msgToken);\n\n      const msgValidationAPI = new Message(\n        getName(MessageEnum.RestAPIResponceMessage)\n      );\n      msgValidationAPI.addData(\n        getName(MessageEnum.RestAPIResponceDataMessage),\n        msgValidationAPI.messageId\n      );\n\n      msgValidationAPI.addData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage),\n        {\n          data: EXAMPLE_CHATLIST_RESPONSE,\n          meta: {\n            message: \"Chat data\",\n          },\n        }\n      );\n\n     // instance.getChatListApiCallId = msgValidationAPI.messageId;\n      instance.createChatRoomApiCallId = msgValidationAPI.messageId;\n      runEngine.sendMessage(\"Unit Test\", msgValidationAPI);\n    });\n\n    then(\"Chat will load\", () => {\n      instance.getChatList(\"TOKEN\");\n      expect(chatWrapper).toBeTruthy();\n      expect(chatWrapper.state()).toEqual(initialState);\n    });\n\n    then(\"a call to retrieve the chatlist will be made\", () => {\n      expect(runEngine.sendMessage).toBeCalledWith(\n        \"RestAPIRequestMessage\",\n        expect.objectContaining({\n          id: \"RestAPIRequestMessage\",\n          initializeFromObject: expect.any(Function),\n          messageId: expect.any(String),\n          properties: {\n            RestAPIRequestMethodMessage: \"GET\",\n            RestAPIResponceEndPointMessage: \"chat/chats/mychats\",\n            RestAPIRequestHeaderMessage: JSON.stringify({\n              \"Content-Type\": \"application/json\",\n              token: \"TOKEN\",\n            }),\n          },\n        })\n      );\n    });\n\n    then(\"I will see a list of chatrooms I am a part of\", () => {\n      const chatApiMessage = new Message(\n        getName(MessageEnum.RestAPIResponceMessage)\n      );\n\n      chatApiMessage.addData(\n        getName(MessageEnum.RestAPIResponceDataMessage),\n        chatApiMessage.messageId\n      );\n\n      chatApiMessage.addData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage),\n        EXAMPLE_CHATLIST_RESPONSE\n      );\n\n      //instance.getChatListApiCallId = chatApiMessage.messageId;\n      runEngine.sendMessage(\"Unit Test\", chatApiMessage);\n\n      expect(instance.state.chatList.length).toBe(5);\n    });\n\n    when(\"I click on the createChatRoom button\", () => {\n      const buttonComponent = chatWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"createChatRoomBtn\"\n      );\n      buttonComponent.simulate(\"click\");\n    });\n\n    when(\"I click on the cancel button\", () => {\n      const buttonComponent = chatWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnCloseModal\"\n      );\n      buttonComponent.simulate(\"click\");\n    });\n\n    when(\"I click on the createChatRoom button\", () => {\n      const buttonComponent = chatWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"createChatRoomBtn\"\n      );\n      buttonComponent.simulate(\"click\");\n    });\n\n    then(\"I can enter the chat room name\", () => {\n      const inputRoomName = chatWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"inputRoomName\"\n      );\n      inputRoomName.simulate(\"change\", \"Chat Room\");\n      expect(instance.state.chatName).toEqual(\"Chat Room\")\n    });\n\n    when(\"I click on the createChatRoom button\", () => {\n      const createChatRoomButton = chatWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"createChatSubmitBtn\"\n      );\n      createChatRoomButton.simulate(\"click\");\n    });\n\n    then(\"a call to create the chat room will be made\", () => {\n      expect(runEngine.sendMessage).toBeCalledWith(\n        \"RestAPIRequestMessage\",\n        expect.objectContaining({\n          id: \"RestAPIRequestMessage\",\n          initializeFromObject: expect.any(Function),\n          messageId: expect.any(String),\n          properties: {\n            RestAPIRequestMethodMessage: \"POST\",\n            RestAPIResponceEndPointMessage: \"chat/chats\",\n            RestAPIRequestHeaderMessage: JSON.stringify({\n              \"Content-Type\": \"application/json\",\n              token: \"\",\n              \"Access-Control-Allow-Origin\": \"*\",\n            }),\n            RestAPIRequestBodyMessage: JSON.stringify({\n              name: \"Chat Room\",\n            }),\n          },\n        })\n      );\n    });\n\n    then(\"The network will respond with a success\", () => {\n      const createChatRoomApiMessage = new Message(\n        getName(MessageEnum.RestAPIResponceMessage)\n      );\n\n      createChatRoomApiMessage.addData(\n        getName(MessageEnum.RestAPIResponceDataMessage),\n        createChatRoomApiMessage.messageId\n      );\n\n      instance.createChatRoomApiCallId = createChatRoomApiMessage.messageId;\n      runEngine.sendMessage(\"Unit Test\", createChatRoomApiMessage);\n    });\n\n    then(\"a call to retrieve the chatlist will be made\", () => {\n      expect(runEngine.sendMessage).toBeCalledWith(\n        \"RestAPIRequestMessage\",\n        expect.objectContaining({\n          id: \"RestAPIRequestMessage\",\n          initializeFromObject: expect.any(Function),\n          messageId: expect.any(String),\n          properties: {\n            RestAPIRequestMethodMessage: \"GET\",\n            RestAPIResponceEndPointMessage: \"chat/chats/mychats\",\n            RestAPIRequestHeaderMessage: JSON.stringify({\n              \"Content-Type\": \"application/json\",\n              token: \"TOKEN\",\n            }),\n          },\n        })\n      );\n    });\n\n    then(\"I will see a list of chatrooms I am a part of\", () => {\n      const chatApiMessage = new Message(\n        getName(MessageEnum.RestAPIResponceMessage)\n      );\n\n      chatApiMessage.addData(\n        getName(MessageEnum.RestAPIResponceDataMessage),\n        chatApiMessage.messageId\n      );\n\n      chatApiMessage.addData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage),\n        EXAMPLE_CHATLIST_RESPONSE\n      );\n\n      //instance.getChatListApiCallId = chatApiMessage.messageId;\n      runEngine.sendMessage(\"Unit Test\", chatApiMessage);\n    });\n\n    when(\"I click on a chat room\", () => {\n      const buttonComponent = chatWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnShowChat0\"\n      );\n      buttonComponent.simulate(\"click\");\n    });\n\n    then(\"I will navigate to that chat room\", () => {\n      // const navigationRaiseMessage: Message = new Message(\n      //   \"NavigationPayLoadMessage\"\n      // );\n      // navigationRaiseMessage.messageId = expect.any(String);\n      // navigationRaiseMessage.addData(\"SessionResponseData\", { chatId: \"7\" });\n      // const runEngineResult:Message = new Message(\"NavigationMessage\");\n      // runEngineResult.messageId = expect.any(String);\n      // const navigationPropsMessage = {\n      //   id: \"Chat\",\n      //   navigation: {\n      //     navigate: jest.fn(),\n      //   },\n      // };\n      // runEngineResult.addData(\"NavigationPropsMessage\", navigationPropsMessage);\n      // runEngineResult.addData(\"NavigationRaiseMessage\", navigationRaiseMessage);\n      // runEngineResult.addData(\"NavigationTargetMessage\", \"ChatView\");\n      // expect(runEngine.sendMessage).toBeCalledWith(\n      //   expect.any(String),\n      //   runEngineResult\n      // );\n    });\n\n    then(\"I can leave the screen\", () => {\n      instance.componentWillUnmount();\n      expect(chatWrapper).toBeTruthy();\n    });\n  });\n});\n"]}