{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_requireNativeComponent","_reactNative","codegenNativeComponent","componentName","options","componentNameInUse","paperComponentName","paperComponentNameDeprecated","UIManager","getViewManagerConfig","Error","requireNativeComponent","_default"],"sources":["codegenNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n// TODO: move this file to shims/ReactNative (requires React update and sync)\n\n'use strict';\n\nimport type {NativeComponent} from '../../Libraries/Renderer/shims/ReactNative';\nimport requireNativeComponent from '../../Libraries/ReactNative/requireNativeComponent';\nimport {UIManager} from 'react-native';\n\n// TODO: import from CodegenSchema once workspaces are enabled\ntype Options = $ReadOnly<{|\n  interfaceOnly?: boolean,\n  paperComponentName?: string,\n  paperComponentNameDeprecated?: string,\n|}>;\n\nexport type NativeComponentType<T> = Class<NativeComponent<T>>;\n\nfunction codegenNativeComponent<Props>(\n  componentName: string,\n  options?: Options,\n): NativeComponentType<Props> {\n  let componentNameInUse =\n    options && options.paperComponentName\n      ? options.paperComponentName\n      : componentName;\n\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.getViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (\n      options.paperComponentNameDeprecated != null &&\n      UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)\n    ) {\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      throw new Error(\n        `Failed to find native component for either ${componentName} or ${options.paperComponentNameDeprecated ||\n          '(unknown)'}`,\n      );\n    }\n  }\n\n  // If this function is run at runtime then that means the view configs were not\n  // generated with the view config babel plugin, so we need to require the native component.\n  //\n  // This will be useful during migration, but eventually this will error.\n  return ((requireNativeComponent(componentNameInUse): any): Class<\n    NativeComponent<Props>,\n  >);\n}\n\nexport default codegenNativeComponent;\n"],"mappings":"AAWA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,OAAA;AAGb,IAAAC,uBAAA,GAAAP,sBAAA,CAAAC,OAAA;AACA,IAAAO,YAAA,GAAAP,OAAA;AAWA,SAASQ,sBAAsBA,CAC7BC,aAAqB,EACrBC,OAAiB,EACW;EAC5B,IAAIC,kBAAkB,GACpBD,OAAO,IAAIA,OAAO,CAACE,kBAAkB,GACjCF,OAAO,CAACE,kBAAkB,GAC1BH,aAAa;EAEnB,IAAIC,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACG,4BAA4B,IAAI,IAAI,EAAE;IACnE,IAAIC,sBAAS,CAACC,oBAAoB,CAACN,aAAa,CAAC,EAAE;MACjDE,kBAAkB,GAAGF,aAAa;IACpC,CAAC,MAAM,IACLC,OAAO,CAACG,4BAA4B,IAAI,IAAI,IAC5CC,sBAAS,CAACC,oBAAoB,CAACL,OAAO,CAACG,4BAA4B,CAAC,EACpE;MACAF,kBAAkB,GAAGD,OAAO,CAACG,4BAA4B;IAC3D,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,iDACiCP,aAAa,aAAOC,OAAO,CAACG,4BAA4B,IACpG,WAAW,CACf,CAAC;IACH;EACF;EAMA,OAAS,IAAAI,+BAAsB,EAACN,kBAAkB,CAAC;AAGrD;AAAC,IAAAO,QAAA,GAEcV,sBAAsB;AAAAL,OAAA,CAAAE,OAAA,GAAAa,QAAA"}