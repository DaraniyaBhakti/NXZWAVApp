fc34f183d83baf91b2410322eac9e1ce
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _requireNativeComponent = _interopRequireDefault(require("../../Libraries/ReactNative/requireNativeComponent"));
var _reactNative = require("react-native");
function codegenNativeComponent(componentName, options) {
  var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;
  if (options != null && options.paperComponentNameDeprecated != null) {
    if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
      componentNameInUse = componentName;
    } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
      componentNameInUse = options.paperComponentNameDeprecated;
    } else {
      throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
    }
  }
  return (0, _requireNativeComponent.default)(componentNameInUse);
}
var _default = codegenNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIl9yZXF1aXJlTmF0aXZlQ29tcG9uZW50IiwiX3JlYWN0TmF0aXZlIiwiY29kZWdlbk5hdGl2ZUNvbXBvbmVudCIsImNvbXBvbmVudE5hbWUiLCJvcHRpb25zIiwiY29tcG9uZW50TmFtZUluVXNlIiwicGFwZXJDb21wb25lbnROYW1lIiwicGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCIsIlVJTWFuYWdlciIsImdldFZpZXdNYW5hZ2VyQ29uZmlnIiwiRXJyb3IiLCJyZXF1aXJlTmF0aXZlQ29tcG9uZW50IiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJjb2RlZ2VuTmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuLy8gVE9ETzogbW92ZSB0aGlzIGZpbGUgdG8gc2hpbXMvUmVhY3ROYXRpdmUgKHJlcXVpcmVzIFJlYWN0IHVwZGF0ZSBhbmQgc3luYylcblxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdHlwZSB7TmF0aXZlQ29tcG9uZW50fSBmcm9tICcuLi8uLi9MaWJyYXJpZXMvUmVuZGVyZXIvc2hpbXMvUmVhY3ROYXRpdmUnO1xuaW1wb3J0IHJlcXVpcmVOYXRpdmVDb21wb25lbnQgZnJvbSAnLi4vLi4vTGlicmFyaWVzL1JlYWN0TmF0aXZlL3JlcXVpcmVOYXRpdmVDb21wb25lbnQnO1xuaW1wb3J0IHtVSU1hbmFnZXJ9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbi8vIFRPRE86IGltcG9ydCBmcm9tIENvZGVnZW5TY2hlbWEgb25jZSB3b3Jrc3BhY2VzIGFyZSBlbmFibGVkXG50eXBlIE9wdGlvbnMgPSAkUmVhZE9ubHk8e3xcbiAgaW50ZXJmYWNlT25seT86IGJvb2xlYW4sXG4gIHBhcGVyQ29tcG9uZW50TmFtZT86IHN0cmluZyxcbiAgcGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZD86IHN0cmluZyxcbnx9PjtcblxuZXhwb3J0IHR5cGUgTmF0aXZlQ29tcG9uZW50VHlwZTxUPiA9IENsYXNzPE5hdGl2ZUNvbXBvbmVudDxUPj47XG5cbmZ1bmN0aW9uIGNvZGVnZW5OYXRpdmVDb21wb25lbnQ8UHJvcHM+KFxuICBjb21wb25lbnROYW1lOiBzdHJpbmcsXG4gIG9wdGlvbnM/OiBPcHRpb25zLFxuKTogTmF0aXZlQ29tcG9uZW50VHlwZTxQcm9wcz4ge1xuICBsZXQgY29tcG9uZW50TmFtZUluVXNlID1cbiAgICBvcHRpb25zICYmIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lXG4gICAgICA/IG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lXG4gICAgICA6IGNvbXBvbmVudE5hbWU7XG5cbiAgaWYgKG9wdGlvbnMgIT0gbnVsbCAmJiBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQgIT0gbnVsbCkge1xuICAgIGlmIChVSU1hbmFnZXIuZ2V0Vmlld01hbmFnZXJDb25maWcoY29tcG9uZW50TmFtZSkpIHtcbiAgICAgIGNvbXBvbmVudE5hbWVJblVzZSA9IGNvbXBvbmVudE5hbWU7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCAhPSBudWxsICYmXG4gICAgICBVSU1hbmFnZXIuZ2V0Vmlld01hbmFnZXJDb25maWcob3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkKVxuICAgICkge1xuICAgICAgY29tcG9uZW50TmFtZUluVXNlID0gb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBGYWlsZWQgdG8gZmluZCBuYXRpdmUgY29tcG9uZW50IGZvciBlaXRoZXIgJHtjb21wb25lbnROYW1lfSBvciAke29wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCB8fFxuICAgICAgICAgICcodW5rbm93biknfWAsXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8vIElmIHRoaXMgZnVuY3Rpb24gaXMgcnVuIGF0IHJ1bnRpbWUgdGhlbiB0aGF0IG1lYW5zIHRoZSB2aWV3IGNvbmZpZ3Mgd2VyZSBub3RcbiAgLy8gZ2VuZXJhdGVkIHdpdGggdGhlIHZpZXcgY29uZmlnIGJhYmVsIHBsdWdpbiwgc28gd2UgbmVlZCB0byByZXF1aXJlIHRoZSBuYXRpdmUgY29tcG9uZW50LlxuICAvL1xuICAvLyBUaGlzIHdpbGwgYmUgdXNlZnVsIGR1cmluZyBtaWdyYXRpb24sIGJ1dCBldmVudHVhbGx5IHRoaXMgd2lsbCBlcnJvci5cbiAgcmV0dXJuICgocmVxdWlyZU5hdGl2ZUNvbXBvbmVudChjb21wb25lbnROYW1lSW5Vc2UpOiBhbnkpOiBDbGFzczxcbiAgICBOYXRpdmVDb21wb25lbnQ8UHJvcHM+LFxuICA+KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29kZWdlbk5hdGl2ZUNvbXBvbmVudDtcbiJdLCJtYXBwaW5ncyI6IkFBV0EsWUFBWTs7QUFBQyxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUFDLE1BQUEsQ0FBQUMsY0FBQSxDQUFBQyxPQUFBO0VBQUFDLEtBQUE7QUFBQTtBQUFBRCxPQUFBLENBQUFFLE9BQUE7QUFHYixJQUFBQyx1QkFBQSxHQUFBUCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQU8sWUFBQSxHQUFBUCxPQUFBO0FBV0EsU0FBU1Esc0JBQXNCQSxDQUM3QkMsYUFBcUIsRUFDckJDLE9BQWlCLEVBQ1c7RUFDNUIsSUFBSUMsa0JBQWtCLEdBQ3BCRCxPQUFPLElBQUlBLE9BQU8sQ0FBQ0Usa0JBQWtCLEdBQ2pDRixPQUFPLENBQUNFLGtCQUFrQixHQUMxQkgsYUFBYTtFQUVuQixJQUFJQyxPQUFPLElBQUksSUFBSSxJQUFJQSxPQUFPLENBQUNHLDRCQUE0QixJQUFJLElBQUksRUFBRTtJQUNuRSxJQUFJQyxzQkFBUyxDQUFDQyxvQkFBb0IsQ0FBQ04sYUFBYSxDQUFDLEVBQUU7TUFDakRFLGtCQUFrQixHQUFHRixhQUFhO0lBQ3BDLENBQUMsTUFBTSxJQUNMQyxPQUFPLENBQUNHLDRCQUE0QixJQUFJLElBQUksSUFDNUNDLHNCQUFTLENBQUNDLG9CQUFvQixDQUFDTCxPQUFPLENBQUNHLDRCQUE0QixDQUFDLEVBQ3BFO01BQ0FGLGtCQUFrQixHQUFHRCxPQUFPLENBQUNHLDRCQUE0QjtJQUMzRCxDQUFDLE1BQU07TUFDTCxNQUFNLElBQUlHLEtBQUssaURBQ2lDUCxhQUFhLGFBQU9DLE9BQU8sQ0FBQ0csNEJBQTRCLElBQ3BHLFdBQVcsQ0FDZixDQUFDO0lBQ0g7RUFDRjtFQU1BLE9BQVMsSUFBQUksK0JBQXNCLEVBQUNOLGtCQUFrQixDQUFDO0FBR3JEO0FBQUMsSUFBQU8sUUFBQSxHQUVjVixzQkFBc0I7QUFBQUwsT0FBQSxDQUFBRSxPQUFBLEdBQUFhLFFBQUEifQ==