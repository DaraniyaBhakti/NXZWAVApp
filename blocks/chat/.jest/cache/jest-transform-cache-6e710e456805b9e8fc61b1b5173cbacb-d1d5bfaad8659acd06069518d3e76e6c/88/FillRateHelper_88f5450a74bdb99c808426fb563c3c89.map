{"version":3,"names":["_interopRequireDefault","require","_extends2","_createClass2","_classCallCheck2","performanceNow","warning","Info","default","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","DEBUG","_listeners","_minSampleCount","_sampleRate","FillRateHelper","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","Math","random","_resetData","key","value","activate","console","debug","deactivateAndFlush","start","info","derived","avg_blankness","avg_speed","avg_speed_when_any_blank","any_blank_per_min","any_blank_time_frac","mostly_blank_per_min","mostly_blank_time_frac","round","forEach","listener","computeBlankness","props","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","abs","scrollSpeed","now","blankTop","first","firstFrame","last","inLayout","min","max","blankBottom","lastFrame","bottomEdge","length","blankness","enabled","addListener","callback","push","remove","filter","setSampleRate","sampleRate","setMinSampleCount","minSampleCount","module","exports"],"sources":["FillRateHelper.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst performanceNow = require('fbjs/lib/performanceNow');\nconst warning = require('fbjs/lib/warning');\n\nexport type FillRateInfo = Info;\n\nclass Info {\n  any_blank_count: number = 0;\n  any_blank_ms: number = 0;\n  any_blank_speed_sum: number = 0;\n  mostly_blank_count: number = 0;\n  mostly_blank_ms: number = 0;\n  pixels_blank: number = 0;\n  pixels_sampled: number = 0;\n  pixels_scrolled: number = 0;\n  total_time_spent: number = 0;\n  sample_count: number = 0;\n}\n\ntype FrameMetrics = {inLayout?: boolean, length: number, offset: number};\n\nconst DEBUG = false;\n\nlet _listeners: Array<(Info) => void> = [];\nlet _minSampleCount = 10;\nlet _sampleRate = DEBUG ? 1 : null;\n\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\nclass FillRateHelper {\n  _anyBlankStartTime = (null: ?number);\n  _enabled = false;\n  _getFrameMetrics: (index: number) => ?FrameMetrics;\n  _info = new Info();\n  _mostlyBlankStartTime = (null: ?number);\n  _samplesStartTime = (null: ?number);\n\n  static addListener(callback: FillRateInfo => void): {remove: () => void} {\n    warning(\n      _sampleRate !== null,\n      'Call `FillRateHelper.setSampleRate` before `addListener`.',\n    );\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      },\n    };\n  }\n\n  static setSampleRate(sampleRate: number) {\n    _sampleRate = sampleRate;\n  }\n\n  static setMinSampleCount(minSampleCount: number) {\n    _minSampleCount = minSampleCount;\n  }\n\n  constructor(getFrameMetrics: (index: number) => ?FrameMetrics) {\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n    this._resetData();\n  }\n\n  activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  }\n\n  deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n    const start = this._samplesStartTime; // const for flow\n    if (start == null) {\n      DEBUG &&\n        console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n      return;\n    }\n    const total_time_spent = performanceNow() - start;\n    const info: any = {\n      ...this._info,\n      total_time_spent,\n    };\n    if (DEBUG) {\n      const derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank:\n          this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min:\n          this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min:\n          this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent,\n      };\n      for (const key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n      console.debug('FillRateHelper deactivateAndFlush: ', {derived, info});\n    }\n    _listeners.forEach(listener => listener(info));\n    this._resetData();\n  }\n\n  computeBlankness(\n    props: {\n      data: Array<any>,\n      getItemCount: (data: Array<any>) => number,\n      initialNumToRender: number,\n    },\n    state: {\n      first: number,\n      last: number,\n    },\n    scrollMetrics: {\n      dOffset: number,\n      offset: number,\n      velocity: number,\n      visibleLength: number,\n    },\n  ): number {\n    if (\n      !this._enabled ||\n      props.getItemCount(props.data) === 0 ||\n      this._samplesStartTime == null\n    ) {\n      return 0;\n    }\n    const {dOffset, offset, velocity, visibleLength} = scrollMetrics;\n\n    // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    const scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n    const now = performanceNow();\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n    this._anyBlankStartTime = null;\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n    this._mostlyBlankStartTime = null;\n\n    let blankTop = 0;\n    let first = state.first;\n    let firstFrame = this._getFrameMetrics(first);\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    }\n    // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(\n        visibleLength,\n        Math.max(0, firstFrame.offset - offset),\n      );\n    }\n    let blankBottom = 0;\n    let last = state.last;\n    let lastFrame = this._getFrameMetrics(last);\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    }\n    // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      const bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(\n        visibleLength,\n        Math.max(0, offset + visibleLength - bottomEdge),\n      );\n    }\n    const pixels_blank = Math.round(blankTop + blankBottom);\n    const blankness = pixels_blank / visibleLength;\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n    return blankness;\n  }\n\n  enabled(): boolean {\n    return this._enabled;\n  }\n\n  _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  }\n}\n\nmodule.exports = FillRateHelper;\n"],"mappings":"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"}