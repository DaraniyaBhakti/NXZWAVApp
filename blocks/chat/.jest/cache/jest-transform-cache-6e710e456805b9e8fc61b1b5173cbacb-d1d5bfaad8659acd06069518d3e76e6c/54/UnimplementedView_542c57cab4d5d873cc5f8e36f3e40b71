f321fd18e9593a92b795633c0a934b8b
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
var StyleSheet = require('../../StyleSheet/StyleSheet');
var UnimplementedView = function (_React$Component) {
  (0, _inherits2.default)(UnimplementedView, _React$Component);
  var _super = _createSuper(UnimplementedView);
  function UnimplementedView() {
    (0, _classCallCheck2.default)(this, UnimplementedView);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(UnimplementedView, [{
    key: "render",
    value: function render() {
      var View = require('../View/View');
      return React.createElement(View, {
        style: [styles.unimplementedView, this.props.style]
      }, this.props.children);
    }
  }]);
  return UnimplementedView;
}(React.Component);
var styles = StyleSheet.create({
  unimplementedView: __DEV__ ? {
    alignSelf: 'flex-start',
    borderColor: 'red',
    borderWidth: 1
  } : {}
});
module.exports = UnimplementedView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2luaGVyaXRzMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9nZXRQcm90b3R5cGVPZjIiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwiZGVmYXVsdCIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImFwcGx5Iiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiZSIsIlJlYWN0IiwiU3R5bGVTaGVldCIsIlVuaW1wbGVtZW50ZWRWaWV3IiwiX1JlYWN0JENvbXBvbmVudCIsIl9zdXBlciIsImtleSIsInZhbHVlIiwicmVuZGVyIiwiVmlldyIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsInN0eWxlcyIsInVuaW1wbGVtZW50ZWRWaWV3IiwicHJvcHMiLCJjaGlsZHJlbiIsIkNvbXBvbmVudCIsImNyZWF0ZSIsIl9fREVWX18iLCJhbGlnblNlbGYiLCJib3JkZXJDb2xvciIsImJvcmRlcldpZHRoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlVuaW1wbGVtZW50ZWRWaWV3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgU3R5bGVTaGVldCA9IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvU3R5bGVTaGVldCcpO1xuXG4vKipcbiAqIENvbW1vbiBpbXBsZW1lbnRhdGlvbiBmb3IgYSBzaW1wbGUgc3R1YmJlZCB2aWV3LiBTaW1wbHkgYXBwbGllcyB0aGUgdmlldydzIHN0eWxlcyB0byB0aGUgaW5uZXJcbiAqIFZpZXcgY29tcG9uZW50IGFuZCByZW5kZXJzIGl0cyBjaGlsZHJlbi5cbiAqL1xuY2xhc3MgVW5pbXBsZW1lbnRlZFZpZXcgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8JEZsb3dGaXhNZVByb3BzPiB7XG4gIHJlbmRlcigpOiBSZWFjdC5Ob2RlIHtcbiAgICAvLyBXb3JrYXJvdW5kIHJlcXVpcmUgY3ljbGUgZnJvbSByZXF1aXJlTmF0aXZlQ29tcG9uZW50XG4gICAgY29uc3QgVmlldyA9IHJlcXVpcmUoJy4uL1ZpZXcvVmlldycpO1xuICAgIHJldHVybiAoXG4gICAgICA8VmlldyBzdHlsZT17W3N0eWxlcy51bmltcGxlbWVudGVkVmlldywgdGhpcy5wcm9wcy5zdHlsZV19PlxuICAgICAgICB7dGhpcy5wcm9wcy5jaGlsZHJlbn1cbiAgICAgIDwvVmlldz5cbiAgICApO1xuICB9XG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgdW5pbXBsZW1lbnRlZFZpZXc6IF9fREVWX19cbiAgICA/IHtcbiAgICAgICAgYWxpZ25TZWxmOiAnZmxleC1zdGFydCcsXG4gICAgICAgIGJvcmRlckNvbG9yOiAncmVkJyxcbiAgICAgICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgICB9XG4gICAgOiB7fSxcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVuaW1wbGVtZW50ZWRWaWV3O1xuIl0sIm1hcHBpbmdzIjoiQUFTQSxZQUFZOztBQUFDLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQSxJQUFBQyxnQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUcsVUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUksMkJBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFLLGdCQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxTQUFBTSxhQUFBQyxPQUFBLFFBQUFDLHlCQUFBLEdBQUFDLHlCQUFBLG9CQUFBQyxxQkFBQSxRQUFBQyxLQUFBLE9BQUFOLGdCQUFBLENBQUFPLE9BQUEsRUFBQUwsT0FBQSxHQUFBTSxNQUFBLE1BQUFMLHlCQUFBLFFBQUFNLFNBQUEsT0FBQVQsZ0JBQUEsQ0FBQU8sT0FBQSxRQUFBRyxXQUFBLEVBQUFGLE1BQUEsR0FBQUcsT0FBQSxDQUFBQyxTQUFBLENBQUFOLEtBQUEsRUFBQU8sU0FBQSxFQUFBSixTQUFBLFlBQUFELE1BQUEsR0FBQUYsS0FBQSxDQUFBUSxLQUFBLE9BQUFELFNBQUEsZ0JBQUFkLDJCQUFBLENBQUFRLE9BQUEsUUFBQUMsTUFBQTtBQUFBLFNBQUFKLDBCQUFBLGVBQUFPLE9BQUEscUJBQUFBLE9BQUEsQ0FBQUMsU0FBQSxvQkFBQUQsT0FBQSxDQUFBQyxTQUFBLENBQUFHLElBQUEsMkJBQUFDLEtBQUEsb0NBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFDLElBQUEsQ0FBQVQsT0FBQSxDQUFBQyxTQUFBLENBQUFLLE9BQUEsOENBQUFJLENBQUE7QUFFYixJQUFNQyxLQUFLLEdBQUczQixPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLElBQU00QixVQUFVLEdBQUc1QixPQUFPLENBQUMsNkJBQTZCLENBQUM7QUFBQyxJQU1wRDZCLGlCQUFpQixhQUFBQyxnQkFBQTtFQUFBLElBQUEzQixVQUFBLENBQUFTLE9BQUEsRUFBQWlCLGlCQUFBLEVBQUFDLGdCQUFBO0VBQUEsSUFBQUMsTUFBQSxHQUFBekIsWUFBQSxDQUFBdUIsaUJBQUE7RUFBQSxTQUFBQSxrQkFBQTtJQUFBLElBQUE1QixnQkFBQSxDQUFBVyxPQUFBLFFBQUFpQixpQkFBQTtJQUFBLE9BQUFFLE1BQUEsQ0FBQVosS0FBQSxPQUFBRCxTQUFBO0VBQUE7RUFBQSxJQUFBaEIsYUFBQSxDQUFBVSxPQUFBLEVBQUFpQixpQkFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUEsRUFDckIsU0FBQUMsT0FBQSxFQUFxQjtNQUVuQixJQUFNQyxJQUFJLEdBQUduQyxPQUFPLENBQUMsY0FBYyxDQUFDO01BQ3BDLE9BQ0UyQixLQUFBLENBQUFTLGFBQUEsQ0FBQ0QsSUFBSTtRQUFDRSxLQUFLLEVBQUUsQ0FBQ0MsTUFBTSxDQUFDQyxpQkFBaUIsRUFBRSxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsS0FBSztNQUFFLEdBQ3ZELElBQUksQ0FBQ0csS0FBSyxDQUFDQyxRQUNSLENBQUM7SUFFWDtFQUFDO0VBQUEsT0FBQVosaUJBQUE7QUFBQSxFQVQ2QkYsS0FBSyxDQUFDZSxTQUFTO0FBWS9DLElBQU1KLE1BQU0sR0FBR1YsVUFBVSxDQUFDZSxNQUFNLENBQUM7RUFDL0JKLGlCQUFpQixFQUFFSyxPQUFPLEdBQ3RCO0lBQ0VDLFNBQVMsRUFBRSxZQUFZO0lBQ3ZCQyxXQUFXLEVBQUUsS0FBSztJQUNsQkMsV0FBVyxFQUFFO0VBQ2YsQ0FBQyxHQUNELENBQUM7QUFDUCxDQUFDLENBQUM7QUFFRkMsTUFBTSxDQUFDQyxPQUFPLEdBQUdwQixpQkFBaUIifQ==