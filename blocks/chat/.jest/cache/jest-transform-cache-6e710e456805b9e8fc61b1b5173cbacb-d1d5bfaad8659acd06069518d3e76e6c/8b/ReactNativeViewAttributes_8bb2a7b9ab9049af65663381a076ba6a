89b1fb8f2e5419b09535c4f264be57fb
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var ReactNativeStyleAttributes = require('./ReactNativeStyleAttributes');
var UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityActions: true,
  accessibilityLabel: true,
  accessibilityLiveRegion: true,
  accessibilityRole: true,
  accessibilityStates: true,
  accessibilityState: true,
  accessibilityHint: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityAction: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  onAccessibilityEscape: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};
var RCTView = (0, _extends2.default)({}, UIView, {
  removeClippedSubviews: true
});
var ReactNativeViewAttributes = {
  UIView: UIView,
  RCTView: RCTView
};
module.exports = ReactNativeViewAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHRlbmRzMiIsIlJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzIiwiVUlWaWV3IiwicG9pbnRlckV2ZW50cyIsImFjY2Vzc2libGUiLCJhY2Nlc3NpYmlsaXR5QWN0aW9ucyIsImFjY2Vzc2liaWxpdHlMYWJlbCIsImFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uIiwiYWNjZXNzaWJpbGl0eVJvbGUiLCJhY2Nlc3NpYmlsaXR5U3RhdGVzIiwiYWNjZXNzaWJpbGl0eVN0YXRlIiwiYWNjZXNzaWJpbGl0eUhpbnQiLCJpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5IiwibmF0aXZlSUQiLCJ0ZXN0SUQiLCJyZW5kZXJUb0hhcmR3YXJlVGV4dHVyZUFuZHJvaWQiLCJzaG91bGRSYXN0ZXJpemVJT1MiLCJvbkxheW91dCIsIm9uQWNjZXNzaWJpbGl0eUFjdGlvbiIsIm9uQWNjZXNzaWJpbGl0eVRhcCIsIm9uTWFnaWNUYXAiLCJvbkFjY2Vzc2liaWxpdHlFc2NhcGUiLCJjb2xsYXBzYWJsZSIsIm5lZWRzT2Zmc2NyZWVuQWxwaGFDb21wb3NpdGluZyIsInN0eWxlIiwiUkNUVmlldyIsImRlZmF1bHQiLCJyZW1vdmVDbGlwcGVkU3Vidmlld3MiLCJSZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzID0gcmVxdWlyZSgnLi9SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcycpO1xuXG5jb25zdCBVSVZpZXcgPSB7XG4gIHBvaW50ZXJFdmVudHM6IHRydWUsXG4gIGFjY2Vzc2libGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlBY3Rpb25zOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5TGFiZWw6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5Um9sZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eVN0YXRlczogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eVN0YXRlOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5SGludDogdHJ1ZSxcbiAgaW1wb3J0YW50Rm9yQWNjZXNzaWJpbGl0eTogdHJ1ZSxcbiAgbmF0aXZlSUQ6IHRydWUsXG4gIHRlc3RJRDogdHJ1ZSxcbiAgcmVuZGVyVG9IYXJkd2FyZVRleHR1cmVBbmRyb2lkOiB0cnVlLFxuICBzaG91bGRSYXN0ZXJpemVJT1M6IHRydWUsXG4gIG9uTGF5b3V0OiB0cnVlLFxuICBvbkFjY2Vzc2liaWxpdHlBY3Rpb246IHRydWUsXG4gIG9uQWNjZXNzaWJpbGl0eVRhcDogdHJ1ZSxcbiAgb25NYWdpY1RhcDogdHJ1ZSxcbiAgb25BY2Nlc3NpYmlsaXR5RXNjYXBlOiB0cnVlLFxuICBjb2xsYXBzYWJsZTogdHJ1ZSxcbiAgbmVlZHNPZmZzY3JlZW5BbHBoYUNvbXBvc2l0aW5nOiB0cnVlLFxuICBzdHlsZTogUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMsXG59O1xuXG5jb25zdCBSQ1RWaWV3ID0ge1xuICAuLi5VSVZpZXcsXG5cbiAgLy8gVGhpcyBpcyBhIHNwZWNpYWwgcGVyZm9ybWFuY2UgcHJvcGVydHkgZXhwb3NlZCBieSBSQ1RWaWV3IGFuZCB1c2VmdWwgZm9yXG4gIC8vIHNjcm9sbGluZyBjb250ZW50IHdoZW4gdGhlcmUgYXJlIG1hbnkgc3Vidmlld3MsIG1vc3Qgb2Ygd2hpY2ggYXJlIG9mZnNjcmVlbi5cbiAgLy8gRm9yIHRoaXMgcHJvcGVydHkgdG8gYmUgZWZmZWN0aXZlLCBpdCBtdXN0IGJlIGFwcGxpZWQgdG8gYSB2aWV3IHRoYXQgY29udGFpbnNcbiAgLy8gbWFueSBzdWJ2aWV3cyB0aGF0IGV4dGVuZCBvdXRzaWRlIGl0cyBib3VuZC4gVGhlIHN1YnZpZXdzIG11c3QgYWxzbyBoYXZlXG4gIC8vIG92ZXJmbG93OiBoaWRkZW4sIGFzIHNob3VsZCB0aGUgY29udGFpbmluZyB2aWV3IChvciBvbmUgb2YgaXRzIHN1cGVydmlld3MpLlxuICByZW1vdmVDbGlwcGVkU3Vidmlld3M6IHRydWUsXG59O1xuXG5jb25zdCBSZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzID0ge1xuICBVSVZpZXc6IFVJVmlldyxcbiAgUkNUVmlldzogUkNUVmlldyxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcztcbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFBQyxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUEsSUFBQUMsU0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBRWIsSUFBTUUsMEJBQTBCLEdBQUdGLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQztBQUUxRSxJQUFNRyxNQUFNLEdBQUc7RUFDYkMsYUFBYSxFQUFFLElBQUk7RUFDbkJDLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxvQkFBb0IsRUFBRSxJQUFJO0VBQzFCQyxrQkFBa0IsRUFBRSxJQUFJO0VBQ3hCQyx1QkFBdUIsRUFBRSxJQUFJO0VBQzdCQyxpQkFBaUIsRUFBRSxJQUFJO0VBQ3ZCQyxtQkFBbUIsRUFBRSxJQUFJO0VBQ3pCQyxrQkFBa0IsRUFBRSxJQUFJO0VBQ3hCQyxpQkFBaUIsRUFBRSxJQUFJO0VBQ3ZCQyx5QkFBeUIsRUFBRSxJQUFJO0VBQy9CQyxRQUFRLEVBQUUsSUFBSTtFQUNkQyxNQUFNLEVBQUUsSUFBSTtFQUNaQyw4QkFBOEIsRUFBRSxJQUFJO0VBQ3BDQyxrQkFBa0IsRUFBRSxJQUFJO0VBQ3hCQyxRQUFRLEVBQUUsSUFBSTtFQUNkQyxxQkFBcUIsRUFBRSxJQUFJO0VBQzNCQyxrQkFBa0IsRUFBRSxJQUFJO0VBQ3hCQyxVQUFVLEVBQUUsSUFBSTtFQUNoQkMscUJBQXFCLEVBQUUsSUFBSTtFQUMzQkMsV0FBVyxFQUFFLElBQUk7RUFDakJDLDhCQUE4QixFQUFFLElBQUk7RUFDcENDLEtBQUssRUFBRXZCO0FBQ1QsQ0FBQztBQUVELElBQU13QixPQUFPLE9BQUF6QixTQUFBLENBQUEwQixPQUFBLE1BQ1J4QixNQUFNO0VBT1R5QixxQkFBcUIsRUFBRTtBQUFJLEVBQzVCO0FBRUQsSUFBTUMseUJBQXlCLEdBQUc7RUFDaEMxQixNQUFNLEVBQUVBLE1BQU07RUFDZHVCLE9BQU8sRUFBRUE7QUFDWCxDQUFDO0FBRURJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHRix5QkFBeUIifQ==