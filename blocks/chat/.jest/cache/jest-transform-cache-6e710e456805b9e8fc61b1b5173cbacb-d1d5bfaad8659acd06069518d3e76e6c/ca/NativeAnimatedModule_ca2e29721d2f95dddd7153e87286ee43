56631b02f98ce50712ebbb708c1f16bd
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = TurboModuleRegistry.get('NativeAnimatedModule');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiTmF0aXZlQW5pbWF0ZWRNb2R1bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUge1R1cmJvTW9kdWxlfSBmcm9tICcuLi8uLi9UdXJib01vZHVsZS9SQ1RFeHBvcnQnO1xuaW1wb3J0ICogYXMgVHVyYm9Nb2R1bGVSZWdpc3RyeSBmcm9tICcuLi8uLi9UdXJib01vZHVsZS9UdXJib01vZHVsZVJlZ2lzdHJ5JztcblxudHlwZSBFbmRSZXN1bHQgPSB7ZmluaXNoZWQ6IGJvb2xlYW59O1xudHlwZSBFbmRDYWxsYmFjayA9IChyZXN1bHQ6IEVuZFJlc3VsdCkgPT4gdm9pZDtcblxuZXhwb3J0IHR5cGUgRXZlbnRNYXBwaW5nID0ge3xcbiAgbmF0aXZlRXZlbnRQYXRoOiBBcnJheTxzdHJpbmc+LFxuICBhbmltYXRlZFZhbHVlVGFnOiA/bnVtYmVyLFxufH07XG5cbmV4cG9ydCB0eXBlIEFuaW1hdGVkTm9kZUNvbmZpZyA9IHt8XG4gIC8vIFRPRE86IFR5cGUgdGhpcyB3aXRoIGJldHRlciBlbnVtcy5cbiAgdHlwZTogc3RyaW5nLFxufH07XG5cbmV4cG9ydCB0eXBlIEFuaW1hdGluZ05vZGVDb25maWcgPSB7fFxuICAvLyBUT0RPOiBUeXBlIHRoaXMgd2l0aCBiZXR0ZXIgZW51bXMuXG4gIHR5cGU6IHN0cmluZyxcbnx9O1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gICtjcmVhdGVBbmltYXRlZE5vZGU6ICh0YWc6ID9udW1iZXIsIGNvbmZpZzogQW5pbWF0ZWROb2RlQ29uZmlnKSA9PiB2b2lkO1xuICArc3RhcnRMaXN0ZW5pbmdUb0FuaW1hdGVkTm9kZVZhbHVlOiAodGFnOiA/bnVtYmVyKSA9PiB2b2lkO1xuICArc3RvcExpc3RlbmluZ1RvQW5pbWF0ZWROb2RlVmFsdWU6ICh0YWc6ID9udW1iZXIpID0+IHZvaWQ7XG4gICtjb25uZWN0QW5pbWF0ZWROb2RlczogKHBhcmVudFRhZzogP251bWJlciwgY2hpbGRUYWc6ID9udW1iZXIpID0+IHZvaWQ7XG4gICtkaXNjb25uZWN0QW5pbWF0ZWROb2RlczogKHBhcmVudFRhZzogP251bWJlciwgY2hpbGRUYWc6ID9udW1iZXIpID0+IHZvaWQ7XG4gICtzdGFydEFuaW1hdGluZ05vZGU6IChcbiAgICBhbmltYXRpb25JZDogP251bWJlcixcbiAgICBub2RlVGFnOiA/bnVtYmVyLFxuICAgIGNvbmZpZzogQW5pbWF0aW5nTm9kZUNvbmZpZyxcbiAgICBlbmRDYWxsYmFjazogRW5kQ2FsbGJhY2ssXG4gICkgPT4gdm9pZDtcbiAgK3N0b3BBbmltYXRpb246IChhbmltYXRpb25JZDogP251bWJlcikgPT4gdm9pZDtcbiAgK3NldEFuaW1hdGVkTm9kZVZhbHVlOiAobm9kZVRhZzogP251bWJlciwgdmFsdWU6ID9udW1iZXIpID0+IHZvaWQ7XG4gICtzZXRBbmltYXRlZE5vZGVPZmZzZXQ6IChub2RlVGFnOiA/bnVtYmVyLCBvZmZzZXQ6ID9udW1iZXIpID0+IHZvaWQ7XG4gICtmbGF0dGVuQW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogP251bWJlcikgPT4gdm9pZDtcbiAgK2V4dHJhY3RBbmltYXRlZE5vZGVPZmZzZXQ6IChub2RlVGFnOiA/bnVtYmVyKSA9PiB2b2lkO1xuICArY29ubmVjdEFuaW1hdGVkTm9kZVRvVmlldzogKG5vZGVUYWc6ID9udW1iZXIsIHZpZXdUYWc6ID9udW1iZXIpID0+IHZvaWQ7XG4gICtkaXNjb25uZWN0QW5pbWF0ZWROb2RlRnJvbVZpZXc6IChub2RlVGFnOiA/bnVtYmVyLCB2aWV3VGFnOiA/bnVtYmVyKSA9PiB2b2lkO1xuICArZHJvcEFuaW1hdGVkTm9kZTogKHRhZzogP251bWJlcikgPT4gdm9pZDtcbiAgK2FkZEFuaW1hdGVkRXZlbnRUb1ZpZXc6IChcbiAgICB2aWV3VGFnOiA/bnVtYmVyLFxuICAgIGV2ZW50TmFtZTogc3RyaW5nLFxuICAgIGV2ZW50TWFwcGluZzogRXZlbnRNYXBwaW5nLFxuICApID0+IHZvaWQ7XG4gICtyZW1vdmVBbmltYXRlZEV2ZW50RnJvbVZpZXc6IChcbiAgICB2aWV3VGFnOiA/bnVtYmVyLFxuICAgIGV2ZW50TmFtZTogc3RyaW5nLFxuICAgIGFuaW1hdGVkTm9kZVRhZzogP251bWJlcixcbiAgKSA9PiB2b2lkO1xuXG4gIC8vIEV2ZW50c1xuICArYWRkTGlzdGVuZXI6IChldmVudE5hbWU6IHN0cmluZykgPT4gdm9pZDtcbiAgK3JlbW92ZUxpc3RlbmVyczogKGNvdW50OiBudW1iZXIpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IChUdXJib01vZHVsZVJlZ2lzdHJ5LmdldDxTcGVjPignTmF0aXZlQW5pbWF0ZWRNb2R1bGUnKTogP1NwZWMpO1xuIl0sIm1hcHBpbmdzIjoiQUFVQSxZQUFZOztBQUFDQSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxLQUFBO0FBQUE7QUFBQUQsT0FBQSxDQUFBRSxPQUFBO0FBR2IsSUFBQUMsbUJBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUE2RSxTQUFBQyx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQUgsd0JBQUFPLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdBQUFELEdBQUEsUUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQSw0QkFBQVQsT0FBQSxFQUFBUyxHQUFBLFVBQUFFLEtBQUEsR0FBQVAsd0JBQUEsQ0FBQUMsV0FBQSxPQUFBTSxLQUFBLElBQUFBLEtBQUEsQ0FBQUMsR0FBQSxDQUFBSCxHQUFBLFlBQUFFLEtBQUEsQ0FBQUUsR0FBQSxDQUFBSixHQUFBLFNBQUFLLE1BQUEsV0FBQUMscUJBQUEsR0FBQW5CLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFvQix3QkFBQSxXQUFBQyxHQUFBLElBQUFSLEdBQUEsUUFBQVEsR0FBQSxrQkFBQXJCLE1BQUEsQ0FBQXNCLFNBQUEsQ0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFYLEdBQUEsRUFBQVEsR0FBQSxTQUFBSSxJQUFBLEdBQUFOLHFCQUFBLEdBQUFuQixNQUFBLENBQUFvQix3QkFBQSxDQUFBUCxHQUFBLEVBQUFRLEdBQUEsY0FBQUksSUFBQSxLQUFBQSxJQUFBLENBQUFSLEdBQUEsSUFBQVEsSUFBQSxDQUFBQyxHQUFBLEtBQUExQixNQUFBLENBQUFDLGNBQUEsQ0FBQWlCLE1BQUEsRUFBQUcsR0FBQSxFQUFBSSxJQUFBLFlBQUFQLE1BQUEsQ0FBQUcsR0FBQSxJQUFBUixHQUFBLENBQUFRLEdBQUEsU0FBQUgsTUFBQSxDQUFBZCxPQUFBLEdBQUFTLEdBQUEsTUFBQUUsS0FBQSxJQUFBQSxLQUFBLENBQUFXLEdBQUEsQ0FBQWIsR0FBQSxFQUFBSyxNQUFBLFlBQUFBLE1BQUE7QUFBQSxJQUFBUyxRQUFBLEdBd0Q3RHRCLG1CQUFtQixDQUFDWSxHQUFHLENBQU8sc0JBQXNCLENBQUM7QUFBQWYsT0FBQSxDQUFBRSxPQUFBLEdBQUF1QixRQUFBIn0=