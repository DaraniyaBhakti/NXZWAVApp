{"version":3,"file":"/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/PMCompose.steps.tsx","sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/PMCompose.steps.tsx"],"names":[],"mappings":"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","sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\nimport { shallow, ShallowWrapper } from \"enzyme\";\n\nimport * as helpers from \"../../../../framework/src/Helpers\";\n\nimport React from \"react\";\nimport PMCompose from \"../../src/PMCompose\";\nimport MessageEnum, { getName } from \"../../../../framework/src/Messages/MessageEnum\";\nimport { Message } from \"../../../../framework/src/Message\";\nimport { runEngine } from \"../../../../framework/src/RunEngine\";\nconst navigation = require(\"react-navigation\");\n\nconst screenProps = {\n  navigation: {\n    addListener: jest.fn().mockImplementation((event, callback) => {\n      callback();\n    }),\n    navigate: jest.fn(),\n    state: { params: { receiverUser: {}, conversationID: 0 } },\n  },\n  id: \"PMCompose\"\n};\n\nconst feature = loadFeature(\"./__tests__/features/PMCompose-scenario.feature\");\n\ndefineFeature(feature, (test) => {\n  beforeEach(() => {\n    jest.resetModules();\n    jest.doMock(\"react-native\", () => ({ Platform: { OS: \"ios\" } }));\n    jest.spyOn(helpers, \"getOS\").mockImplementation(() => \"ios\");\n  });\n\n  test(\"User navigates to PMCompose\", ({ given, when, then }) => {\n    let pmComposeWrapper: ShallowWrapper;\n    let instance: PMCompose;\n\n    given(\"I am a User loading PMCompose\", () => {\n      pmComposeWrapper = shallow(<PMCompose {...screenProps} />);\n    });\n\n    when(\"I navigate to PMCompose\", () => {\n      instance = pmComposeWrapper.instance() as PMCompose;\n\n\n    });\n    then('PMCompose will load with out errors', () => {\n      let hideKeyboard = pmComposeWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"hideKeyboard\",\n      );\n      hideKeyboard.simulate(\"press\");\n      expect(hideKeyboard).toHaveLength(1);\n      expect(pmComposeWrapper).toBeTruthy();\n    });\n\n    then('I can enter text with out errors', () => {\n      let textInputComponent = pmComposeWrapper.findWhere((node) => node.prop('testID') === 'textInputMessage');\n      textInputComponent.simulate('changeText', 'hello@aol.com');\n    });\n\n    then('I can select the button with with out errors', () => {\n      let btnImgUpload = pmComposeWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"btnImgUpload\",\n      );\n      btnImgUpload.simulate(\"press\");\n      expect(btnImgUpload).toHaveLength(1);\n\n      let btnOption50 = pmComposeWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"btnOption50\",\n      );\n      btnOption50.simulate(\"press\");\n      expect(btnOption50).toHaveLength(1);\n\n      let btnOption100 = pmComposeWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"btnOption100\",\n      );\n      btnOption100.simulate(\"press\");\n      expect(btnOption100).toHaveLength(1);\n\n      let btnOption250 = pmComposeWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"btnOption250\",\n      );\n      btnOption250.simulate(\"press\");\n      expect(btnOption250).toHaveLength(1);\n\n      let btnPmCompose = pmComposeWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"btnPmCompose\",\n      );\n      btnPmCompose.simulate(\"press\");\n      expect(btnPmCompose).toHaveLength(1);\n\n      let btnCancel = pmComposeWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"btnCancel\",\n      );\n      btnCancel.simulate(\"press\");\n      expect(btnCancel).toHaveLength(1);\n    });\n\n    then(\"Create PM Compose API load with out errors\", () => {\n      const apiPMCompose: Message = new Message(\n        getName(MessageEnum.RestAPIResponceMessage),\n      );\n      apiPMCompose.addData(\n        getName(MessageEnum.RestAPIResponceDataMessage),\n        apiPMCompose.messageId,\n      );\n      apiPMCompose.addData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage),\n        JSON.parse(JSON.stringify({\n          \"data\":\n          {\n            \"id\": \"247\",\n            \"type\": \"pm_message\",\n            \"attributes\": {\n              \"id\": 247,\n              \"message\": \"Nature\",\n              \"user_profile_info_id\": 8,\n              \"pm_conversation_id\": 31,\n              \"created_at\": \"2023-07-04T11:44:00.081Z\",\n              \"updated_at\": \"2023-07-04T11:44:00.090Z\",\n              \"is_locked\": true,\n              \"points\": 50,\n              \"image\": {\n                \"id\": 168,\n                \"url\": \"https://nxzwav-294793-ruby.b294793.dev.eastus.az.svc.builder.cafe/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBYWc9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--27fe6a532e0edb90c424c2a2418c5ec2a4f592ca/IMG_0014.JPG\"\n              }\n            }\n          }\n        })),\n      );\n      instance.apiPMCompose = apiPMCompose.messageId;\n      runEngine.sendMessage(\"Unit Test\", apiPMCompose);\n      expect(pmComposeWrapper).toBeTruthy();\n    });\n\n    then('I can leave the screen with out errors', () => {\n      instance.componentWillUnmount()\n      expect(pmComposeWrapper).toBeTruthy();\n    });\n\n  });\n});\n"]}