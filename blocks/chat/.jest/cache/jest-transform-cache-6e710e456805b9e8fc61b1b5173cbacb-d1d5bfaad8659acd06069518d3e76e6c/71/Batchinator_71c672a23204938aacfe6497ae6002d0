2af2dee65150ec08e96701e0f5ff8f7d
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var InteractionManager = require('./InteractionManager');
var Batchinator = function () {
  function Batchinator(callback, delayMS) {
    (0, _classCallCheck2.default)(this, Batchinator);
    this._delay = delayMS;
    this._callback = callback;
  }
  (0, _createClass2.default)(Batchinator, [{
    key: "dispose",
    value: function dispose() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        abort: false
      };
      if (this._taskHandle) {
        this._taskHandle.cancel();
        if (!options.abort) {
          this._callback();
        }
        this._taskHandle = null;
      }
    }
  }, {
    key: "schedule",
    value: function schedule() {
      var _this = this;
      if (this._taskHandle) {
        return;
      }
      var timeoutHandle = setTimeout(function () {
        _this._taskHandle = InteractionManager.runAfterInteractions(function () {
          _this._taskHandle = null;
          _this._callback();
        });
      }, this._delay);
      this._taskHandle = {
        cancel: function cancel() {
          return clearTimeout(timeoutHandle);
        }
      };
    }
  }]);
  return Batchinator;
}();
module.exports = Batchinator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiSW50ZXJhY3Rpb25NYW5hZ2VyIiwiQmF0Y2hpbmF0b3IiLCJjYWxsYmFjayIsImRlbGF5TVMiLCJkZWZhdWx0IiwiX2RlbGF5IiwiX2NhbGxiYWNrIiwia2V5IiwidmFsdWUiLCJkaXNwb3NlIiwib3B0aW9ucyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImFib3J0IiwiX3Rhc2tIYW5kbGUiLCJjYW5jZWwiLCJzY2hlZHVsZSIsIl90aGlzIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJydW5BZnRlckludGVyYWN0aW9ucyIsImNsZWFyVGltZW91dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJCYXRjaGluYXRvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgSW50ZXJhY3Rpb25NYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmFjdGlvbk1hbmFnZXInKTtcblxuLyoqXG4gKiBBIHNpbXBsZSBjbGFzcyBmb3IgYmF0Y2hpbmcgdXAgaW52b2NhdGlvbnMgb2YgYSBsb3ctcHJpIGNhbGxiYWNrLiBBIHRpbWVvdXQgaXMgc2V0IHRvIHJ1biB0aGVcbiAqIGNhbGxiYWNrIG9uY2UgYWZ0ZXIgYSBkZWxheSwgbm8gbWF0dGVyIGhvdyBtYW55IHRpbWVzIGl0J3Mgc2NoZWR1bGVkLiBPbmNlIHRoZSBkZWxheSBpcyByZWFjaGVkLFxuICogSW50ZXJhY3Rpb25NYW5hZ2VyLnJ1bkFmdGVySW50ZXJhY3Rpb25zIGlzIHVzZWQgdG8gaW52b2tlIHRoZSBjYWxsYmFjayBhZnRlciBhbnkgaGktcHJpXG4gKiBpbnRlcmFjdGlvbnMgYXJlIGRvbmUgcnVubmluZy5cbiAqXG4gKiBNYWtlIHN1cmUgdG8gY2xlYW51cCB3aXRoIGRpc3Bvc2UoKS4gIEV4YW1wbGU6XG4gKlxuICogICBjbGFzcyBXaWRnZXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICogICAgIF9iYXRjaGVkU2F2ZTogbmV3IEJhdGNoaW5hdG9yKCgpID0+IHRoaXMuX3NhdmVTdGF0ZSwgMTAwMCk7XG4gKiAgICAgX3NhdmVTYXRlKCkge1xuICogICAgICAgLy8gc2F2ZSB0aGlzLnN0YXRlIHRvIGRpc2tcbiAqICAgICB9XG4gKiAgICAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICogICAgICAgdGhpcy5fYmF0Y2hlZFNhdmUuc2NoZWR1bGUoKTtcbiAqICAgICB9XG4gKiAgICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gKiAgICAgICB0aGlzLl9iYXRjaGVkU2F2ZS5kaXNwb3NlKCk7XG4gKiAgICAgfVxuICogICAgIC4uLlxuICogICB9XG4gKi9cbmNsYXNzIEJhdGNoaW5hdG9yIHtcbiAgX2NhbGxiYWNrOiAoKSA9PiB2b2lkO1xuICBfZGVsYXk6IG51bWJlcjtcbiAgX3Rhc2tIYW5kbGU6ID97Y2FuY2VsOiAoKSA9PiB2b2lkfTtcbiAgY29uc3RydWN0b3IoY2FsbGJhY2s6ICgpID0+IHZvaWQsIGRlbGF5TVM6IG51bWJlcikge1xuICAgIHRoaXMuX2RlbGF5ID0gZGVsYXlNUztcbiAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrO1xuICB9XG4gIC8qXG4gICAqIENsZWFudXAgYW55IHBlbmRpbmcgdGFza3MuXG4gICAqXG4gICAqIEJ5IGRlZmF1bHQsIGlmIHRoZXJlIGlzIGEgcGVuZGluZyB0YXNrIHRoZSBjYWxsYmFjayBpcyBydW4gaW1tZWRpYXRlbHkuIFNldCB0aGUgb3B0aW9uIGFib3J0IHRvXG4gICAqIHRydWUgdG8gbm90IGNhbGwgdGhlIGNhbGxiYWNrIGlmIGl0IHdhcyBwZW5kaW5nLlxuICAgKi9cbiAgZGlzcG9zZShvcHRpb25zOiB7YWJvcnQ6IGJvb2xlYW59ID0ge2Fib3J0OiBmYWxzZX0pIHtcbiAgICBpZiAodGhpcy5fdGFza0hhbmRsZSkge1xuICAgICAgdGhpcy5fdGFza0hhbmRsZS5jYW5jZWwoKTtcbiAgICAgIGlmICghb3B0aW9ucy5hYm9ydCkge1xuICAgICAgICB0aGlzLl9jYWxsYmFjaygpO1xuICAgICAgfVxuICAgICAgdGhpcy5fdGFza0hhbmRsZSA9IG51bGw7XG4gICAgfVxuICB9XG4gIHNjaGVkdWxlKCkge1xuICAgIGlmICh0aGlzLl90YXNrSGFuZGxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHRpbWVvdXRIYW5kbGUgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuX3Rhc2tIYW5kbGUgPSBJbnRlcmFjdGlvbk1hbmFnZXIucnVuQWZ0ZXJJbnRlcmFjdGlvbnMoKCkgPT4ge1xuICAgICAgICAvLyBOb3RlIHRoYXQgd2UgY2xlYXIgdGhlIGhhbmRsZSBiZWZvcmUgaW52b2tpbmcgdGhlIGNhbGxiYWNrIHNvIHRoYXQgaWYgdGhlIGNhbGxiYWNrIGNhbGxzXG4gICAgICAgIC8vIHNjaGVkdWxlIGFnYWluLCBpdCB3aWxsIGFjdHVhbGx5IHNjaGVkdWxlIGFub3RoZXIgdGFzay5cbiAgICAgICAgdGhpcy5fdGFza0hhbmRsZSA9IG51bGw7XG4gICAgICAgIHRoaXMuX2NhbGxiYWNrKCk7XG4gICAgICB9KTtcbiAgICB9LCB0aGlzLl9kZWxheSk7XG4gICAgdGhpcy5fdGFza0hhbmRsZSA9IHtjYW5jZWw6ICgpID0+IGNsZWFyVGltZW91dCh0aW1lb3V0SGFuZGxlKX07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCYXRjaGluYXRvcjtcbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFBQyxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUEsSUFBQUMsZ0JBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFFLGFBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUViLElBQU1HLGtCQUFrQixHQUFHSCxPQUFPLENBQUMsc0JBQXNCLENBQUM7QUFBQyxJQXdCckRJLFdBQVc7RUFJZixTQUFBQSxZQUFZQyxRQUFvQixFQUFFQyxPQUFlLEVBQUU7SUFBQSxJQUFBTCxnQkFBQSxDQUFBTSxPQUFBLFFBQUFILFdBQUE7SUFDakQsSUFBSSxDQUFDSSxNQUFNLEdBQUdGLE9BQU87SUFDckIsSUFBSSxDQUFDRyxTQUFTLEdBQUdKLFFBQVE7RUFDM0I7RUFBQyxJQUFBSCxhQUFBLENBQUFLLE9BQUEsRUFBQUgsV0FBQTtJQUFBTSxHQUFBO0lBQUFDLEtBQUEsRUFPRCxTQUFBQyxRQUFBLEVBQW9EO01BQUEsSUFBNUNDLE9BQXlCLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHO1FBQUNHLEtBQUssRUFBRTtNQUFLLENBQUM7TUFDaEQsSUFBSSxJQUFJLENBQUNDLFdBQVcsRUFBRTtRQUNwQixJQUFJLENBQUNBLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDTixPQUFPLENBQUNJLEtBQUssRUFBRTtVQUNsQixJQUFJLENBQUNSLFNBQVMsQ0FBQyxDQUFDO1FBQ2xCO1FBQ0EsSUFBSSxDQUFDUyxXQUFXLEdBQUcsSUFBSTtNQUN6QjtJQUNGO0VBQUM7SUFBQVIsR0FBQTtJQUFBQyxLQUFBLEVBQ0QsU0FBQVMsU0FBQSxFQUFXO01BQUEsSUFBQUMsS0FBQTtNQUNULElBQUksSUFBSSxDQUFDSCxXQUFXLEVBQUU7UUFDcEI7TUFDRjtNQUNBLElBQU1JLGFBQWEsR0FBR0MsVUFBVSxDQUFDLFlBQU07UUFDckNGLEtBQUksQ0FBQ0gsV0FBVyxHQUFHZixrQkFBa0IsQ0FBQ3FCLG9CQUFvQixDQUFDLFlBQU07VUFHL0RILEtBQUksQ0FBQ0gsV0FBVyxHQUFHLElBQUk7VUFDdkJHLEtBQUksQ0FBQ1osU0FBUyxDQUFDLENBQUM7UUFDbEIsQ0FBQyxDQUFDO01BQ0osQ0FBQyxFQUFFLElBQUksQ0FBQ0QsTUFBTSxDQUFDO01BQ2YsSUFBSSxDQUFDVSxXQUFXLEdBQUc7UUFBQ0MsTUFBTSxFQUFFLFNBQUFBLE9BQUE7VUFBQSxPQUFNTSxZQUFZLENBQUNILGFBQWEsQ0FBQztRQUFBO01BQUEsQ0FBQztJQUNoRTtFQUFDO0VBQUEsT0FBQWxCLFdBQUE7QUFBQTtBQUdIc0IsTUFBTSxDQUFDQyxPQUFPLEdBQUd2QixXQUFXIn0=