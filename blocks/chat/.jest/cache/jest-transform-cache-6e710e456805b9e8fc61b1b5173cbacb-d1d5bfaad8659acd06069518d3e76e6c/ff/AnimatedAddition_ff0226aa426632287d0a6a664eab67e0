8abb2a558474aee6f5b6667ed1a01357
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var AnimatedInterpolation = require('./AnimatedInterpolation');
var AnimatedNode = require('./AnimatedNode');
var AnimatedValue = require('./AnimatedValue');
var AnimatedWithChildren = require('./AnimatedWithChildren');
var AnimatedAddition = function (_AnimatedWithChildren) {
  (0, _inherits2.default)(AnimatedAddition, _AnimatedWithChildren);
  var _super = _createSuper(AnimatedAddition);
  function AnimatedAddition(a, b) {
    var _this;
    (0, _classCallCheck2.default)(this, AnimatedAddition);
    _this = _super.call(this);
    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }
  (0, _createClass2.default)(AnimatedAddition, [{
    key: "__makeNative",
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedAddition.prototype), "__makeNative", this).call(this);
    }
  }, {
    key: "__getValue",
    value: function __getValue() {
      return this._a.__getValue() + this._b.__getValue();
    }
  }, {
    key: "interpolate",
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: "__attach",
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: "__detach",
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedAddition.prototype), "__detach", this).call(this);
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      return {
        type: 'addition',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedAddition;
}(AnimatedWithChildren);
module.exports = AnimatedAddition;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2dldDIiLCJfaW5oZXJpdHMyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2dldFByb3RvdHlwZU9mMiIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9jcmVhdGVTdXBlckludGVybmFsIiwiU3VwZXIiLCJkZWZhdWx0IiwicmVzdWx0IiwiTmV3VGFyZ2V0IiwiY29uc3RydWN0b3IiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiYXJndW1lbnRzIiwiYXBwbHkiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJlIiwiQW5pbWF0ZWRJbnRlcnBvbGF0aW9uIiwiQW5pbWF0ZWROb2RlIiwiQW5pbWF0ZWRWYWx1ZSIsIkFuaW1hdGVkV2l0aENoaWxkcmVuIiwiQW5pbWF0ZWRBZGRpdGlvbiIsIl9BbmltYXRlZFdpdGhDaGlsZHJlbiIsIl9zdXBlciIsImEiLCJiIiwiX3RoaXMiLCJfYSIsIl9iIiwia2V5IiwidmFsdWUiLCJfX21ha2VOYXRpdmUiLCJfX2dldFZhbHVlIiwiaW50ZXJwb2xhdGUiLCJjb25maWciLCJfX2F0dGFjaCIsIl9fYWRkQ2hpbGQiLCJfX2RldGFjaCIsIl9fcmVtb3ZlQ2hpbGQiLCJfX2dldE5hdGl2ZUNvbmZpZyIsInR5cGUiLCJpbnB1dCIsIl9fZ2V0TmF0aXZlVGFnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkFuaW1hdGVkQWRkaXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFuaW1hdGVkSW50ZXJwb2xhdGlvbiA9IHJlcXVpcmUoJy4vQW5pbWF0ZWRJbnRlcnBvbGF0aW9uJyk7XG5jb25zdCBBbmltYXRlZE5vZGUgPSByZXF1aXJlKCcuL0FuaW1hdGVkTm9kZScpO1xuY29uc3QgQW5pbWF0ZWRWYWx1ZSA9IHJlcXVpcmUoJy4vQW5pbWF0ZWRWYWx1ZScpO1xuY29uc3QgQW5pbWF0ZWRXaXRoQ2hpbGRyZW4gPSByZXF1aXJlKCcuL0FuaW1hdGVkV2l0aENoaWxkcmVuJyk7XG5cbmltcG9ydCB0eXBlIHtJbnRlcnBvbGF0aW9uQ29uZmlnVHlwZX0gZnJvbSAnLi9BbmltYXRlZEludGVycG9sYXRpb24nO1xuXG5jbGFzcyBBbmltYXRlZEFkZGl0aW9uIGV4dGVuZHMgQW5pbWF0ZWRXaXRoQ2hpbGRyZW4ge1xuICBfYTogQW5pbWF0ZWROb2RlO1xuICBfYjogQW5pbWF0ZWROb2RlO1xuXG4gIGNvbnN0cnVjdG9yKGE6IEFuaW1hdGVkTm9kZSB8IG51bWJlciwgYjogQW5pbWF0ZWROb2RlIHwgbnVtYmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9hID0gdHlwZW9mIGEgPT09ICdudW1iZXInID8gbmV3IEFuaW1hdGVkVmFsdWUoYSkgOiBhO1xuICAgIHRoaXMuX2IgPSB0eXBlb2YgYiA9PT0gJ251bWJlcicgPyBuZXcgQW5pbWF0ZWRWYWx1ZShiKSA6IGI7XG4gIH1cblxuICBfX21ha2VOYXRpdmUoKSB7XG4gICAgdGhpcy5fYS5fX21ha2VOYXRpdmUoKTtcbiAgICB0aGlzLl9iLl9fbWFrZU5hdGl2ZSgpO1xuICAgIHN1cGVyLl9fbWFrZU5hdGl2ZSgpO1xuICB9XG5cbiAgX19nZXRWYWx1ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9hLl9fZ2V0VmFsdWUoKSArIHRoaXMuX2IuX19nZXRWYWx1ZSgpO1xuICB9XG5cbiAgaW50ZXJwb2xhdGUoY29uZmlnOiBJbnRlcnBvbGF0aW9uQ29uZmlnVHlwZSk6IEFuaW1hdGVkSW50ZXJwb2xhdGlvbiB7XG4gICAgcmV0dXJuIG5ldyBBbmltYXRlZEludGVycG9sYXRpb24odGhpcywgY29uZmlnKTtcbiAgfVxuXG4gIF9fYXR0YWNoKCk6IHZvaWQge1xuICAgIHRoaXMuX2EuX19hZGRDaGlsZCh0aGlzKTtcbiAgICB0aGlzLl9iLl9fYWRkQ2hpbGQodGhpcyk7XG4gIH1cblxuICBfX2RldGFjaCgpOiB2b2lkIHtcbiAgICB0aGlzLl9hLl9fcmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgdGhpcy5fYi5fX3JlbW92ZUNoaWxkKHRoaXMpO1xuICAgIHN1cGVyLl9fZGV0YWNoKCk7XG4gIH1cblxuICBfX2dldE5hdGl2ZUNvbmZpZygpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAnYWRkaXRpb24nLFxuICAgICAgaW5wdXQ6IFt0aGlzLl9hLl9fZ2V0TmF0aXZlVGFnKCksIHRoaXMuX2IuX19nZXROYXRpdmVUYWcoKV0sXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFuaW1hdGVkQWRkaXRpb247XG4iXSwibWFwcGluZ3MiOiJBQVNBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGdCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxhQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRyxLQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBSSxVQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBSywyQkFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQU0sZ0JBQUEsR0FBQVAsc0JBQUEsQ0FB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