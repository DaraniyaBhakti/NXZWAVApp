{"version":3,"file":"/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/PMChatView.steps.tsx","sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/PMChatView.steps.tsx"],"names":[],"mappings":"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","sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\nimport { shallow, ShallowWrapper } from \"enzyme\";\nimport DocumentPicker, { DocumentPickerResponse } from 'react-native-document-picker';\n\nimport * as helpers from \"../../../../framework/src/Helpers\";\n\nimport React from \"react\";\nimport PMChatView from \"../../src/PmChatView\";\nconst navigation = require(\"react-navigation\");\n\nconst screenProps = {\n  navigation: {\n    addListener: jest.fn().mockImplementation((event, callback) => {\n      callback();\n    }),\n    navigate: jest.fn(),\n  },\n  id: \"PMChatView\"\n};\n\nconst feature = loadFeature(\"./__tests__/features/PMChatView-scenario.feature\");\n\ndefineFeature(feature, (test) => {\n  beforeEach(() => {\n    jest.resetModules();\n    jest.doMock(\"react-native\", () => ({ Platform: { OS: \"ios\" } }));\n    jest.spyOn(helpers, \"getOS\").mockImplementation(() => \"ios\");\n    // jest.spyOn(DocumentPicker, 'pickSingle').mockImplementation(() => {\n    //   const response: DocumentPickerResponse = { name: \"testFile\", uri: 'testUri', size: 100, fileCopyUri: \"testCopyUri\", type: \"testFileType\" };\n    //   return Promise.resolve(response);\n    // });\n  });\n\n  test(\"User navigates to PMChatView\", ({ given, when, then }) => {\n    let pmChatViewWrapper: ShallowWrapper;\n    let instance: PMChatView;\n\n    given(\"I am a User loading PMChatView\", () => {\n      pmChatViewWrapper = shallow(<PMChatView {...screenProps} />);\n    });\n\n    when(\"I navigate to PMChatView\", () => {\n      instance = pmChatViewWrapper.instance() as PMChatView;\n\n\n    });\n    then('PMChatView will load with out errors', () => {\n      expect(pmChatViewWrapper).toBeTruthy();\n    });\n\n    then('I can enter text with out errors', () => {\n      let textInputComponent = pmChatViewWrapper.findWhere((node) => node.prop('testID') === 'inputMessage');\n      textInputComponent.simulate('changeText', 'hello@aol.com');\n    });\n\n    then('I can select the button with with out errors', () => {\n      let backBtn = pmChatViewWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"backBtn\",\n      );\n      backBtn.simulate(\"press\");\n      expect(backBtn).toHaveLength(1);\n\n      let editBtn = pmChatViewWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"editBtn\",\n      );\n      editBtn.simulate(\"press\");\n      expect(editBtn).toHaveLength(1);\n\n      let btnSendMessage = pmChatViewWrapper.findWhere(\n        (node) => node.prop(\"testID\") === \"btnSendMessage\",\n      );\n      btnSendMessage.simulate(\"press\");\n      expect(btnSendMessage).toHaveLength(1);\n    });\n    then('I can leave the screen with out errors', () => {\n      instance.componentWillUnmount()\n      expect(pmChatViewWrapper).toBeTruthy();\n    });\n\n  });\n});\n"]}