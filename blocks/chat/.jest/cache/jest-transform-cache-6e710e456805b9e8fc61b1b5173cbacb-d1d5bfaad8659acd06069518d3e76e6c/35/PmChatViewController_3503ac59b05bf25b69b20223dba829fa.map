{"version":3,"names":["Message_1","cov_v6udidbdo","s","require","BlockComponent_1","MessageEnum_1","__importStar","RunEngine_1","react_1","__importDefault","react_native_1","react_native_document_picker_1","AppGlobals_1","AppConstant_1","Utilities_1","exports","configJSON","PmChatViewController","BlockComponent","constructor","props","f","unlockMessageApiCallId","getChatApiCallId","getChatListApiCallId","addUserToChatApiCallId","leaveChatApiCallId","sendMessageApiCallId","toggleMuteApiCallId","updateReadMessageApiCallId","apiToken","loginUserProfileId","putReadMessageApiCallId","chatTypePM","conversationID","isStringNullOrBlank","string","b","length","showModal","setState","isVisibleModal","hideModal","hidePreviewModal","isVisiblePreviewModal","imageUrl","docRes","handleAccountIdInputChange","accountIdInput","handleMessageChange","message","getChatDetails","token","chatId","header","apiContentType","requestMessage","Message","getName","default","RestAPIRequestMessage","messageId","addData","RestAPIResponceEndPointMessage","showChatApiEndPoint","RestAPIRequestHeaderMessage","JSON","stringify","RestAPIRequestMethodMessage","getApiMethod","sendChatMessage","receiverId","__awaiter","AsyncStorage","getItem","AsyncStorageKey","headerToken","formData","FormData","append","state","APIRequest","httpPostMethod","apiEndPoint","APIEndPoint","endPointAPIPmChat","APIConstant","markQuestion","paramsReceiverID","markEqual","RestAPIRequestBodyMessage","runEngine","sendMessage","id","updateReadMessages","bodyData","chat_id","updateReadMessageApiEndPoint","putApiMethod","openFile","response","pickSingle","type","types","images","uri","error","isCancel","debugLog","inputAccountIdProps","onChangeText","text","btnSendMessageProps","onPress","receiverUserID","doButtonBackPressed","navigation","navigate","doButtonPressNewMessage","receive","bind","navigationParams","params","receiverUser","userID","userName","userPic","userPoints","userRole","subScribedMessages","RestAPIResponceMessage","NavigationPayLoadMessage","accountId","chatData","keyboardHeight","muted","messageList","receiverUserName","receiverUserRole","receiverUserPic","receiverUserPoints","attachBuildingBlock","scrollViewRef","createRef","fileInputRef","componentDidMount","_super","call","userProfileId","profileUserID","getChatList","refreshChatInterval","setInterval","isTypePM","getStorageData","chatTypeDm","Boolean","componentWillUnmount","clearInterval","from","apiRequestCallId","getData","RestAPIResponceDataMessage","responseJson","RestAPIResponceSuccessMessage","data","attributes","accounts_chats","find","item","account_id","conversation_id","getReadMessage","showAlert","errorTitle","refreshConversationListScreen","SessionResponseMessage","SessionResponseToken","responseData","SessionResponseData","messageData","parse","meta","jsonApiContentType","httpGetMethod","endPointAPIGetPMChatList","unlockMessage","message_id","httpPutMethod","endPointAPIUnlockMessage","paramsMessageID","conversationKey","paramsPMConversationID","paramsDMConversationID","endPointAPIPutReadMessage","NavigationMessage","NavigationPropsMessage","messageType","send"],"sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/PmChatViewController.tsx"],"sourcesContent":["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\nimport React, { ChangeEvent } from \"react\";\nimport { AsyncStorage, ScrollView } from \"react-native\";\nimport DocumentPicker from \"react-native-document-picker\";\nimport {\n  InputProps\n} from \"@material-ui/core\";\nimport { AsyncStorageKey } from \"../../../components/src/AppGlobals\";\nimport { APIConstant, APIEndPoint, APIRequest } from \"../../../framework/src/AppConstant\";\nimport { getStorageData } from \"../../../framework/src/Utilities\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\n// Customizable Area Start\nexport interface IChatData {\n  id: string;\n  attributes: {\n    id: number;\n    name: string;\n    is_notification_mute: boolean;\n    accounts_chats: [\n      {\n        id: string;\n        attributes: {\n          account_id: number;\n          muted: boolean;\n          unread_count: number;\n        };\n      }\n    ];\n    messages: IMessage[];\n  };\n  relationships: { accounts: { data: { id: string; type: string }[] } };\n}\n\nexport interface IMessage {\n  id: string;\n  type: \"pm_chat\";\n  attributes: {\n    id: number;\n    points: number;\n    message: PMMessage;\n    is_locked: boolean;\n    image: string | null;\n    is_mark_read: boolean;\n    profile: PMProfile;\n    conversation_id: number;\n  };\n}\n\nexport interface PMProfile {\n  profile_pic: string | null,\n  user_name: string,\n  user_role: string | null\n}\n\nexport interface PMMessage {\n  message: string,\n  created_at: string\n}\nexport interface ReceiveUser {\n  userID: string,\n  userName: string,\n  userRole: string,\n  userPic: string,\n  userPoints: string,\n}\n// Customizable Area End\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  token: string;\n  chatId: number;\n  message: string;\n  accountIdInput: string;\n  accountId: number;\n  chatData: IChatData | null;\n  isVisibleModal: boolean;\n  isVisiblePreviewModal: boolean;\n  imageUrl: string;\n  docRes: unknown;\n  keyboardHeight: number;\n  muted: boolean | null;\n  messageList: IMessage[];\n  receiverUserID: string;\n  receiverUserName: string;\n  receiverUserRole: string;\n  receiverUserPic: string;\n  receiverUserPoints: string;\n  conversationID: string;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\nexport default class PmChatViewController extends BlockComponent<Props, S, SS> {\n  // Customizable Area Start\n  unlockMessageApiCallId: string = \"\";\n  getChatApiCallId: string = \"\";\n  getChatListApiCallId: string = \"\";\n  addUserToChatApiCallId: string = \"\";\n  leaveChatApiCallId: string = \"\";\n  sendMessageApiCallId: string = \"\";\n  toggleMuteApiCallId: string = \"\";\n  updateReadMessageApiCallId: string = \"\";\n  refreshChatInterval: unknown;\n  scrollViewRef: React.RefObject<ScrollView>;\n  fileInputRef: React.RefObject<InputProps & { click: Function }>;\n  apiToken: string = \"\";\n  loginUserProfileId: string = \"\"\n  putReadMessageApiCallId: string = \"\";\n  chatTypePM: boolean = true;\n  conversationID: string = \"\";\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    const navigationParams = this.props.navigation.state.params;\n    let receiverUser = navigationParams.receiverUser;\n    let conversationID = navigationParams.conversationID;\n    let userID = receiverUser.userID\n    let userName = receiverUser.userName\n    let userPic = receiverUser.userPic\n    let userPoints = receiverUser.userPoints\n    let userRole = receiverUser.userRole\n    // Customizable Area End\n\n    this.subScribedMessages = [\n      // Customizable Area Start\n      // getName(MessageEnum.SessionResponseMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n      // Customizable Area End\n    ];\n\n    this.state = {\n      // Customizable Area Start\n      token: \"\",\n      chatId: 3,\n      message: \"\",\n      accountId: -1,\n      accountIdInput: \"\",\n      chatData: null,\n      isVisibleModal: false,\n      isVisiblePreviewModal: false,\n      imageUrl: \"\",\n      docRes: null,\n      keyboardHeight: 0,\n      muted: null,\n      messageList: [],\n      receiverUserID: userID,\n      receiverUserName: userName,\n      receiverUserRole: userRole,\n      receiverUserPic: userPic,\n      receiverUserPoints: userPoints,\n      conversationID: conversationID\n      // Customizable Area End\n    };\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n    // Customizable Area Start\n    this.scrollViewRef = React.createRef();\n    this.fileInputRef = React.createRef();\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n  async componentDidMount() {\n    super.componentDidMount();\n    const token = \"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA\"\n    //'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MTEsImV4cCI6MTcxODg5MjU2MX0.rblrFmToG3SzCfMrcECx9aKQu2VWvbcBHTqdr_irDFhYQutDYuzeJLKRoWbVvWfHBTFL5SCUHuwhH3sVZXG40w'\n    this.apiToken = \"\" + token;\n    let userProfileId = await AsyncStorage.getItem(AsyncStorageKey.profileUserID);\n    this.loginUserProfileId = \"\" + userProfileId;\n    this.getChatList(),\n      this.refreshChatInterval = setInterval(\n        () => this.getChatList(),\n        30000\n      );\n    let isTypePM = await getStorageData(AsyncStorageKey.chatTypeDm);\n    //await AsyncStorage.getItem(AsyncStorageKey.chatTypePm);\n    this.chatTypePM = Boolean(isTypePM);\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.refreshChatInterval as number);\n  }\n\n  isStringNullOrBlank = (string: string) => {\n    return !string || string.length === 0;\n  };\n\n  showModal = () => {\n    this.setState({ isVisibleModal: true });\n  };\n\n  hideModal = () => {\n    this.setState({ isVisibleModal: false });\n  };\n\n  hidePreviewModal = () => {\n    this.setState({ isVisiblePreviewModal: false, imageUrl: '', docRes: null });\n  };\n\n  handleAccountIdInputChange = (accountIdInput: string) => {\n    this.setState({ accountIdInput });\n  };\n\n  handleMessageChange = (message: string) => {\n    this.setState({ message });\n  };\n\n  getChatDetails = (token: string, chatId: number) => {\n\n    const header = {\n      \"Content-Type\": configJSON.apiContentType,\n      token,\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getChatApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.showChatApiEndPoint}/${chatId}`\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.getApiMethod\n    );\n  };\n\n  sendChatMessage = async (receiverId: string, message: string, imageUrl?: string) => {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.sendMessageApiCallId = requestMessage.messageId;\n\n    let token = await AsyncStorage.getItem(AsyncStorageKey.headerToken);\n    const header = {\n      'Content-Type': 'multipart/form-data',\n      \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA\",\n      //'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MTEsImV4cCI6MTcxODg5MjU2MX0.rblrFmToG3SzCfMrcECx9aKQu2VWvbcBHTqdr_irDFhYQutDYuzeJLKRoWbVvWfHBTFL5SCUHuwhH3sVZXG40w'\n    };\n\n    const formData = new FormData();\n    formData.append(\"message\", this.state.message);\n    formData.append(\"points\", 0 as unknown as Blob);\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPostMethod\n    );\n\n    let apiEndPoint =\n      APIEndPoint.endPointAPIPmChat + APIConstant.markQuestion + APIConstant.paramsReceiverID + APIConstant.markEqual + receiverId\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      formData\n    );\n    this.setState({ message: \"\", imageUrl: \"\", isVisiblePreviewModal: false });\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  updateReadMessages = () => {\n    const header = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.state.token,\n    };\n    const bodyData = {\n      chat_id: this.state.chatId,\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.updateReadMessageApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.updateReadMessageApiEndPoint}`\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(bodyData)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.putApiMethod\n    );\n\n    //runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  openFile = async () => {\n    try {\n      const response = await DocumentPicker.pickSingle({\n        type: [\n          DocumentPicker.types.images,\n        ],\n      });\n\n      if (response) {\n        this.setState({ imageUrl: response.uri, isVisiblePreviewModal: true, docRes: response })\n      }\n    } catch (error) {\n      if (DocumentPicker.isCancel(error)) {\n        runEngine.debugLog(\"Message Recived\", \"User Canceled Picker\");\n      } else {\n        runEngine.debugLog(\"Message Recived\", error);\n      }\n    }\n  };\n\n  inputAccountIdProps = {\n    onChangeText: (text: string) => {\n      this.setState({ accountIdInput: text });\n    },\n  };\n\n\n  btnSendMessageProps = {\n    onPress: () => {\n      this.sendChatMessage(this.state.receiverUserID, this.state.message);\n\n    },\n  };\n\n  async receive(from: string, message: Message) {\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n      const responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      switch (apiRequestCallId) {\n        case this.getChatApiCallId: {\n          const chatData = responseJson.data;\n          const { muted } = chatData.attributes.accounts_chats.find(\n            (item: { attributes: { account_id: number } }) =>\n              item.attributes.account_id === this.state.accountId\n          ).attributes;\n          this.setState({\n            chatData,\n            muted,\n          });\n          this.updateReadMessages();\n          break;\n        }\n        case this.sendMessageApiCallId: {\n          this.getChatList();\n          break;\n        }\n        case this.getChatListApiCallId: {\n          this.setState(\n            {\n              messageList: responseJson?.data\n            },\n            () => {\n              // if (!this.state.conversationID && this.state.messageList.length > 0) {\n                //This function call one time after the message list  \n                this.conversationID = \"\" + this.state.messageList[0].attributes.conversation_id\n                this.getReadMessage();\n              // }\n            }\n          );\n          break;\n        }\n        case this.unlockMessageApiCallId: {\n          if (responseJson.data) {\n            this.getChatList();\n          } else {\n            this.showAlert(\n              configJSON.errorTitle,\n              responseJson.message,\n              \"\"\n            );\n          }\n          break;\n        }\n        case this.putReadMessageApiCallId: {\n          //Callback message for conversation screen \n          this.refreshConversationListScreen()\n          break;\n        }\n      }\n    }\n    else if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      const token: string = message.getData(\n        getName(MessageEnum.SessionResponseToken)\n      );\n      const responseData: string = message.getData(\n        getName(MessageEnum.SessionResponseData)\n      );\n      if (responseData) {\n        const messageData = JSON.parse(responseData);\n        if (messageData && messageData.meta) {\n          const accountId: number = messageData.meta.id;\n          this.setState({ accountId });\n        }\n      }\n    }\n  }\n\n  doButtonBackPressed = () => {\n    this.props.navigation.navigate('Chat');\n  };\n\n  doButtonPressNewMessage = () => {\n    this.props.navigation.navigate(\"ChatNew\")\n  };\n\n  getChatList() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getChatListApiCallId = requestMessage.messageId;\n\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA'\n      //this.apiToken,\n      //'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MTEsImV4cCI6MTcxODg5MjU2MX0.rblrFmToG3SzCfMrcECx9aKQu2VWvbcBHTqdr_irDFhYQutDYuzeJLKRoWbVvWfHBTFL5SCUHuwhH3sVZXG40w'\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpGetMethod\n    );\n\n    let apiEndPoint = APIEndPoint.endPointAPIGetPMChatList +\n      APIConstant.markQuestion +\n      APIConstant.paramsReceiverID +\n      APIConstant.markEqual + this.state.receiverUserID;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  async unlockMessage(message_id: number) {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.unlockMessageApiCallId = requestMessage.messageId;\n\n    const header = {\n      token: \"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA\"\n      //'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MTEsImV4cCI6MTcxODg5MjU2MX0.rblrFmToG3SzCfMrcECx9aKQu2VWvbcBHTqdr_irDFhYQutDYuzeJLKRoWbVvWfHBTFL5SCUHuwhH3sVZXG40w'\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPutMethod\n    );\n\n    let apiEndPoint = APIEndPoint.endPointAPIUnlockMessage +\n      APIConstant.markQuestion +\n      APIConstant.paramsMessageID +\n      APIConstant.markEqual + message_id;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  getReadMessage() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.putReadMessageApiCallId = requestMessage.messageId;\n\n    let token = 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA';\n    // 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MTEsImV4cCI6MTcxODg5MjU2MX0.rblrFmToG3SzCfMrcECx9aKQu2VWvbcBHTqdr_irDFhYQutDYuzeJLKRoWbVvWfHBTFL5SCUHuwhH3sVZXG40w'\n    // await AsyncStorage.getItem(AsyncStorageKey.headerToken);\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: token,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPutMethod\n    );\n\n    let conversationKey = \"\";\n    if (this.chatTypePM) {\n      conversationKey = APIConstant.paramsPMConversationID\n    } else {\n      conversationKey = APIConstant.paramsDMConversationID\n    }\n    let apiEndPoint = APIEndPoint.endPointAPIPutReadMessage\n      + APIConstant.markQuestion\n      + conversationKey\n      + APIConstant.markEqual + this.state.conversationID\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  refreshConversationListScreen() {\n    const message = new Message(getName(MessageEnum.NavigationMessage));\n    message.addData(getName(MessageEnum.NavigationPropsMessage), {\n      messageType: \"readMessage\",\n      conversationID: this.state.conversationID\n    });\n    this.send(message);\n  }\n\n  // Customizable Area End\n}"],"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"}