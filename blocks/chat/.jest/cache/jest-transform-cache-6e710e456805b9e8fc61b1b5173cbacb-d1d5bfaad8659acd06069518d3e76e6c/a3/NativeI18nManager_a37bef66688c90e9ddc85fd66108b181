5ea9332b4ea249589039ddd96415175f
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = TurboModuleRegistry.get('I18nManager');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiTmF0aXZlSTE4bk1hbmFnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUge1R1cmJvTW9kdWxlfSBmcm9tICcuLi9UdXJib01vZHVsZS9SQ1RFeHBvcnQnO1xuaW1wb3J0ICogYXMgVHVyYm9Nb2R1bGVSZWdpc3RyeSBmcm9tICcuLi9UdXJib01vZHVsZS9UdXJib01vZHVsZVJlZ2lzdHJ5JztcblxuZXhwb3J0IGludGVyZmFjZSBTcGVjIGV4dGVuZHMgVHVyYm9Nb2R1bGUge1xuICArZ2V0Q29uc3RhbnRzOiAoKSA9PiB7fFxuICAgIGlzUlRMOiBib29sZWFuLFxuICAgIGRvTGVmdEFuZFJpZ2h0U3dhcEluUlRMOiBib29sZWFuLFxuICB8fTtcbiAgYWxsb3dSVEw6IChhbGxvd1JUTDogYm9vbGVhbikgPT4gdm9pZDtcbiAgZm9yY2VSVEw6IChmb3JjZVJUTDogYm9vbGVhbikgPT4gdm9pZDtcbiAgc3dhcExlZnRBbmRSaWdodEluUlRMOiAoZmxpcFN0eWxlczogYm9vbGVhbikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgKFR1cmJvTW9kdWxlUmVnaXN0cnkuZ2V0PFNwZWM+KCdJMThuTWFuYWdlcicpOiA/U3BlYyk7XG4iXSwibWFwcGluZ3MiOiJBQVVBLFlBQVk7O0FBQUNBLE1BQUEsQ0FBQUMsY0FBQSxDQUFBQyxPQUFBO0VBQUFDLEtBQUE7QUFBQTtBQUFBRCxPQUFBLENBQUFFLE9BQUE7QUFHYixJQUFBQyxtQkFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQTBFLFNBQUFDLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBSCx3QkFBQU8sR0FBQSxFQUFBSixXQUFBLFNBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsV0FBQUQsR0FBQSxRQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBLDRCQUFBVCxPQUFBLEVBQUFTLEdBQUEsVUFBQUUsS0FBQSxHQUFBUCx3QkFBQSxDQUFBQyxXQUFBLE9BQUFNLEtBQUEsSUFBQUEsS0FBQSxDQUFBQyxHQUFBLENBQUFILEdBQUEsWUFBQUUsS0FBQSxDQUFBRSxHQUFBLENBQUFKLEdBQUEsU0FBQUssTUFBQSxXQUFBQyxxQkFBQSxHQUFBbkIsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQW9CLHdCQUFBLFdBQUFDLEdBQUEsSUFBQVIsR0FBQSxRQUFBUSxHQUFBLGtCQUFBckIsTUFBQSxDQUFBc0IsU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQVgsR0FBQSxFQUFBUSxHQUFBLFNBQUFJLElBQUEsR0FBQU4scUJBQUEsR0FBQW5CLE1BQUEsQ0FBQW9CLHdCQUFBLENBQUFQLEdBQUEsRUFBQVEsR0FBQSxjQUFBSSxJQUFBLEtBQUFBLElBQUEsQ0FBQVIsR0FBQSxJQUFBUSxJQUFBLENBQUFDLEdBQUEsS0FBQTFCLE1BQUEsQ0FBQUMsY0FBQSxDQUFBaUIsTUFBQSxFQUFBRyxHQUFBLEVBQUFJLElBQUEsWUFBQVAsTUFBQSxDQUFBRyxHQUFBLElBQUFSLEdBQUEsQ0FBQVEsR0FBQSxTQUFBSCxNQUFBLENBQUFkLE9BQUEsR0FBQVMsR0FBQSxNQUFBRSxLQUFBLElBQUFBLEtBQUEsQ0FBQVcsR0FBQSxDQUFBYixHQUFBLEVBQUFLLE1BQUEsWUFBQUEsTUFBQTtBQUFBLElBQUFTLFFBQUEsR0FZMUR0QixtQkFBbUIsQ0FBQ1ksR0FBRyxDQUFPLGFBQWEsQ0FBQztBQUFBZixPQUFBLENBQUFFLE9BQUEsR0FBQXVCLFFBQUEifQ==