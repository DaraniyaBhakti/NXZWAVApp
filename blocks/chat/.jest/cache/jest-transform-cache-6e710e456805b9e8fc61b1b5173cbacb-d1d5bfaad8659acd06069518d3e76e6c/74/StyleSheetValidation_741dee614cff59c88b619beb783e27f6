90cc1a3ec348991e66fc493eec3f2f23
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var DeprecatedImageStylePropTypes = require('../DeprecatedPropTypes/DeprecatedImageStylePropTypes');
var DeprecatedTextStylePropTypes = require('../DeprecatedPropTypes/DeprecatedTextStylePropTypes');
var DeprecatedViewStylePropTypes = require('../DeprecatedPropTypes/DeprecatedViewStylePropTypes');
var invariant = require('invariant');
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
var StyleSheetValidation = function () {
  function StyleSheetValidation() {
    (0, _classCallCheck2.default)(this, StyleSheetValidation);
  }
  (0, _createClass2.default)(StyleSheetValidation, null, [{
    key: "validateStyleProp",
    value: function validateStyleProp(prop, style, caller) {
      if (!__DEV__ || global.__RCTProfileIsProfiling) {
        return;
      }
      if (allStylePropTypes[prop] === undefined) {
        var message1 = '"' + prop + '" is not a valid style property.';
        var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');
        styleError(message1, style, caller, message2);
      }
      var error = allStylePropTypes[prop](style, prop, caller, 'prop', null, ReactPropTypesSecret);
      if (error) {
        styleError(error.message, style, caller);
      }
    }
  }, {
    key: "validateStyle",
    value: function validateStyle(name, styles) {
      if (!__DEV__ || global.__RCTProfileIsProfiling) {
        return;
      }
      for (var prop in styles[name]) {
        StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
      }
    }
  }, {
    key: "addValidStylePropTypes",
    value: function addValidStylePropTypes(stylePropTypes) {
      if (!__DEV__ || global.__RCTProfileIsProfiling) {
        return;
      }
      for (var key in stylePropTypes) {
        allStylePropTypes[key] = stylePropTypes[key];
      }
    }
  }]);
  return StyleSheetValidation;
}();
var styleError = function styleError(message1, style, caller, message2) {
  invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
};
var allStylePropTypes = {};
if (__DEV__ && !global.__RCTProfileIsProfiling) {
  StyleSheetValidation.addValidStylePropTypes(DeprecatedImageStylePropTypes);
  StyleSheetValidation.addValidStylePropTypes(DeprecatedTextStylePropTypes);
  StyleSheetValidation.addValidStylePropTypes(DeprecatedViewStylePropTypes);
}
module.exports = StyleSheetValidation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiRGVwcmVjYXRlZEltYWdlU3R5bGVQcm9wVHlwZXMiLCJEZXByZWNhdGVkVGV4dFN0eWxlUHJvcFR5cGVzIiwiRGVwcmVjYXRlZFZpZXdTdHlsZVByb3BUeXBlcyIsImludmFyaWFudCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiU3R5bGVTaGVldFZhbGlkYXRpb24iLCJkZWZhdWx0Iiwia2V5IiwidmFsdWUiLCJ2YWxpZGF0ZVN0eWxlUHJvcCIsInByb3AiLCJzdHlsZSIsImNhbGxlciIsIl9fREVWX18iLCJnbG9iYWwiLCJfX1JDVFByb2ZpbGVJc1Byb2ZpbGluZyIsImFsbFN0eWxlUHJvcFR5cGVzIiwidW5kZWZpbmVkIiwibWVzc2FnZTEiLCJtZXNzYWdlMiIsIkpTT04iLCJzdHJpbmdpZnkiLCJPYmplY3QiLCJrZXlzIiwic29ydCIsInN0eWxlRXJyb3IiLCJlcnJvciIsIm1lc3NhZ2UiLCJ2YWxpZGF0ZVN0eWxlIiwibmFtZSIsInN0eWxlcyIsImFkZFZhbGlkU3R5bGVQcm9wVHlwZXMiLCJzdHlsZVByb3BUeXBlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJTdHlsZVNoZWV0VmFsaWRhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBEZXByZWNhdGVkSW1hZ2VTdHlsZVByb3BUeXBlcyA9IHJlcXVpcmUoJy4uL0RlcHJlY2F0ZWRQcm9wVHlwZXMvRGVwcmVjYXRlZEltYWdlU3R5bGVQcm9wVHlwZXMnKTtcbmNvbnN0IERlcHJlY2F0ZWRUZXh0U3R5bGVQcm9wVHlwZXMgPSByZXF1aXJlKCcuLi9EZXByZWNhdGVkUHJvcFR5cGVzL0RlcHJlY2F0ZWRUZXh0U3R5bGVQcm9wVHlwZXMnKTtcbmNvbnN0IERlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMgPSByZXF1aXJlKCcuLi9EZXByZWNhdGVkUHJvcFR5cGVzL0RlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMnKTtcblxuY29uc3QgaW52YXJpYW50ID0gcmVxdWlyZSgnaW52YXJpYW50Jyk7XG5cbi8vIEhhcmRjb2RlZCBiZWNhdXNlIHRoaXMgaXMgYSBsZWdpdCBjYXNlIGJ1dCB3ZSBkb24ndCB3YW50IHRvIGxvYWQgaXQgZnJvbVxuLy8gYSBwcml2YXRlIEFQSS4gV2UgbWlnaHQgbGlrZWx5IHdhbnQgdG8gdW5pZnkgc3R5bGUgc2hlZXQgY3JlYXRpb24gd2l0aCBob3cgaXRcbi8vIGlzIGRvbmUgaW4gdGhlIERPTSBzbyB0aGlzIG1pZ2h0IG1vdmUgaW50byBSZWFjdC4gSSBrbm93IHdoYXQgSSdtIGRvaW5nIHNvXG4vLyBwbHogZG9uJ3QgZmlyZSBtZS5cbmNvbnN0IFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxuY2xhc3MgU3R5bGVTaGVldFZhbGlkYXRpb24ge1xuICBzdGF0aWMgdmFsaWRhdGVTdHlsZVByb3AocHJvcDogc3RyaW5nLCBzdHlsZTogT2JqZWN0LCBjYWxsZXI6IHN0cmluZykge1xuICAgIGlmICghX19ERVZfXyB8fCBnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGFsbFN0eWxlUHJvcFR5cGVzW3Byb3BdID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UxID0gJ1wiJyArIHByb3AgKyAnXCIgaXMgbm90IGEgdmFsaWQgc3R5bGUgcHJvcGVydHkuJztcbiAgICAgIGNvbnN0IG1lc3NhZ2UyID1cbiAgICAgICAgJ1xcblZhbGlkIHN0eWxlIHByb3BzOiAnICtcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMoYWxsU3R5bGVQcm9wVHlwZXMpLnNvcnQoKSwgbnVsbCwgJyAgJyk7XG4gICAgICBzdHlsZUVycm9yKG1lc3NhZ2UxLCBzdHlsZSwgY2FsbGVyLCBtZXNzYWdlMik7XG4gICAgfVxuICAgIGNvbnN0IGVycm9yID0gYWxsU3R5bGVQcm9wVHlwZXNbcHJvcF0oXG4gICAgICBzdHlsZSxcbiAgICAgIHByb3AsXG4gICAgICBjYWxsZXIsXG4gICAgICAncHJvcCcsXG4gICAgICBudWxsLFxuICAgICAgUmVhY3RQcm9wVHlwZXNTZWNyZXQsXG4gICAgKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHN0eWxlRXJyb3IoZXJyb3IubWVzc2FnZSwgc3R5bGUsIGNhbGxlcik7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIHZhbGlkYXRlU3R5bGUobmFtZTogc3RyaW5nLCBzdHlsZXM6IE9iamVjdCkge1xuICAgIGlmICghX19ERVZfXyB8fCBnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwcm9wIGluIHN0eWxlc1tuYW1lXSkge1xuICAgICAgU3R5bGVTaGVldFZhbGlkYXRpb24udmFsaWRhdGVTdHlsZVByb3AoXG4gICAgICAgIHByb3AsXG4gICAgICAgIHN0eWxlc1tuYW1lXSxcbiAgICAgICAgJ1N0eWxlU2hlZXQgJyArIG5hbWUsXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8qICRGbG93Rml4TWUoPj0wLjg1LjAgc2l0ZT1yZWFjdF9uYXRpdmVfZmIpIFRoaXMgY29tbWVudCBzdXBwcmVzc2VzIGFuIGVycm9yXG4gICAqIGZvdW5kIHdoZW4gRmxvdyB2MC44NSB3YXMgZGVwbG95ZWQuIFRvIHNlZSB0aGUgZXJyb3IsIGRlbGV0ZSB0aGlzIGNvbW1lbnRcbiAgICogYW5kIHJ1biBGbG93LiAqL1xuICBzdGF0aWMgYWRkVmFsaWRTdHlsZVByb3BUeXBlcyhzdHlsZVByb3BUeXBlcykge1xuICAgIGlmICghX19ERVZfXyB8fCBnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc3R5bGVQcm9wVHlwZXMpIHtcbiAgICAgIGFsbFN0eWxlUHJvcFR5cGVzW2tleV0gPSBzdHlsZVByb3BUeXBlc1trZXldO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBzdHlsZUVycm9yID0gZnVuY3Rpb24obWVzc2FnZTEsIHN0eWxlLCBjYWxsZXI/LCBtZXNzYWdlMj8pIHtcbiAgaW52YXJpYW50KFxuICAgIGZhbHNlLFxuICAgIG1lc3NhZ2UxICtcbiAgICAgICdcXG4nICtcbiAgICAgIChjYWxsZXIgfHwgJzw8dW5rbm93bj4+JykgK1xuICAgICAgJzogJyArXG4gICAgICBKU09OLnN0cmluZ2lmeShzdHlsZSwgbnVsbCwgJyAgJykgK1xuICAgICAgKG1lc3NhZ2UyIHx8ICcnKSxcbiAgKTtcbn07XG5cbmNvbnN0IGFsbFN0eWxlUHJvcFR5cGVzID0ge307XG5cbmlmIChfX0RFVl9fICYmICFnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgU3R5bGVTaGVldFZhbGlkYXRpb24uYWRkVmFsaWRTdHlsZVByb3BUeXBlcyhEZXByZWNhdGVkSW1hZ2VTdHlsZVByb3BUeXBlcyk7XG4gIFN0eWxlU2hlZXRWYWxpZGF0aW9uLmFkZFZhbGlkU3R5bGVQcm9wVHlwZXMoRGVwcmVjYXRlZFRleHRTdHlsZVByb3BUeXBlcyk7XG4gIFN0eWxlU2hlZXRWYWxpZGF0aW9uLmFkZFZhbGlkU3R5bGVQcm9wVHlwZXMoRGVwcmVjYXRlZFZpZXdTdHlsZVByb3BUeXBlcyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU3R5bGVTaGVldFZhbGlkYXRpb247XG4iXSwibWFwcGluZ3MiOiJBQVVBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGdCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxhQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFFYixJQUFNRyw2QkFBNkIsR0FBR0gsT0FBTyxDQUFDLHNEQUFzRCxDQUFDO0FBQ3JHLElBQU1JLDRCQUE0QixHQUFHSixPQUFPLENBQUMscURBQXFELENBQUM7QUFDbkcsSUFBTUssNEJBQTRCLEdBQUdMLE9BQU8sQ0FBQyxxREFBcUQsQ0FBQztBQUVuRyxJQUFNTSxTQUFTLEdBQUdOLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFNdEMsSUFBTU8sb0JBQW9CLEdBQUcsOENBQThDO0FBQUMsSUFFdEVDLG9CQUFvQjtFQUFBLFNBQUFBLHFCQUFBO0lBQUEsSUFBQVAsZ0JBQUEsQ0FBQVEsT0FBQSxRQUFBRCxvQkFBQTtFQUFBO0VBQUEsSUFBQU4sYUFBQSxDQUFBTyxPQUFBLEVBQUFELG9CQUFBO0lBQUFFLEdBQUE7SUFBQUMsS0FBQSxFQUN4QixTQUFBQyxrQkFBeUJDLElBQVksRUFBRUMsS0FBYSxFQUFFQyxNQUFjLEVBQUU7TUFDcEUsSUFBSSxDQUFDQyxPQUFPLElBQUlDLE1BQU0sQ0FBQ0MsdUJBQXVCLEVBQUU7UUFDOUM7TUFDRjtNQUNBLElBQUlDLGlCQUFpQixDQUFDTixJQUFJLENBQUMsS0FBS08sU0FBUyxFQUFFO1FBQ3pDLElBQU1DLFFBQVEsR0FBRyxHQUFHLEdBQUdSLElBQUksR0FBRyxrQ0FBa0M7UUFDaEUsSUFBTVMsUUFBUSxHQUNaLHVCQUF1QixHQUN2QkMsSUFBSSxDQUFDQyxTQUFTLENBQUNDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDUCxpQkFBaUIsQ0FBQyxDQUFDUSxJQUFJLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7UUFDbkVDLFVBQVUsQ0FBQ1AsUUFBUSxFQUFFUCxLQUFLLEVBQUVDLE1BQU0sRUFBRU8sUUFBUSxDQUFDO01BQy9DO01BQ0EsSUFBTU8sS0FBSyxHQUFHVixpQkFBaUIsQ0FBQ04sSUFBSSxDQUFDLENBQ25DQyxLQUFLLEVBQ0xELElBQUksRUFDSkUsTUFBTSxFQUNOLE1BQU0sRUFDTixJQUFJLEVBQ0pSLG9CQUNGLENBQUM7TUFDRCxJQUFJc0IsS0FBSyxFQUFFO1FBQ1RELFVBQVUsQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLEVBQUVoQixLQUFLLEVBQUVDLE1BQU0sQ0FBQztNQUMxQztJQUNGO0VBQUM7SUFBQUwsR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQW9CLGNBQXFCQyxJQUFZLEVBQUVDLE1BQWMsRUFBRTtNQUNqRCxJQUFJLENBQUNqQixPQUFPLElBQUlDLE1BQU0sQ0FBQ0MsdUJBQXVCLEVBQUU7UUFDOUM7TUFDRjtNQUNBLEtBQUssSUFBTUwsSUFBSSxJQUFJb0IsTUFBTSxDQUFDRCxJQUFJLENBQUMsRUFBRTtRQUMvQnhCLG9CQUFvQixDQUFDSSxpQkFBaUIsQ0FDcENDLElBQUksRUFDSm9CLE1BQU0sQ0FBQ0QsSUFBSSxDQUFDLEVBQ1osYUFBYSxHQUFHQSxJQUNsQixDQUFDO01BQ0g7SUFDRjtFQUFDO0lBQUF0QixHQUFBO0lBQUFDLEtBQUEsRUFLRCxTQUFBdUIsdUJBQThCQyxjQUFjLEVBQUU7TUFDNUMsSUFBSSxDQUFDbkIsT0FBTyxJQUFJQyxNQUFNLENBQUNDLHVCQUF1QixFQUFFO1FBQzlDO01BQ0Y7TUFDQSxLQUFLLElBQU1SLEdBQUcsSUFBSXlCLGNBQWMsRUFBRTtRQUNoQ2hCLGlCQUFpQixDQUFDVCxHQUFHLENBQUMsR0FBR3lCLGNBQWMsQ0FBQ3pCLEdBQUcsQ0FBQztNQUM5QztJQUNGO0VBQUM7RUFBQSxPQUFBRixvQkFBQTtBQUFBO0FBR0gsSUFBTW9CLFVBQVUsR0FBRyxTQUFiQSxVQUFVQSxDQUFZUCxRQUFRLEVBQUVQLEtBQUssRUFBRUMsTUFBTyxFQUFFTyxRQUFTLEVBQUU7RUFDL0RoQixTQUFTLENBQ1AsS0FBSyxFQUNMZSxRQUFRLEdBQ04sSUFBSSxJQUNITixNQUFNLElBQUksYUFBYSxDQUFDLEdBQ3pCLElBQUksR0FDSlEsSUFBSSxDQUFDQyxTQUFTLENBQUNWLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQ2hDUSxRQUFRLElBQUksRUFBRSxDQUNuQixDQUFDO0FBQ0gsQ0FBQztBQUVELElBQU1ILGlCQUFpQixHQUFHLENBQUMsQ0FBQztBQUU1QixJQUFJSCxPQUFPLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyx1QkFBdUIsRUFBRTtFQUM5Q1Ysb0JBQW9CLENBQUMwQixzQkFBc0IsQ0FBQy9CLDZCQUE2QixDQUFDO0VBQzFFSyxvQkFBb0IsQ0FBQzBCLHNCQUFzQixDQUFDOUIsNEJBQTRCLENBQUM7RUFDekVJLG9CQUFvQixDQUFDMEIsc0JBQXNCLENBQUM3Qiw0QkFBNEIsQ0FBQztBQUMzRTtBQUVBK0IsTUFBTSxDQUFDQyxPQUFPLEdBQUc3QixvQkFBb0IifQ==