956102e2bc085c414adca94bf01a6ee3
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
var requireNativeComponent = require('../../../ReactNative/requireNativeComponent');
var RCTRefreshControl = requireNativeComponent('RCTRefreshControl');
var RefreshControlMock = function (_React$Component) {
  (0, _inherits2.default)(RefreshControlMock, _React$Component);
  var _super = _createSuper(RefreshControlMock);
  function RefreshControlMock() {
    (0, _classCallCheck2.default)(this, RefreshControlMock);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(RefreshControlMock, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      RefreshControlMock.latestRef = this;
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement(RCTRefreshControl, null);
    }
  }]);
  return RefreshControlMock;
}(React.Component);
module.exports = RefreshControlMock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2luaGVyaXRzMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9nZXRQcm90b3R5cGVPZjIiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwiZGVmYXVsdCIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImFwcGx5Iiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiZSIsIlJlYWN0IiwicmVxdWlyZU5hdGl2ZUNvbXBvbmVudCIsIlJDVFJlZnJlc2hDb250cm9sIiwiUmVmcmVzaENvbnRyb2xNb2NrIiwiX1JlYWN0JENvbXBvbmVudCIsIl9zdXBlciIsImtleSIsInZhbHVlIiwiY29tcG9uZW50RGlkTW91bnQiLCJsYXRlc3RSZWYiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlJlZnJlc2hDb250cm9sTW9jay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG5jb25zdCByZXF1aXJlTmF0aXZlQ29tcG9uZW50ID0gcmVxdWlyZSgnLi4vLi4vLi4vUmVhY3ROYXRpdmUvcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCcpO1xuXG5jb25zdCBSQ1RSZWZyZXNoQ29udHJvbCA9IHJlcXVpcmVOYXRpdmVDb21wb25lbnQoJ1JDVFJlZnJlc2hDb250cm9sJyk7XG5cbmNsYXNzIFJlZnJlc2hDb250cm9sTW9jayBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDx7fT4ge1xuICBzdGF0aWMgbGF0ZXN0UmVmOiA/UmVmcmVzaENvbnRyb2xNb2NrO1xuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBSZWZyZXNoQ29udHJvbE1vY2subGF0ZXN0UmVmID0gdGhpcztcbiAgfVxuICByZW5kZXIoKTogUmVhY3QuRWxlbWVudDxzdHJpbmc+IHtcbiAgICByZXR1cm4gPFJDVFJlZnJlc2hDb250cm9sIC8+O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVmcmVzaENvbnRyb2xNb2NrO1xuIl0sIm1hcHBpbmdzIjoiQUFVQSxZQUFZOztBQUFDLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQSxJQUFBQyxnQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUcsVUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUksMkJBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFLLGdCQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxTQUFBTSxhQUFBQyxPQUFBLFFBQUFDLHlCQUFBLEdBQUFDLHlCQUFBLG9CQUFBQyxxQkFBQSxRQUFBQyxLQUFBLE9BQUFOLGdCQUFBLENBQUFPLE9BQUEsRUFBQUwsT0FBQSxHQUFBTSxNQUFBLE1BQUFMLHlCQUFBLFFBQUFNLFNBQUEsT0FBQVQsZ0JBQUEsQ0FBQU8sT0FBQSxRQUFBRyxXQUFBLEVBQUFGLE1BQUEsR0FBQUcsT0FBQSxDQUFBQyxTQUFBLENBQUFOLEtBQUEsRUFBQU8sU0FBQSxFQUFBSixTQUFBLFlBQUFELE1BQUEsR0FBQUYsS0FBQSxDQUFBUSxLQUFBLE9BQUFELFNBQUEsZ0JBQUFkLDJCQUFBLENBQUFRLE9BQUEsUUFBQUMsTUFBQTtBQUFBLFNBQUFKLDBCQUFBLGVBQUFPLE9BQUEscUJBQUFBLE9BQUEsQ0FBQUMsU0FBQSxvQkFBQUQsT0FBQSxDQUFBQyxTQUFBLENBQUFHLElBQUEsMkJBQUFDLEtBQUEsb0NBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFDLElBQUEsQ0FBQVQsT0FBQSxDQUFBQyxTQUFBLENBQUFLLE9BQUEsOENBQUFJLENBQUE7QUFFYixJQUFNQyxLQUFLLEdBQUczQixPQUFPLENBQUMsT0FBTyxDQUFDO0FBRTlCLElBQU00QixzQkFBc0IsR0FBRzVCLE9BQU8sQ0FBQyw2Q0FBNkMsQ0FBQztBQUVyRixJQUFNNkIsaUJBQWlCLEdBQUdELHNCQUFzQixDQUFDLG1CQUFtQixDQUFDO0FBQUMsSUFFaEVFLGtCQUFrQixhQUFBQyxnQkFBQTtFQUFBLElBQUE1QixVQUFBLENBQUFTLE9BQUEsRUFBQWtCLGtCQUFBLEVBQUFDLGdCQUFBO0VBQUEsSUFBQUMsTUFBQSxHQUFBMUIsWUFBQSxDQUFBd0Isa0JBQUE7RUFBQSxTQUFBQSxtQkFBQTtJQUFBLElBQUE3QixnQkFBQSxDQUFBVyxPQUFBLFFBQUFrQixrQkFBQTtJQUFBLE9BQUFFLE1BQUEsQ0FBQWIsS0FBQSxPQUFBRCxTQUFBO0VBQUE7RUFBQSxJQUFBaEIsYUFBQSxDQUFBVSxPQUFBLEVBQUFrQixrQkFBQTtJQUFBRyxHQUFBO0lBQUFDLEtBQUEsRUFFdEIsU0FBQUMsa0JBQUEsRUFBb0I7TUFDbEJMLGtCQUFrQixDQUFDTSxTQUFTLEdBQUcsSUFBSTtJQUNyQztFQUFDO0lBQUFILEdBQUE7SUFBQUMsS0FBQSxFQUNELFNBQUFHLE9BQUEsRUFBZ0M7TUFDOUIsT0FBT1YsS0FBQSxDQUFBVyxhQUFBLENBQUNULGlCQUFpQixNQUFFLENBQUM7SUFDOUI7RUFBQztFQUFBLE9BQUFDLGtCQUFBO0FBQUEsRUFQOEJILEtBQUssQ0FBQ1ksU0FBUztBQVVoREMsTUFBTSxDQUFDQyxPQUFPLEdBQUdYLGtCQUFrQiJ9