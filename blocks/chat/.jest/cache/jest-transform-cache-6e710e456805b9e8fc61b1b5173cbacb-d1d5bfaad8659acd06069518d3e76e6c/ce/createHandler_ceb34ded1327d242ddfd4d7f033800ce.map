{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_areEqual","_interopRequireDefault","_RNGestureHandlerModule","_State","findNodeHandle","node","Platform","OS","_reactNative$NativeMo","NativeModules","UIManager","customGHEventsConfig","onGestureHandlerEvent","registrationName","onGestureHandlerStateChange","genericDirectEventTypes","_extends2","default","UIManagerConstants","_UIManager$getViewMan","_UIManager$getViewMan2","getViewManagerConfig","call","_UIManager$getConstan","getConstants","_UIManager$setJSRespo","setJSResponder","oldSetJSResponder","_UIManager$clearJSRes","clearJSResponder","oldClearJSResponder","tag","blockNativeResponder","handleSetJSResponder","handleClearJSResponder","handlerTag","handlerIDToTag","isConfigParam","param","name","undefined","Object","filterConfig","props","validProps","defaults","arguments","length","res","forEach","key","value","transformIntoHandlerTags","top","left","bottom","right","handlerIDs","Array","isArray","map","_ref","current","filter","handle","handlerID","_handlerID$current","hasUnresolvedRefs","extract","refs","some","r","stateToPropMappings","_stateToPropMappings","_defineProperty3","State","UNDETERMINED","BEGAN","FAILED","CANCELLED","ACTIVE","END","createHandler","_ref2","_ref2$allowedProps","allowedProps","_ref2$config","config","transformProps","_ref2$customNativePro","customNativeProps","Handler","_React$Component","_inherits2","_super","_createSuper","_this","_classCallCheck2","_defineProperty","_assertThisInitialized2","event","nativeEvent","_this$props$onGesture","_this$props","onGestureEvent","_this$props$onGesture2","_this$props2","_this$props$onHandler","_this$props3","onHandlerStateChange","state","stateEventName","eventHandler","_this$props$onGesture3","_this$props4","viewNode","child","Children","only","children","ref","newConfig","createGestureHandler","newViewTag","viewTag","attachGestureHandler","propsRef","updateGestureHandler","createRef","id","Error","concat","_createClass2","componentDidMount","_this2","updateEnqueued","setImmediate","update","_toConsumableArray2","componentDidUpdate","componentWillUnmount","dropGestureHandler","clearImmediate","setNativeProps","updates","mergedProps","render","gestureEventHandler","_this$props5","gestureStateEventHandler","_this$props6","events","grandChildren","Touchable","TOUCH_TARGET_DEBUG","type","displayName","toArray","push","renderDebugView","color","hitSlop","cloneElement","refHandler","collapsable","Component"],"sources":["createHandler.ts"],"sourcesContent":["import * as React from 'react';\nimport {\n  findNodeHandle as findNodeHandleRN,\n  NativeModules,\n  Platform,\n  Touchable,\n} from 'react-native';\n// @ts-ignore - it isn't typed by TS & don't have definitelyTyped types\nimport deepEqual from 'fbjs/lib/areEqual';\nimport RNGestureHandlerModule from '../RNGestureHandlerModule';\nimport type RNGestureHandlerModuleWeb from '../RNGestureHandlerModule.web';\nimport { State } from '../State';\n\nimport {\n  BaseGestureHandlerProps,\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from './gestureHandlers';\nimport { ValueOf } from '../typeUtils';\n\nfunction findNodeHandle(\n  node: null | number | React.Component<any, any> | React.ComponentClass<any>\n): null | number | React.Component<any, any> | React.ComponentClass<any> {\n  if (Platform.OS === 'web') return node;\n  return findNodeHandleRN(node);\n}\n\nconst { UIManager = {} } = NativeModules;\n\nconst customGHEventsConfig = {\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  ...customGHEventsConfig,\n};\n// In newer versions of RN the `genericDirectEventTypes` is located in the object\n// returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n// it compatible with RN 61+\nconst UIManagerConstants =\n  UIManager.getViewManagerConfig?.('getConstants') ??\n  UIManager.getConstants?.();\n\nif (UIManagerConstants) {\n  UIManagerConstants.genericDirectEventTypes = {\n    ...UIManagerConstants.genericDirectEventTypes,\n    ...customGHEventsConfig,\n  };\n}\n\n// Wrap JS responder calls and notify gesture handler manager\nconst {\n  setJSResponder: oldSetJSResponder = () => {\n    //no operation\n  },\n  clearJSResponder: oldClearJSResponder = () => {\n    //no operation\n  },\n} = UIManager;\nUIManager.setJSResponder = (tag: number, blockNativeResponder: boolean) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nlet handlerTag = 1;\nconst handlerIDToTag: Record<string, number> = {};\n\nfunction isConfigParam(param: unknown, name: string) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) ||\n      !('__isNative' in (param as Record<string, unknown>))) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction filterConfig(\n  props: Record<string, unknown>,\n  validProps: string[],\n  defaults: Record<string, unknown> = {}\n) {\n  const res = { ...defaults };\n  validProps.forEach((key) => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction transformIntoHandlerTags(handlerIDs: any) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  if (Platform.OS === 'web') {\n    return handlerIDs\n      .map(({ current }: { current: any }) => current)\n      .filter((handle: any) => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      (handlerID: any) =>\n        handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1\n    )\n    .filter((handlerTag: number) => handlerTag > 0);\n}\n\ntype HandlerProps<T extends Record<string, unknown>> = Readonly<\n  React.PropsWithChildren<BaseGestureHandlerProps<T>>\n>;\nfunction hasUnresolvedRefs<T extends Record<string, unknown>>(\n  props: HandlerProps<T>\n) {\n  // TODO(TS) - add type for extract arg\n  const extract = (refs: any | any[]) => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some((r) => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nconst stateToPropMappings = {\n  [State.UNDETERMINED]: undefined,\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n} as const;\n\ntype CreateHandlerArgs<\n  HandlerPropsT extends Record<string, unknown>\n> = Readonly<{\n  name: string;\n  allowedProps: Readonly<Extract<keyof HandlerPropsT, string>[]>;\n  config: Readonly<Record<string, unknown>>;\n  transformProps?: (props: HandlerPropsT) => HandlerPropsT;\n  customNativeProps?: Readonly<string[]>;\n}>;\n\n// TODO(TS) fix event types\ntype InternalEventHandlers = {\n  onGestureHandlerEvent?: (event: any) => void;\n  onGestureHandlerStateChange?: (event: any) => void;\n};\n\n// TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\nexport default function createHandler<\n  T extends BaseGestureHandlerProps<U>,\n  U extends Record<string, unknown>\n>({\n  name,\n  allowedProps = [],\n  config = {},\n  transformProps,\n  customNativeProps = [],\n}: CreateHandlerArgs<T>): React.ComponentType<T & React.RefAttributes<any>> {\n  class Handler extends React.Component<T & InternalEventHandlers> {\n    static displayName = name;\n\n    private handlerTag: number;\n    private config: Record<string, unknown>;\n    private propsRef: React.MutableRefObject<unknown>;\n    private viewNode: any;\n    private viewTag?: number;\n    private updateEnqueued: ReturnType<typeof setImmediate> | null = null;\n\n    constructor(props: T & InternalEventHandlers) {\n      super(props);\n      this.handlerTag = handlerTag++;\n      this.config = {};\n      this.propsRef = React.createRef();\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this.handlerTag;\n      }\n    }\n\n    componentDidMount() {\n      const props: HandlerProps<U> = this.props;\n      if (hasUnresolvedRefs(props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this.updateEnqueued = setImmediate(() => {\n          this.updateEnqueued = null;\n          this.update();\n        });\n      }\n\n      this.createGestureHandler(\n        filterConfig(\n          transformProps ? transformProps(this.props) : this.props,\n          [...allowedProps, ...customNativeProps],\n          config\n        )\n      );\n\n      this.attachGestureHandler(findNodeHandle(this.viewNode) as number); // TODO(TS) - check if this can be null\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this.viewNode);\n      if (this.viewTag !== viewTag) {\n        this.attachGestureHandler(viewTag as number); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n      }\n      this.update();\n    }\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this.handlerTag);\n      if (this.updateEnqueued) {\n        clearImmediate(this.updateEnqueued);\n      }\n      // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n      const handlerID: string | undefined = this.props.id;\n      if (handlerID) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete handlerIDToTag[handlerID];\n      }\n    }\n\n    private onGestureHandlerEvent = (event: GestureEvent<U>) => {\n      if (event.nativeEvent.handlerTag === this.handlerTag) {\n        this.props.onGestureEvent?.(event);\n      } else {\n        this.props.onGestureHandlerEvent?.(event);\n      }\n    };\n\n    // TODO(TS) - make sure this is right type for event\n    private onGestureHandlerStateChange = (\n      event: HandlerStateChangeEvent<U>\n    ) => {\n      if (event.nativeEvent.handlerTag === this.handlerTag) {\n        this.props.onHandlerStateChange?.(event);\n\n        const state: ValueOf<typeof State> = event.nativeEvent.state;\n        const stateEventName = stateToPropMappings[state];\n        const eventHandler = stateEventName && this.props[stateEventName];\n        if (eventHandler && typeof eventHandler === 'function') {\n          eventHandler(event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange?.(event);\n      }\n    };\n\n    private refHandler = (node: any) => {\n      this.viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      // TODO(TS) fix ref type\n      const { ref }: any = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    private createGestureHandler = (\n      newConfig: Readonly<Record<string, unknown>>\n    ) => {\n      this.config = newConfig;\n\n      RNGestureHandlerModule.createGestureHandler(\n        name,\n        this.handlerTag,\n        newConfig\n      );\n    };\n\n    private attachGestureHandler = (newViewTag: number) => {\n      this.viewTag = newViewTag;\n\n      if (Platform.OS === 'web') {\n        // typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n        (RNGestureHandlerModule.attachGestureHandler as typeof RNGestureHandlerModuleWeb.attachGestureHandler)(\n          this.handlerTag,\n          newViewTag,\n          this.propsRef\n        );\n      } else {\n        RNGestureHandlerModule.attachGestureHandler(\n          this.handlerTag,\n          newViewTag\n        );\n      }\n    };\n\n    private updateGestureHandler = (\n      newConfig: Readonly<Record<string, unknown>>\n    ) => {\n      this.config = newConfig;\n\n      RNGestureHandlerModule.updateGestureHandler(this.handlerTag, newConfig);\n    };\n\n    private update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        [...allowedProps, ...customNativeProps],\n        config\n      );\n      if (!deepEqual(this.config, newConfig)) {\n        this.updateGestureHandler(newConfig);\n      }\n    }\n\n    setNativeProps(updates: any) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        [...allowedProps, ...customNativeProps],\n        config\n      );\n      this.updateGestureHandler(newConfig);\n    }\n\n    render() {\n      let gestureEventHandler = this.onGestureHandlerEvent;\n      // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n      type OnGestureEventHandlers = {\n        onGestureEvent?: BaseGestureHandlerProps<U>['onGestureEvent'];\n        onGestureHandlerEvent?: InternalEventHandlers['onGestureHandlerEvent'];\n      };\n      const {\n        onGestureEvent,\n        onGestureHandlerEvent,\n      }: OnGestureEventHandlers = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this.onGestureHandlerStateChange;\n      // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n      type OnGestureStateChangeHandlers = {\n        onHandlerStateChange?: BaseGestureHandlerProps<U>['onHandlerStateChange'];\n        onGestureHandlerStateChange?: InternalEventHandlers['onGestureHandlerStateChange'];\n      };\n      const {\n        onHandlerStateChange,\n        onGestureHandlerStateChange,\n      }: OnGestureStateChangeHandlers = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n      const events = {\n        onGestureHandlerEvent: gestureEventHandler,\n        onGestureHandlerStateChange: gestureStateEventHandler,\n      };\n\n      this.propsRef.current = events;\n\n      const child: any = React.Children.only(this.props.children);\n      let grandChildren = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        grandChildren = React.Children.toArray(grandChildren);\n        grandChildren.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n\n      return React.cloneElement(\n        child,\n        {\n          ref: this.refHandler,\n          collapsable: false,\n          ...events,\n        },\n        grandChildren\n      );\n    }\n  }\n  return Handler;\n}\n"],"mappings":"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"}