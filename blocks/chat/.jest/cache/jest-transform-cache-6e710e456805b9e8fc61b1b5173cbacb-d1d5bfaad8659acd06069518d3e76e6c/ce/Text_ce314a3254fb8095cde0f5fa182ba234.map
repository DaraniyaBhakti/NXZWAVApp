{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_extends2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","DeprecatedTextPropTypes","React","ReactNativeViewAttributes","TextAncestor","Touchable","UIManager","createReactNativeComponentClass","nullthrows","processColor","PRESS_RECT_OFFSET","top","left","right","bottom","viewConfig","validAttributes","UIView","isHighlighted","numberOfLines","ellipsizeMode","allowFontScaling","maxFontSizeMultiplier","disabled","selectable","selectionColor","adjustsFontSizeToFit","minimumFontScale","textBreakStrategy","onTextLayout","onInlineViewLayout","dataDetectorType","directEventTypes","topTextLayout","registrationName","topInlineViewLayout","uiViewClassName","TouchableText","_React$Component","_super","_this","_len","length","args","Array","_key","concat","state","Mixin","touchableGetInitialState","createResponderHandlers","_createResponseHandlers","bind","responseHandlers","key","value","render","props","isTouchable","__DEV__","TOUCH_TARGET_DEBUG","onPress","style","color","createElement","Consumer","hasTextAncestor","RCTVirtualText","ref","forwardedRef","Provider","RCTText","_this2","onStartShouldSetResponder","shouldSetResponder","_attachTouchHandlers","onResponderGrant","event","dispatchID","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","_this3","touchableGetPressRectOffset","touchableHandleActivePressIn","suppressHighlighting","setState","touchableHandleActivePressOut","touchableHandlePress","touchableHandleLongPress","onLongPress","pressRetentionOffset","getDerivedStateFromProps","nextProps","prevState","Component","defaultProps","accessible","getViewManagerConfig","Text","TextToExport","forwardRef","displayName","propTypes","module","exports"],"sources":["Text.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst DeprecatedTextPropTypes = require('../DeprecatedPropTypes/DeprecatedTextPropTypes');\nconst React = require('react');\nconst ReactNativeViewAttributes = require('../Components/View/ReactNativeViewAttributes');\nconst TextAncestor = require('./TextAncestor');\nconst Touchable = require('../Components/Touchable/Touchable');\nconst UIManager = require('../ReactNative/UIManager');\n\nconst createReactNativeComponentClass = require('../Renderer/shims/createReactNativeComponentClass');\nconst nullthrows = require('nullthrows');\nconst processColor = require('../StyleSheet/processColor');\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {NativeComponent} from '../Renderer/shims/ReactNative';\nimport type {PressRetentionOffset, TextProps} from './TextProps';\n\ntype ResponseHandlers = $ReadOnly<{|\n  onStartShouldSetResponder: () => boolean,\n  onResponderGrant: (event: PressEvent, dispatchID: string) => void,\n  onResponderMove: (event: PressEvent) => void,\n  onResponderRelease: (event: PressEvent) => void,\n  onResponderTerminate: (event: PressEvent) => void,\n  onResponderTerminationRequest: () => boolean,\n|}>;\n\ntype Props = $ReadOnly<{|\n  ...TextProps,\n  forwardedRef: ?React.Ref<'RCTText' | 'RCTVirtualText'>,\n|}>;\n\ntype State = {|\n  touchable: {|\n    touchState: ?string,\n    responderID: ?number,\n  |},\n  isHighlighted: boolean,\n  createResponderHandlers: () => ResponseHandlers,\n  responseHandlers: ?ResponseHandlers,\n|};\n\nconst PRESS_RECT_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nconst viewConfig = {\n  validAttributes: {\n    ...ReactNativeViewAttributes.UIView,\n    isHighlighted: true,\n    numberOfLines: true,\n    ellipsizeMode: true,\n    allowFontScaling: true,\n    maxFontSizeMultiplier: true,\n    disabled: true,\n    selectable: true,\n    selectionColor: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    textBreakStrategy: true,\n    onTextLayout: true,\n    onInlineViewLayout: true,\n    dataDetectorType: true,\n  },\n  directEventTypes: {\n    topTextLayout: {\n      registrationName: 'onTextLayout',\n    },\n    topInlineViewLayout: {\n      registrationName: 'onInlineViewLayout',\n    },\n  },\n  uiViewClassName: 'RCTText',\n};\n\n/**\n * A React component for displaying text.\n *\n * See https://facebook.github.io/react-native/docs/text.html\n */\nclass TouchableText extends React.Component<Props, State> {\n  static defaultProps = {\n    accessible: true,\n    allowFontScaling: true,\n    ellipsizeMode: 'tail',\n  };\n\n  touchableGetPressRectOffset: ?() => PressRetentionOffset;\n  touchableHandleActivePressIn: ?() => void;\n  touchableHandleActivePressOut: ?() => void;\n  touchableHandleLongPress: ?(event: PressEvent) => void;\n  touchableHandlePress: ?(event: PressEvent) => void;\n  touchableHandleResponderGrant: ?(\n    event: PressEvent,\n    dispatchID: string,\n  ) => void;\n  touchableHandleResponderMove: ?(event: PressEvent) => void;\n  touchableHandleResponderRelease: ?(event: PressEvent) => void;\n  touchableHandleResponderTerminate: ?(event: PressEvent) => void;\n  touchableHandleResponderTerminationRequest: ?() => boolean;\n\n  state = {\n    ...Touchable.Mixin.touchableGetInitialState(),\n    isHighlighted: false,\n    createResponderHandlers: this._createResponseHandlers.bind(this),\n    responseHandlers: null,\n  };\n\n  static getDerivedStateFromProps(\n    nextProps: Props,\n    prevState: State,\n  ): $Shape<State> | null {\n    return prevState.responseHandlers == null && isTouchable(nextProps)\n      ? {\n          responseHandlers: prevState.createResponderHandlers(),\n        }\n      : null;\n  }\n\n  static viewConfig = viewConfig;\n\n  render(): React.Node {\n    let props = this.props;\n    if (isTouchable(props)) {\n      props = {\n        ...props,\n        ...this.state.responseHandlers,\n        isHighlighted: this.state.isHighlighted,\n      };\n    }\n    if (props.selectionColor != null) {\n      props = {\n        ...props,\n        selectionColor: processColor(props.selectionColor),\n      };\n    }\n    if (__DEV__) {\n      if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n        props = {\n          ...props,\n          style: [props.style, {color: 'magenta'}],\n        };\n      }\n    }\n    return (\n      <TextAncestor.Consumer>\n        {hasTextAncestor =>\n          hasTextAncestor ? (\n            <RCTVirtualText {...props} ref={props.forwardedRef} />\n          ) : (\n            <TextAncestor.Provider value={true}>\n              <RCTText {...props} ref={props.forwardedRef} />\n            </TextAncestor.Provider>\n          )\n        }\n      </TextAncestor.Consumer>\n    );\n  }\n\n  _createResponseHandlers(): ResponseHandlers {\n    return {\n      onStartShouldSetResponder: (): boolean => {\n        const {onStartShouldSetResponder} = this.props;\n        const shouldSetResponder =\n          (onStartShouldSetResponder == null\n            ? false\n            : onStartShouldSetResponder()) || isTouchable(this.props);\n\n        if (shouldSetResponder) {\n          this._attachTouchHandlers();\n        }\n        return shouldSetResponder;\n      },\n      onResponderGrant: (event: PressEvent, dispatchID: string): void => {\n        nullthrows(this.touchableHandleResponderGrant)(event, dispatchID);\n        if (this.props.onResponderGrant != null) {\n          this.props.onResponderGrant.call(this, event, dispatchID);\n        }\n      },\n      onResponderMove: (event: PressEvent): void => {\n        nullthrows(this.touchableHandleResponderMove)(event);\n        if (this.props.onResponderMove != null) {\n          this.props.onResponderMove.call(this, event);\n        }\n      },\n      onResponderRelease: (event: PressEvent): void => {\n        nullthrows(this.touchableHandleResponderRelease)(event);\n        if (this.props.onResponderRelease != null) {\n          this.props.onResponderRelease.call(this, event);\n        }\n      },\n      onResponderTerminate: (event: PressEvent): void => {\n        nullthrows(this.touchableHandleResponderTerminate)(event);\n        if (this.props.onResponderTerminate != null) {\n          this.props.onResponderTerminate.call(this, event);\n        }\n      },\n      onResponderTerminationRequest: (): boolean => {\n        const {onResponderTerminationRequest} = this.props;\n        if (!nullthrows(this.touchableHandleResponderTerminationRequest)()) {\n          return false;\n        }\n        if (onResponderTerminationRequest == null) {\n          return true;\n        }\n        return onResponderTerminationRequest();\n      },\n    };\n  }\n\n  /**\n   * Lazily attaches Touchable.Mixin handlers.\n   */\n  _attachTouchHandlers(): void {\n    if (this.touchableGetPressRectOffset != null) {\n      return;\n    }\n    for (const key in Touchable.Mixin) {\n      if (typeof Touchable.Mixin[key] === 'function') {\n        (this: any)[key] = Touchable.Mixin[key].bind(this);\n      }\n    }\n    this.touchableHandleActivePressIn = (): void => {\n      if (!this.props.suppressHighlighting && isTouchable(this.props)) {\n        this.setState({isHighlighted: true});\n      }\n    };\n    this.touchableHandleActivePressOut = (): void => {\n      if (!this.props.suppressHighlighting && isTouchable(this.props)) {\n        this.setState({isHighlighted: false});\n      }\n    };\n    this.touchableHandlePress = (event: PressEvent): void => {\n      if (this.props.onPress != null) {\n        this.props.onPress(event);\n      }\n    };\n    this.touchableHandleLongPress = (event: PressEvent): void => {\n      if (this.props.onLongPress != null) {\n        this.props.onLongPress(event);\n      }\n    };\n    this.touchableGetPressRectOffset = (): PressRetentionOffset =>\n      this.props.pressRetentionOffset == null\n        ? PRESS_RECT_OFFSET\n        : this.props.pressRetentionOffset;\n  }\n}\n\nconst isTouchable = (props: Props): boolean =>\n  props.onPress != null ||\n  props.onLongPress != null ||\n  props.onStartShouldSetResponder != null;\n\nconst RCTText = createReactNativeComponentClass(\n  viewConfig.uiViewClassName,\n  () => viewConfig,\n);\n\nconst RCTVirtualText =\n  UIManager.getViewManagerConfig('RCTVirtualText') == null\n    ? RCTText\n    : createReactNativeComponentClass('RCTVirtualText', () => ({\n        validAttributes: {\n          ...ReactNativeViewAttributes.UIView,\n          isHighlighted: true,\n          maxFontSizeMultiplier: true,\n        },\n        uiViewClassName: 'RCTVirtualText',\n      }));\n\nconst Text = (\n  props: TextProps,\n  forwardedRef: ?React.Ref<'RCTText' | 'RCTVirtualText'>,\n) => {\n  return <TouchableText {...props} forwardedRef={forwardedRef} />;\n};\nconst TextToExport = React.forwardRef(Text);\nTextToExport.displayName = 'Text';\n\n// TODO: Deprecate this.\n/* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an error\n * found when Flow v0.89 was deployed. To see the error, delete this comment\n * and run Flow. */\nTextToExport.propTypes = DeprecatedTextPropTypes;\n\nmodule.exports = ((TextToExport: $FlowFixMe): Class<\n  NativeComponent<TextProps>,\n>);\n"],"mappings":"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"}