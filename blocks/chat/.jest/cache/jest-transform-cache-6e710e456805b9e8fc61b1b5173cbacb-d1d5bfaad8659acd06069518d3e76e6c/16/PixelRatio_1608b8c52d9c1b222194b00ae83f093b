7745246b552fd0a0cdde38221f05f6ba
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var Dimensions = require('./Dimensions');
var PixelRatio = function () {
  function PixelRatio() {
    (0, _classCallCheck2.default)(this, PixelRatio);
  }
  (0, _createClass2.default)(PixelRatio, null, [{
    key: "get",
    value: function get() {
      return Dimensions.get('window').scale;
    }
  }, {
    key: "getFontScale",
    value: function getFontScale() {
      return Dimensions.get('window').fontScale || PixelRatio.get();
    }
  }, {
    key: "getPixelSizeForLayoutSize",
    value: function getPixelSizeForLayoutSize(layoutSize) {
      return Math.round(layoutSize * PixelRatio.get());
    }
  }, {
    key: "roundToNearestPixel",
    value: function roundToNearestPixel(layoutSize) {
      var ratio = PixelRatio.get();
      return Math.round(layoutSize * ratio) / ratio;
    }
  }, {
    key: "startDetecting",
    value: function startDetecting() {}
  }]);
  return PixelRatio;
}();
module.exports = PixelRatio;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiRGltZW5zaW9ucyIsIlBpeGVsUmF0aW8iLCJkZWZhdWx0Iiwia2V5IiwidmFsdWUiLCJnZXQiLCJzY2FsZSIsImdldEZvbnRTY2FsZSIsImZvbnRTY2FsZSIsImdldFBpeGVsU2l6ZUZvckxheW91dFNpemUiLCJsYXlvdXRTaXplIiwiTWF0aCIsInJvdW5kIiwicm91bmRUb05lYXJlc3RQaXhlbCIsInJhdGlvIiwic3RhcnREZXRlY3RpbmciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiUGl4ZWxSYXRpby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRGltZW5zaW9ucyA9IHJlcXVpcmUoJy4vRGltZW5zaW9ucycpO1xuXG4vKipcbiAqIFBpeGVsUmF0aW8gY2xhc3MgZ2l2ZXMgYWNjZXNzIHRvIHRoZSBkZXZpY2UgcGl4ZWwgZGVuc2l0eS5cbiAqXG4gKiAjIyBGZXRjaGluZyBhIGNvcnJlY3RseSBzaXplZCBpbWFnZVxuICpcbiAqIFlvdSBzaG91bGQgZ2V0IGEgaGlnaGVyIHJlc29sdXRpb24gaW1hZ2UgaWYgeW91IGFyZSBvbiBhIGhpZ2ggcGl4ZWwgZGVuc2l0eVxuICogZGV2aWNlLiBBIGdvb2QgcnVsZSBvZiB0aHVtYiBpcyB0byBtdWx0aXBseSB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2UgeW91IGRpc3BsYXlcbiAqIGJ5IHRoZSBwaXhlbCByYXRpby5cbiAqXG4gKiBgYGBcbiAqIHZhciBpbWFnZSA9IGdldEltYWdlKHtcbiAqICAgd2lkdGg6IFBpeGVsUmF0aW8uZ2V0UGl4ZWxTaXplRm9yTGF5b3V0U2l6ZSgyMDApLFxuICogICBoZWlnaHQ6IFBpeGVsUmF0aW8uZ2V0UGl4ZWxTaXplRm9yTGF5b3V0U2l6ZSgxMDApLFxuICogfSk7XG4gKiA8SW1hZ2Ugc291cmNlPXtpbWFnZX0gc3R5bGU9e3t3aWR0aDogMjAwLCBoZWlnaHQ6IDEwMH19IC8+XG4gKiBgYGBcbiAqXG4gKiAjIyBQaXhlbCBncmlkIHNuYXBwaW5nXG4gKlxuICogSW4gaU9TLCB5b3UgY2FuIHNwZWNpZnkgcG9zaXRpb25zIGFuZCBkaW1lbnNpb25zIGZvciBlbGVtZW50cyB3aXRoIGFyYml0cmFyeVxuICogcHJlY2lzaW9uLCBmb3IgZXhhbXBsZSAyOS42NzQ4MjUuIEJ1dCwgdWx0aW1hdGVseSB0aGUgcGh5c2ljYWwgZGlzcGxheSBvbmx5XG4gKiBoYXZlIGEgZml4ZWQgbnVtYmVyIG9mIHBpeGVscywgZm9yIGV4YW1wbGUgNjQww5c5NjAgZm9yIGlQaG9uZSA0IG9yIDc1MMOXMTMzNFxuICogZm9yIGlQaG9uZSA2LiBpT1MgdHJpZXMgdG8gYmUgYXMgZmFpdGhmdWwgYXMgcG9zc2libGUgdG8gdGhlIHVzZXIgdmFsdWUgYnlcbiAqIHNwcmVhZGluZyBvbmUgb3JpZ2luYWwgcGl4ZWwgaW50byBtdWx0aXBsZSBvbmVzIHRvIHRyaWNrIHRoZSBleWUuIFRoZVxuICogZG93bnNpZGUgb2YgdGhpcyB0ZWNobmlxdWUgaXMgdGhhdCBpdCBtYWtlcyB0aGUgcmVzdWx0aW5nIGVsZW1lbnQgbG9va1xuICogYmx1cnJ5LlxuICpcbiAqIEluIHByYWN0aWNlLCB3ZSBmb3VuZCBvdXQgdGhhdCBkZXZlbG9wZXJzIGRvIG5vdCB3YW50IHRoaXMgZmVhdHVyZSBhbmQgdGhleVxuICogaGF2ZSB0byB3b3JrIGFyb3VuZCBpdCBieSBkb2luZyBtYW51YWwgcm91bmRpbmcgaW4gb3JkZXIgdG8gYXZvaWQgaGF2aW5nXG4gKiBibHVycnkgZWxlbWVudHMuIEluIFJlYWN0IE5hdGl2ZSwgd2UgYXJlIHJvdW5kaW5nIGFsbCB0aGUgcGl4ZWxzXG4gKiBhdXRvbWF0aWNhbGx5LlxuICpcbiAqIFdlIGhhdmUgdG8gYmUgY2FyZWZ1bCB3aGVuIHRvIGRvIHRoaXMgcm91bmRpbmcuIFlvdSBuZXZlciB3YW50IHRvIHdvcmsgd2l0aFxuICogcm91bmRlZCBhbmQgdW5yb3VuZGVkIHZhbHVlcyBhdCB0aGUgc2FtZSB0aW1lIGFzIHlvdSdyZSBnb2luZyB0byBhY2N1bXVsYXRlXG4gKiByb3VuZGluZyBlcnJvcnMuIEhhdmluZyBldmVuIG9uZSByb3VuZGluZyBlcnJvciBpcyBkZWFkbHkgYmVjYXVzZSBhIG9uZVxuICogcGl4ZWwgYm9yZGVyIG1heSB2YW5pc2ggb3IgYmUgdHdpY2UgYXMgYmlnLlxuICpcbiAqIEluIFJlYWN0IE5hdGl2ZSwgZXZlcnl0aGluZyBpbiBKYXZhU2NyaXB0IGFuZCB3aXRoaW4gdGhlIGxheW91dCBlbmdpbmUgd29ya3NcbiAqIHdpdGggYXJiaXRyYXJ5IHByZWNpc2lvbiBudW1iZXJzLiBJdCdzIG9ubHkgd2hlbiB3ZSBzZXQgdGhlIHBvc2l0aW9uIGFuZFxuICogZGltZW5zaW9ucyBvZiB0aGUgbmF0aXZlIGVsZW1lbnQgb24gdGhlIG1haW4gdGhyZWFkIHRoYXQgd2Ugcm91bmQuIEFsc28sXG4gKiByb3VuZGluZyBpcyBkb25lIHJlbGF0aXZlIHRvIHRoZSByb290IHJhdGhlciB0aGFuIHRoZSBwYXJlbnQsIGFnYWluIHRvIGF2b2lkXG4gKiBhY2N1bXVsYXRpbmcgcm91bmRpbmcgZXJyb3JzLlxuICpcbiAqL1xuY2xhc3MgUGl4ZWxSYXRpbyB7XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBkZXZpY2UgcGl4ZWwgZGVuc2l0eS4gU29tZSBleGFtcGxlczpcbiAgICpcbiAgICogICAtIFBpeGVsUmF0aW8uZ2V0KCkgPT09IDFcbiAgICogICAgIC0gbWRwaSBBbmRyb2lkIGRldmljZXMgKDE2MCBkcGkpXG4gICAqICAgLSBQaXhlbFJhdGlvLmdldCgpID09PSAxLjVcbiAgICogICAgIC0gaGRwaSBBbmRyb2lkIGRldmljZXMgKDI0MCBkcGkpXG4gICAqICAgLSBQaXhlbFJhdGlvLmdldCgpID09PSAyXG4gICAqICAgICAtIGlQaG9uZSA0LCA0U1xuICAgKiAgICAgLSBpUGhvbmUgNSwgNWMsIDVzXG4gICAqICAgICAtIGlQaG9uZSA2XG4gICAqICAgICAtIGlQaG9uZSA3XG4gICAqICAgICAtIGlQaG9uZSA4XG4gICAqICAgICAtIGlQaG9uZSBTRVxuICAgKiAgICAgLSB4aGRwaSBBbmRyb2lkIGRldmljZXMgKDMyMCBkcGkpXG4gICAqICAgLSBQaXhlbFJhdGlvLmdldCgpID09PSAzXG4gICAqICAgICAtIGlQaG9uZSA2IFBsdXNcbiAgICogICAgIC0gaVBob25lIDcgUGx1c1xuICAgKiAgICAgLSBpUGhvbmUgOCBQbHVzXG4gICAqICAgICAtIGlQaG9uZSBYXG4gICAqICAgICAtIHh4aGRwaSBBbmRyb2lkIGRldmljZXMgKDQ4MCBkcGkpXG4gICAqICAgLSBQaXhlbFJhdGlvLmdldCgpID09PSAzLjVcbiAgICogICAgIC0gTmV4dXMgNlxuICAgKi9cbiAgc3RhdGljIGdldCgpOiBudW1iZXIge1xuICAgIHJldHVybiBEaW1lbnNpb25zLmdldCgnd2luZG93Jykuc2NhbGU7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgc2NhbGluZyBmYWN0b3IgZm9yIGZvbnQgc2l6ZXMuIFRoaXMgaXMgdGhlIHJhdGlvIHRoYXQgaXMgdXNlZCB0byBjYWxjdWxhdGUgdGhlXG4gICAqIGFic29sdXRlIGZvbnQgc2l6ZSwgc28gYW55IGVsZW1lbnRzIHRoYXQgaGVhdmlseSBkZXBlbmQgb24gdGhhdCBzaG91bGQgdXNlIHRoaXMgdG8gZG9cbiAgICogY2FsY3VsYXRpb25zLlxuICAgKlxuICAgKiBJZiBhIGZvbnQgc2NhbGUgaXMgbm90IHNldCwgdGhpcyByZXR1cm5zIHRoZSBkZXZpY2UgcGl4ZWwgcmF0aW8uXG4gICAqXG4gICAqIEN1cnJlbnRseSB0aGlzIGlzIG9ubHkgaW1wbGVtZW50ZWQgb24gQW5kcm9pZCBhbmQgcmVmbGVjdHMgdGhlIHVzZXIgcHJlZmVyZW5jZSBzZXQgaW5cbiAgICogU2V0dGluZ3MgPiBEaXNwbGF5ID4gRm9udCBzaXplLCBvbiBpT1MgaXQgd2lsbCBhbHdheXMgcmV0dXJuIHRoZSBkZWZhdWx0IHBpeGVsIHJhdGlvLlxuICAgKiBAcGxhdGZvcm0gYW5kcm9pZFxuICAgKi9cbiAgc3RhdGljIGdldEZvbnRTY2FsZSgpOiBudW1iZXIge1xuICAgIHJldHVybiBEaW1lbnNpb25zLmdldCgnd2luZG93JykuZm9udFNjYWxlIHx8IFBpeGVsUmF0aW8uZ2V0KCk7XG4gIH1cblxuICAvKipcbiAgICogQ29udmVydHMgYSBsYXlvdXQgc2l6ZSAoZHApIHRvIHBpeGVsIHNpemUgKHB4KS5cbiAgICpcbiAgICogR3VhcmFudGVlZCB0byByZXR1cm4gYW4gaW50ZWdlciBudW1iZXIuXG4gICAqL1xuICBzdGF0aWMgZ2V0UGl4ZWxTaXplRm9yTGF5b3V0U2l6ZShsYXlvdXRTaXplOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGxheW91dFNpemUgKiBQaXhlbFJhdGlvLmdldCgpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSb3VuZHMgYSBsYXlvdXQgc2l6ZSAoZHApIHRvIHRoZSBuZWFyZXN0IGxheW91dCBzaXplIHRoYXQgY29ycmVzcG9uZHMgdG9cbiAgICogYW4gaW50ZWdlciBudW1iZXIgb2YgcGl4ZWxzLiBGb3IgZXhhbXBsZSwgb24gYSBkZXZpY2Ugd2l0aCBhIFBpeGVsUmF0aW9cbiAgICogb2YgMywgYFBpeGVsUmF0aW8ucm91bmRUb05lYXJlc3RQaXhlbCg4LjQpID0gOC4zM2AsIHdoaWNoIGNvcnJlc3BvbmRzIHRvXG4gICAqIGV4YWN0bHkgKDguMzMgKiAzKSA9IDI1IHBpeGVscy5cbiAgICovXG4gIHN0YXRpYyByb3VuZFRvTmVhcmVzdFBpeGVsKGxheW91dFNpemU6IG51bWJlcik6IG51bWJlciB7XG4gICAgY29uc3QgcmF0aW8gPSBQaXhlbFJhdGlvLmdldCgpO1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGxheW91dFNpemUgKiByYXRpbykgLyByYXRpbztcbiAgfVxuXG4gIC8vIE5vLW9wIGZvciBpT1MsIGJ1dCB1c2VkIG9uIHRoZSB3ZWIuIFNob3VsZCBub3QgYmUgZG9jdW1lbnRlZC5cbiAgc3RhdGljIHN0YXJ0RGV0ZWN0aW5nKCkge31cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQaXhlbFJhdGlvO1xuIl0sIm1hcHBpbmdzIjoiQUFVQSxZQUFZOztBQUFDLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQSxJQUFBQyxnQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBRWIsSUFBTUcsVUFBVSxHQUFHSCxPQUFPLENBQUMsY0FBYyxDQUFDO0FBQUMsSUE4Q3JDSSxVQUFVO0VBQUEsU0FBQUEsV0FBQTtJQUFBLElBQUFILGdCQUFBLENBQUFJLE9BQUEsUUFBQUQsVUFBQTtFQUFBO0VBQUEsSUFBQUYsYUFBQSxDQUFBRyxPQUFBLEVBQUFELFVBQUE7SUFBQUUsR0FBQTtJQUFBQyxLQUFBLEVBeUJkLFNBQUFDLElBQUEsRUFBcUI7TUFDbkIsT0FBT0wsVUFBVSxDQUFDSyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUNDLEtBQUs7SUFDdkM7RUFBQztJQUFBSCxHQUFBO0lBQUFDLEtBQUEsRUFhRCxTQUFBRyxhQUFBLEVBQThCO01BQzVCLE9BQU9QLFVBQVUsQ0FBQ0ssR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDRyxTQUFTLElBQUlQLFVBQVUsQ0FBQ0ksR0FBRyxDQUFDLENBQUM7SUFDL0Q7RUFBQztJQUFBRixHQUFBO0lBQUFDLEtBQUEsRUFPRCxTQUFBSywwQkFBaUNDLFVBQWtCLEVBQVU7TUFDM0QsT0FBT0MsSUFBSSxDQUFDQyxLQUFLLENBQUNGLFVBQVUsR0FBR1QsVUFBVSxDQUFDSSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2xEO0VBQUM7SUFBQUYsR0FBQTtJQUFBQyxLQUFBLEVBUUQsU0FBQVMsb0JBQTJCSCxVQUFrQixFQUFVO01BQ3JELElBQU1JLEtBQUssR0FBR2IsVUFBVSxDQUFDSSxHQUFHLENBQUMsQ0FBQztNQUM5QixPQUFPTSxJQUFJLENBQUNDLEtBQUssQ0FBQ0YsVUFBVSxHQUFHSSxLQUFLLENBQUMsR0FBR0EsS0FBSztJQUMvQztFQUFDO0lBQUFYLEdBQUE7SUFBQUMsS0FBQSxFQUdELFNBQUFXLGVBQUEsRUFBd0IsQ0FBQztFQUFDO0VBQUEsT0FBQWQsVUFBQTtBQUFBO0FBRzVCZSxNQUFNLENBQUNDLE9BQU8sR0FBR2hCLFVBQVUifQ==