dbf154cc603ee1134c3073630b6935ab
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typesAreEqual = exports.perPlatformTypes = void 0;
var mimeTypes = Object.freeze({
  allFiles: '*/*',
  audio: 'audio/*',
  csv: 'text/csv',
  doc: 'application/msword',
  docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
  images: 'image/*',
  pdf: 'application/pdf',
  plainText: 'text/plain',
  ppt: 'application/vnd.ms-powerpoint',
  pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
  video: 'video/*',
  xls: 'application/vnd.ms-excel',
  xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
  zip: 'application/zip'
});
var utis = Object.freeze({
  allFiles: 'public.item',
  audio: 'public.audio',
  csv: 'public.comma-separated-values-text',
  doc: 'com.microsoft.word.doc',
  docx: 'org.openxmlformats.wordprocessingml.document',
  images: 'public.image',
  pdf: 'com.adobe.pdf',
  plainText: 'public.plain-text',
  ppt: 'com.microsoft.powerpoint.ppt',
  pptx: 'org.openxmlformats.presentationml.presentation',
  video: 'public.movie',
  xls: 'com.microsoft.excel.xls',
  xlsx: 'org.openxmlformats.spreadsheetml.sheet',
  zip: 'public.zip-archive'
});
var extensions = Object.freeze({
  allFiles: '*',
  audio: '.3g2 .3gp .aac .adt .adts .aif .aifc .aiff .asf .au .m3u .m4a .m4b .mid .midi .mp2 .mp3 .mp4 .rmi .snd .wav .wax .wma',
  csv: '.csv',
  doc: '.doc',
  docx: '.docx',
  images: '.jpeg .jpg .png',
  pdf: '.pdf',
  plainText: '.txt',
  ppt: '.ppt',
  pptx: '.pptx',
  video: '.mp4',
  xls: '.xls',
  xlsx: '.xlsx',
  zip: '.zip .gz'
});
var perPlatformTypes = {
  android: mimeTypes,
  ios: utis,
  windows: extensions,
  macos: extensions,
  web: extensions
};
exports.perPlatformTypes = perPlatformTypes;
var mimesAndUtisAreEqual = true;
var mimesAndExtensionsAreEqual = true;
var typesAreEqual = mimesAndUtisAreEqual && mimesAndExtensionsAreEqual;
exports.typesAreEqual = typesAreEqual;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtaW1lVHlwZXMiLCJPYmplY3QiLCJmcmVlemUiLCJhbGxGaWxlcyIsImF1ZGlvIiwiY3N2IiwiZG9jIiwiZG9jeCIsImltYWdlcyIsInBkZiIsInBsYWluVGV4dCIsInBwdCIsInBwdHgiLCJ2aWRlbyIsInhscyIsInhsc3giLCJ6aXAiLCJ1dGlzIiwiZXh0ZW5zaW9ucyIsInBlclBsYXRmb3JtVHlwZXMiLCJhbmRyb2lkIiwiaW9zIiwid2luZG93cyIsIm1hY29zIiwid2ViIiwibWltZXNBbmRVdGlzQXJlRXF1YWwiLCJtaW1lc0FuZEV4dGVuc2lvbnNBcmVFcXVhbCIsInR5cGVzQXJlRXF1YWwiXSwic291cmNlcyI6WyJmaWxlVHlwZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWltZVR5cGVzID0gT2JqZWN0LmZyZWV6ZSh7XG4gIGFsbEZpbGVzOiAnKi8qJyxcbiAgYXVkaW86ICdhdWRpby8qJyxcbiAgY3N2OiAndGV4dC9jc3YnLFxuICBkb2M6ICdhcHBsaWNhdGlvbi9tc3dvcmQnLFxuICBkb2N4OiAnYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LndvcmRwcm9jZXNzaW5nbWwuZG9jdW1lbnQnLFxuICBpbWFnZXM6ICdpbWFnZS8qJyxcbiAgcGRmOiAnYXBwbGljYXRpb24vcGRmJyxcbiAgcGxhaW5UZXh0OiAndGV4dC9wbGFpbicsXG4gIHBwdDogJ2FwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50JyxcbiAgcHB0eDogJ2FwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5wcmVzZW50YXRpb25tbC5wcmVzZW50YXRpb24nLFxuICB2aWRlbzogJ3ZpZGVvLyonLFxuICB4bHM6ICdhcHBsaWNhdGlvbi92bmQubXMtZXhjZWwnLFxuICB4bHN4OiAnYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnNwcmVhZHNoZWV0bWwuc2hlZXQnLFxuICB6aXA6ICdhcHBsaWNhdGlvbi96aXAnLFxufSBhcyBjb25zdClcblxuY29uc3QgdXRpcyA9IE9iamVjdC5mcmVlemUoe1xuICBhbGxGaWxlczogJ3B1YmxpYy5pdGVtJyxcbiAgYXVkaW86ICdwdWJsaWMuYXVkaW8nLFxuICBjc3Y6ICdwdWJsaWMuY29tbWEtc2VwYXJhdGVkLXZhbHVlcy10ZXh0JyxcbiAgZG9jOiAnY29tLm1pY3Jvc29mdC53b3JkLmRvYycsXG4gIGRvY3g6ICdvcmcub3BlbnhtbGZvcm1hdHMud29yZHByb2Nlc3NpbmdtbC5kb2N1bWVudCcsXG4gIGltYWdlczogJ3B1YmxpYy5pbWFnZScsXG4gIHBkZjogJ2NvbS5hZG9iZS5wZGYnLFxuICBwbGFpblRleHQ6ICdwdWJsaWMucGxhaW4tdGV4dCcsXG4gIHBwdDogJ2NvbS5taWNyb3NvZnQucG93ZXJwb2ludC5wcHQnLFxuICBwcHR4OiAnb3JnLm9wZW54bWxmb3JtYXRzLnByZXNlbnRhdGlvbm1sLnByZXNlbnRhdGlvbicsXG4gIHZpZGVvOiAncHVibGljLm1vdmllJyxcbiAgeGxzOiAnY29tLm1pY3Jvc29mdC5leGNlbC54bHMnLFxuICB4bHN4OiAnb3JnLm9wZW54bWxmb3JtYXRzLnNwcmVhZHNoZWV0bWwuc2hlZXQnLFxuICB6aXA6ICdwdWJsaWMuemlwLWFyY2hpdmUnLFxufSBhcyBjb25zdClcblxuY29uc3QgZXh0ZW5zaW9ucyA9IE9iamVjdC5mcmVlemUoe1xuICBhbGxGaWxlczogJyonLFxuICBhdWRpbzpcbiAgICAnLjNnMiAuM2dwIC5hYWMgLmFkdCAuYWR0cyAuYWlmIC5haWZjIC5haWZmIC5hc2YgLmF1IC5tM3UgLm00YSAubTRiIC5taWQgLm1pZGkgLm1wMiAubXAzIC5tcDQgLnJtaSAuc25kIC53YXYgLndheCAud21hJyxcbiAgY3N2OiAnLmNzdicsXG4gIGRvYzogJy5kb2MnLFxuICBkb2N4OiAnLmRvY3gnLFxuICBpbWFnZXM6ICcuanBlZyAuanBnIC5wbmcnLFxuICBwZGY6ICcucGRmJyxcbiAgcGxhaW5UZXh0OiAnLnR4dCcsXG4gIHBwdDogJy5wcHQnLFxuICBwcHR4OiAnLnBwdHgnLFxuICB2aWRlbzogJy5tcDQnLFxuICB4bHM6ICcueGxzJyxcbiAgeGxzeDogJy54bHN4JyxcbiAgemlwOiAnLnppcCAuZ3onLFxufSBhcyBjb25zdClcblxuZXhwb3J0IHR5cGUgUGxhdGZvcm1UeXBlcyA9IHtcbiAgYW5kcm9pZDogdHlwZW9mIG1pbWVUeXBlc1xuICBpb3M6IHR5cGVvZiB1dGlzXG4gIHdpbmRvd3M6IHR5cGVvZiBleHRlbnNpb25zXG59XG5leHBvcnQgdHlwZSBTdXBwb3J0ZWRQbGF0Zm9ybXMgPSAnaW9zJyB8ICdhbmRyb2lkJyB8ICd3aW5kb3dzJ1xuXG5leHBvcnQgY29uc3QgcGVyUGxhdGZvcm1UeXBlcyA9IHtcbiAgYW5kcm9pZDogbWltZVR5cGVzLFxuICBpb3M6IHV0aXMsXG4gIHdpbmRvd3M6IGV4dGVuc2lvbnMsXG4gIC8vIHVuc3VwcG9ydGVkLCBidXQgYWRkZWQgdG8gbWFrZSBUUyBoYXBweVxuICBtYWNvczogZXh0ZW5zaW9ucyxcbiAgd2ViOiBleHRlbnNpb25zLFxufVxuXG4vLyBlbnN1cmUgc2hhcGVzIG9mIHBsYXRmb3JtVHlwZXMgYXJlIHRoZSBzYW1lOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNjcwMjczNDcvMjA3MDk0MlxuLy8gbGV0IG1lIGtub3cgaWYgdGhlcmUncyBhIG5pY2VyIHdheVxuXG50eXBlIEFzc2VydEVxdWFsS2V5czxUMSBleHRlbmRzIG9iamVjdCwgVDIgZXh0ZW5kcyBvYmplY3Q+ID0gW1xuICBrZXlvZiBUMSBleHRlbmRzIGtleW9mIFQyID8gMSA6IDAsXG4gIGtleW9mIFQyIGV4dGVuZHMga2V5b2YgVDEgPyAxIDogMCxcbl0gZXh0ZW5kcyBbMSwgMV1cbiAgPyB0cnVlXG4gIDogZmFsc2VcblxuY29uc3QgbWltZXNBbmRVdGlzQXJlRXF1YWw6IEFzc2VydEVxdWFsS2V5czx0eXBlb2YgbWltZVR5cGVzLCB0eXBlb2YgdXRpcz4gPSB0cnVlXG5jb25zdCBtaW1lc0FuZEV4dGVuc2lvbnNBcmVFcXVhbDogQXNzZXJ0RXF1YWxLZXlzPHR5cGVvZiBtaW1lVHlwZXMsIHR5cGVvZiBleHRlbnNpb25zPiA9IHRydWVcbmV4cG9ydCBjb25zdCB0eXBlc0FyZUVxdWFsID0gbWltZXNBbmRVdGlzQXJlRXF1YWwgJiYgbWltZXNBbmRFeHRlbnNpb25zQXJlRXF1YWxcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsU0FBUyxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYztFQUM5QkMsUUFBUSxFQUFFLEtBRG9CO0VBRTlCQyxLQUFLLEVBQUUsU0FGdUI7RUFHOUJDLEdBQUcsRUFBRSxVQUh5QjtFQUk5QkMsR0FBRyxFQUFFLG9CQUp5QjtFQUs5QkMsSUFBSSxFQUFFLHlFQUx3QjtFQU05QkMsTUFBTSxFQUFFLFNBTnNCO0VBTzlCQyxHQUFHLEVBQUUsaUJBUHlCO0VBUTlCQyxTQUFTLEVBQUUsWUFSbUI7RUFTOUJDLEdBQUcsRUFBRSwrQkFUeUI7RUFVOUJDLElBQUksRUFBRSwyRUFWd0I7RUFXOUJDLEtBQUssRUFBRSxTQVh1QjtFQVk5QkMsR0FBRyxFQUFFLDBCQVp5QjtFQWE5QkMsSUFBSSxFQUFFLG1FQWJ3QjtFQWM5QkMsR0FBRyxFQUFFO0FBZHlCLENBQWQsQ0FBbEI7QUFpQkEsSUFBTUMsSUFBSSxHQUFHaEIsTUFBTSxDQUFDQyxNQUFQLENBQWM7RUFDekJDLFFBQVEsRUFBRSxhQURlO0VBRXpCQyxLQUFLLEVBQUUsY0FGa0I7RUFHekJDLEdBQUcsRUFBRSxvQ0FIb0I7RUFJekJDLEdBQUcsRUFBRSx3QkFKb0I7RUFLekJDLElBQUksRUFBRSw4Q0FMbUI7RUFNekJDLE1BQU0sRUFBRSxjQU5pQjtFQU96QkMsR0FBRyxFQUFFLGVBUG9CO0VBUXpCQyxTQUFTLEVBQUUsbUJBUmM7RUFTekJDLEdBQUcsRUFBRSw4QkFUb0I7RUFVekJDLElBQUksRUFBRSxnREFWbUI7RUFXekJDLEtBQUssRUFBRSxjQVhrQjtFQVl6QkMsR0FBRyxFQUFFLHlCQVpvQjtFQWF6QkMsSUFBSSxFQUFFLHdDQWJtQjtFQWN6QkMsR0FBRyxFQUFFO0FBZG9CLENBQWQsQ0FBYjtBQWlCQSxJQUFNRSxVQUFVLEdBQUdqQixNQUFNLENBQUNDLE1BQVAsQ0FBYztFQUMvQkMsUUFBUSxFQUFFLEdBRHFCO0VBRS9CQyxLQUFLLEVBQ0gsdUhBSDZCO0VBSS9CQyxHQUFHLEVBQUUsTUFKMEI7RUFLL0JDLEdBQUcsRUFBRSxNQUwwQjtFQU0vQkMsSUFBSSxFQUFFLE9BTnlCO0VBTy9CQyxNQUFNLEVBQUUsaUJBUHVCO0VBUS9CQyxHQUFHLEVBQUUsTUFSMEI7RUFTL0JDLFNBQVMsRUFBRSxNQVRvQjtFQVUvQkMsR0FBRyxFQUFFLE1BVjBCO0VBVy9CQyxJQUFJLEVBQUUsT0FYeUI7RUFZL0JDLEtBQUssRUFBRSxNQVp3QjtFQWEvQkMsR0FBRyxFQUFFLE1BYjBCO0VBYy9CQyxJQUFJLEVBQUUsT0FkeUI7RUFlL0JDLEdBQUcsRUFBRTtBQWYwQixDQUFkLENBQW5CO0FBeUJPLElBQU1HLGdCQUFnQixHQUFHO0VBQzlCQyxPQUFPLEVBQUVwQixTQURxQjtFQUU5QnFCLEdBQUcsRUFBRUosSUFGeUI7RUFHOUJLLE9BQU8sRUFBRUosVUFIcUI7RUFLOUJLLEtBQUssRUFBRUwsVUFMdUI7RUFNOUJNLEdBQUcsRUFBRU47QUFOeUIsQ0FBekI7O0FBbUJQLElBQU1PLG9CQUFvRSxHQUFHLElBQTdFO0FBQ0EsSUFBTUMsMEJBQWdGLEdBQUcsSUFBekY7QUFDTyxJQUFNQyxhQUFhLEdBQUdGLG9CQUFvQixJQUFJQywwQkFBOUMifQ==