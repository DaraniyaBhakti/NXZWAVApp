{"version":3,"file":"/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/ChatNew.steps.tsx","sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/ChatNew.steps.tsx"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,oDAAoD;AAEpD,uEAAuE;AAEvE,6BAA6B;AAC7B,2CAA2C;AAC3C,+DAA+D;AAC/D,yFAAyF;AACzF,mEAAmE;AACnE,8DAA8D;AAE9D,+BAA+B;AAC/B,kBAAkB;AAClB,2BAA2B;AAC3B,6BAA6B;AAC7B,uBAAuB;AACvB,uEAAuE;AACvE,oBAAoB;AACpB,UAAU;AACV,yBAAyB;AACzB,eAAe;AACf,kBAAkB;AAClB,uCAAuC;AACvC,uBAAuB;AACvB,4BAA4B;AAC5B,uBAAuB;AACvB,4BAA4B;AAC5B,+BAA+B;AAC/B,WAAW;AACX,SAAS;AACT,OAAO;AACP,mBAAmB;AACnB,KAAK;AAEL,oCAAoC;AACpC,MAAM;AACN,gBAAgB;AAChB,gCAAgC;AAChC,mBAAmB;AACnB,sCAAsC;AACtC,2BAA2B;AAC3B,6BAA6B;AAC7B,6BAA6B;AAC7B,oBAAoB;AACpB,eAAe;AACf,uCAAuC;AACvC,gBAAgB;AAChB,iCAAiC;AACjC,SAAS;AACT,yBAAyB;AACzB,sBAAsB;AACtB,OAAO;AACP,OAAO;AACP,MAAM;AACN,gBAAgB;AAChB,gCAAgC;AAChC,mBAAmB;AACnB,oCAAoC;AACpC,2BAA2B;AAC3B,6BAA6B;AAC7B,6BAA6B;AAC7B,mBAAmB;AACnB,eAAe;AACf,uCAAuC;AACvC,gBAAgB;AAChB,+BAA+B;AAC/B,SAAS;AACT,yBAAyB;AACzB,sBAAsB;AACtB,OAAO;AACP,MAAM;AACN,KAAK;AAGL,uFAAuF;AAEvF,4CAA4C;AAC5C,uBAAuB;AACvB,2BAA2B;AAC3B,4BAA4B;AAC5B,wEAAwE;AACxE,2EAA2E;AAC3E,QAAQ;AAER,mEAAmE;AACnE,0CAA0C;AAC1C,oCAAoC;AAEpC,mDAAmD;AACnD,uEAAuE;AACvE,UAAU;AAEV,4CAA4C;AAC5C,gEAAgE;AAChE,kEAAkE;AAClE,wEAAwE;AACxE,WAAW;AACX,mEAAmE;AACnE,gDAAgD;AAChD,UAAU;AAEV,wCAAwC;AACxC,0DAA0D;AAE1D,4BAA4B;AAC5B,kBAAkB;AAClB,uBAAuB;AACvB,uCAAuC;AACvC,0BAA0B;AAC1B,8CAA8C;AAC9C,mCAAmC;AACnC,qCAAqC;AACrC,qCAAqC;AACrC,4BAA4B;AAC5B,uBAAuB;AACvB,+CAA+C;AAC/C,yBAAyB;AACzB,0CAA0C;AAC1C,iBAAiB;AACjB,iCAAiC;AACjC,8BAA8B;AAC9B,cAAc;AACd,YAAY;AACZ,WAAW;AACX,wDAAwD;AACxD,8DAA8D;AAC9D,WAAW;AACX,6CAA6C;AAC7C,iDAAiD;AACjD,0EAA0E;AAC1E,0CAA0C;AAE1C,oEAAoE;AACpE,0EAA0E;AAC1E,WAAW;AACX,uDAAuD;AAEvD,uDAAuD;AACvD,6DAA6D;AAC7D,WAAW;AACX,0CAA0C;AAE1C,uDAAuD;AACvD,6DAA6D;AAC7D,WAAW;AACX,0CAA0C;AAE1C,6DAA6D;AAE7D,UAAU;AAEV,6CAA6C;AAC7C,wDAAwD;AACxD,sDAAsD;AACtD,WAAW;AACX,4CAA4C;AAC5C,2DAA2D;AAC3D,+CAA+C;AAC/C,WAAW;AACX,4CAA4C;AAC5C,8DAA8D;AAC9D,YAAY;AACZ,oBAAoB;AACpB,gDAAgD;AAChD,cAAc;AACd,aAAa;AACb,qFAAqF;AACrF,wEAAwE;AACxE,UAAU;AACV,QAAQ;AACR,MAAM","sourcesContent":["// import { defineFeature, loadFeature } from \"jest-cucumber\";\n// import { shallow, ShallowWrapper } from \"enzyme\";\n\n// import * as helpersChatNew from \"../../../../framework/src/Helpers\";\n\n// import React from \"react\";\n// import ChatNew from \"../../src/ChatNew\";\n// import { Message } from \"../../../../framework/src/Message\";\n// import MessageEnum, { getName } from \"../../../../framework/src/Messages/MessageEnum\";\n// import { runEngine } from \"../../../../framework/src/RunEngine\";\n// import { UserResponse } from \"../../src/ChatNewController\";\n\n// const screenPropsChatNew = {\n//   navigation: {\n//     navigate: jest.fn(),\n//     setOptions: jest.fn(),\n//     push: jest.fn(),\n//     addListener: jest.fn().mockImplementation((event, callback) => {\n//       callback();\n//     }),\n//     goBack: jest.fn(),\n//     state: {\n//       params: {\n//         receiverUser: \"ReceiveUser\",\n//         userID: \"7\",\n//         userName: \"name\",\n//         userPic: \"\",\n//         userPoints: \"12\",\n//         userRole: \"designer\"\n//       },\n//     },\n//   },\n//   id: \"ChatNew\",\n// };\n\n// const userList: UserResponse[] = \n// \t[{\n// \t\t\tid: \"319\",\n// \t\t\ttype: \"user_profile_info\",\n// \t\t\tattributes: {\n// \t\t\t\tuser_name: \"Prof. Kieth Crona\",\n// \t\t\t\tunlock_amount: null,\n// \t\t\t\tapple_account_id: 320,\n// \t\t\t\tlevel_name: \"Level 1\",\n// \t\t\t\tpoints: 4950,\n// \t\t\t\trank: 1,\n// \t\t\t\tprofile_account_categories_id: {\n// \t\t\t\t\tid: 321,\n// \t\t\t\t\tname: \"Tracee Wintheiser\"\n// \t\t\t\t},\n// \t\t\t\tprofile_pic: null,\n// \t\t\t\tcover_pic: null\n// \t\t\t}\n// \t\t},\n// \t\t{\n// \t\t\tid: \"320\",\n// \t\t\ttype: \"user_profile_info\",\n// \t\t\tattributes: {\n// \t\t\t\tuser_name: \"Diana Fisher DO\",\n// \t\t\t\tunlock_amount: null,\n// \t\t\t\tapple_account_id: 321,\n// \t\t\t\tlevel_name: \"Level 1\",\n// \t\t\t\tpoints: 125,\n// \t\t\t\trank: 2,\n// \t\t\t\tprofile_account_categories_id: {\n// \t\t\t\t\tid: 322,\n// \t\t\t\t\tname: \"Bobbie Luettgen\"\n// \t\t\t\t},\n// \t\t\t\tprofile_pic: null,\n// \t\t\t\tcover_pic: null\n// \t\t\t}\n// \t\t}\n// \t]\n\n\n// const featureChatNew = loadFeature(\"./__tests__/features/ChatNew-scenario.feature\");\n\n// defineFeature(featureChatNew, (test) => {\n//   beforeEach(() => {\n//     jest.resetModules();\n//     jest.clearAllMocks();\n//     jest.doMock(\"react-native\", () => ({ Platform: { OS: \"ios\" } }));\n//     jest.spyOn(helpersChatNew, \"getOS\").mockImplementation(() => \"ios\");\n//   });\n\n//   test(\"User navigates to ChatNew\", ({ given, when, then }) => {\n//     let chatNewWrapper: ShallowWrapper;\n//     let instanceChatNew: ChatNew;\n\n//     given(\"I am a User loading ChatNew\", () => {\n//       chatNewWrapper = shallow(<ChatNew {...screenPropsChatNew} />);\n//     });\n\n//     when(\"I navigate to ChatNew\", () => {\n//       instanceChatNew = chatNewWrapper.instance() as ChatNew;\n//       let textInputComponentChatNew = chatNewWrapper.findWhere(\n//         (node) => node.prop(\"testID\") === \"textInputComponentChatNew\"\n//       );\n//       textInputComponentChatNew.simulate(\"changeText\", \"user1\");\n//       instanceChatNew.onPressUserSubmitting()\n//     });\n\n//     then(\"ChatNew will load\", () => {\n//       instanceChatNew.setState({ userList: userList });\n\n//       let itemChatNew = {\n//         item: {\n//           id: \"319\",\n//           type: \"user_profile_info\",\n//           attributes: {\n//             user_name: \"Prof. Kieth Crona\",\n//             unlock_amount: null,\n//             apple_account_id: 320,\n//             level_name: \"Level 1\",\n//             points: 4900,\n//             rank: 1,\n//             profile_account_categories_id: {\n//               id: 321,\n//               name: \"Tracee Wintheiser\"\n//             },\n//             profile_pic: null,\n//             cover_pic: null\n//           }\n//         }\n//       };\n//       let flatListChatNew = chatNewWrapper.findWhere(\n//         (node) => node.prop(\"testID\") === \"flatListChatNew\"\n//       );\n//       let rowItemChatNew = flatListChatNew\n//         .renderProp(\"renderItem\")(itemChatNew)\n//         .findWhere((node) => node.prop(\"testID\") === \"rowItemChatNew\");\n//       rowItemChatNew.simulate(\"press\");\n\n//       let touchOnMainContainerChatNew = chatNewWrapper.findWhere(\n//         (node) => node.prop(\"testID\") === \"touchOnMainContainerChatNew\"\n//       );\n//       touchOnMainContainerChatNew.simulate(\"press\");\n\n//       let btnBackChatNew = chatNewWrapper.findWhere(\n//         (node) => node.prop(\"testID\") === \"btnBackChatNew\"\n//       );\n//       btnBackChatNew.simulate(\"press\");\n\n//       let btnChatChatNew = chatNewWrapper.findWhere(\n//         (node) => node.prop(\"testID\") === \"btnChatChatNew\"\n//       );\n//       btnChatChatNew.simulate(\"press\");\n\n//       instanceChatNew.setState({currentSelectedUser:null})\n\n//     });\n\n//     then(\"I can leave the screen\", () => {\n//       const msgGetUsersForConversation = new Message(\n//         getName(MessageEnum.RestAPIResponceMessage)\n//       );\n//       msgGetUsersForConversation.addData(\n//         getName(MessageEnum.RestAPIResponceDataMessage),\n//         msgGetUsersForConversation.messageId\n//       );\n//       msgGetUsersForConversation.addData(\n//         getName(MessageEnum.RestAPIResponceSuccessMessage),\n//         {\n//           data: {\n//             message: \"No conversations Found\"\n//           }\n//         })\n//       instanceChatNew.getUserListApiCallId = msgGetUsersForConversation.messageId;\n//       runEngine.sendMessage(\"Unit Test\", msgGetUsersForConversation);\n//     });\n//   });\n// });\n"]}