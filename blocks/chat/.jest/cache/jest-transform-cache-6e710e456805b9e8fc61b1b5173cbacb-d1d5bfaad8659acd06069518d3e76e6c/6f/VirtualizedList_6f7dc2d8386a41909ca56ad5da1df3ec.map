{"version":3,"names":["_interopRequireDefault","require","_defineProperty2","_extends2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","default","result","NewTarget","Reflect","construct","arguments","apply","sham","Proxy","Boolean","valueOf","e","Batchinator","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","_require","computeWindowedRenderLimits","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","_React$PureComponent","_super","props","context","_this","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","virtualizedList","getOutermostParentListRef","_getNestedChildState","key","existingChildData","_nestedChildLists","get","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","set","ref","console","error","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_averageCellLength","Map","_frames","_footerLength","_hasDataChangedSinceEndReached","_hasDoneInitialScroll","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","createElement","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","_this$_convertParentS","Math","max","perf","prevDt","_updateViewableItems","data","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props","getItemCount","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_getFrameMetricsApprox","_this$_scrollMetrics","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","_iterator","_step","childKey","hasMore","_createViewToken","isViewable","_this$props2","getItem","keyExtractor","item","frame","_getFrameMetrics","getItemLayout","_this$props3","__DEV__","frameType","shape","number","isRequired","checkPropTypes","__isNative","windowSize","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","getNestedChildState","listKey","_getCellKey","frames","scrollToEnd","params","veryLast","scrollTo","horizontal","x","y","_this$props4","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props5","itemCount","scrollToOffset","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","getChildContext","getScrollMetrics","registerAsNestedChild","unregisterAsNestedChild","virtualizedCell","componentDidMount","componentWillUnmount","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","_loop","has","CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","disableVirtualization","nestedContext","render","_this3","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","VirtualizedCellWrapper","style","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","event","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","innerRet","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","debug","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","_iterator2","_step2","_this4","measureLayout","getNativeScrollRef","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props10","onEndReached","_this$_scrollMetrics2","_this$state2","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","schedule","_this5","onUpdate","getDerivedStateFromProps","prevState","PureComponent","defaultProps","id","type","displayName","String","contextTypes","string","func","bool","childContextTypes","_React$Component","_super2","_this6","_len","args","_key","concat","separatorProps","highlighted","leadingItem","_separators","highlight","_this6$props","unhighlight","_this6$props2","updateProps","select","_this6$props3","_renderElement","renderItem","ListItemComponent","separators","_this$props11","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","_React$Component2","_super3","children","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('./VirtualizeUtils');\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n};\n\ntype RequiredProps = {\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n};\ntype OptionalProps = {\n  // TODO: Conflicts with the optional `renderItem` in\n  // `VirtualizedSectionList`'s props.\n  renderItem?: $FlowFixMe<?RenderItemType<Item>>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {length: number, offset: number, index: number}, // e.g. height, y\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Each data item is rendered using this element. Can be a React Component Class,\n   * or a render function.\n   */\n  ListItemComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  onEndReached?: ?(info: {distanceFromEnd: number}) => void,\n  onEndReachedThreshold?: ?number, // units of visible length\n  onLayout?: ?Function,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n};\n/* $FlowFixMe - this Props seems to be missing a bunch of stuff. Remove this\n * comment to see the errors */\nexport type Props = RequiredProps & OptionalProps;\n\ntype DefaultProps = {|\n  disableVirtualization: boolean,\n  horizontal: boolean,\n  initialNumToRender: number,\n  keyExtractor: (item: Item, index: number) => string,\n  maxToRenderPerBatch: number,\n  onEndReachedThreshold: number,\n  scrollEventThrottle: number,\n  updateCellsBatchingPeriod: number,\n  windowSize: number,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n};\n\ntype State = {first: number, last: number};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} but maximum is ${getItemCount(\n        data,\n      ) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): any {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): any {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef(): any {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps: DefaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      if (item.id != null) {\n        return item.id;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes:\n    | any\n    | {|\n        virtualizedCell: {|\n          cellKey: React$PropType$Primitive<string>,\n        |},\n        virtualizedList: {|\n          getScrollMetrics: React$PropType$Primitive<Function>,\n          horizontal: React$PropType$Primitive<boolean>,\n          getOutermostParentListRef: React$PropType$Primitive<Function>,\n          getNestedChildState: React$PropType$Primitive<Function>,\n          registerAsNestedChild: React$PropType$Primitive<Function>,\n          unregisterAsNestedChild: React$PropType$Primitive<Function>,\n        |},\n      |} = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  static childContextTypes:\n    | any\n    | {|\n        getScrollMetrics: React$PropType$Primitive<Function>,\n        horizontal: React$PropType$Primitive<boolean>,\n        getOutermostParentListRef: React$PropType$Primitive<Function>,\n        getNestedChildState: React$PropType$Primitive<Function>,\n        registerAsNestedChild: React$PropType$Primitive<Function>,\n        unregisterAsNestedChild: React$PropType$Primitive<Function>,\n      |} = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext(): {|\n    virtualizedList: {\n      getScrollMetrics: () => {\n        contentLength: number,\n        dOffset: number,\n        dt: number,\n        offset: number,\n        timestamp: number,\n        velocity: number,\n        visibleLength: number,\n      },\n      horizontal: ?boolean,\n      getOutermostParentListRef: Function,\n      getNestedChildState: string => ?ChildListState,\n      registerAsNestedChild: ({\n        cellKey: string,\n        key: string,\n        ref: VirtualizedList,\n      }) => ?ChildListState,\n      unregisterAsNestedChild: ({\n        key: string,\n        state: ChildListState,\n      }) => void,\n    },\n  |} {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.',\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this.props.listKey || this._getCellKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(\n            inversionStyle,\n            element.props.style,\n          ),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-footer'}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n    };\n    if (inversionStyle) {\n      /* $FlowFixMe(>=0.70.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.70 was deployed. To see the error delete\n       * this comment and run Flow. */\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal === !this.props.horizontal &&\n              !this._hasWarned.nesting &&\n              this.context.virtualizedList == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.warn(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation - use another VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true;\n\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDataChangedSinceEndReached = true;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {ref: ?VirtualizedList, state: ?ChildListState},\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.virtualizedList\n          .getOutermostParentListRef()\n          .getScrollRef()\n          .getNativeScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.virtualizedList.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _onLayoutFooter = e => {\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(metrics: $ReadOnly<{height: number, width: number}>): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics: $ReadOnly<{x: number, y: number}>): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      distanceFromEnd < onEndReachedThreshold * visibleLength &&\n      (this._hasDataChangedSinceEndReached ||\n        this._scrollMetrics.contentLength !== this._sentEndForContentLength)\n    ) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (this._scrollMetrics.visibleLength) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const {contentLength, offset, visibleLength} = this._scrollMetrics;\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {length: number, offset: number} => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<*>,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  onLayout: (event: Object) => void, // This is extracted by ScrollViewStickyHeader\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    getItemLayout?: ?Function,\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  },\n  prevCellKey: ?string,\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.89 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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"}