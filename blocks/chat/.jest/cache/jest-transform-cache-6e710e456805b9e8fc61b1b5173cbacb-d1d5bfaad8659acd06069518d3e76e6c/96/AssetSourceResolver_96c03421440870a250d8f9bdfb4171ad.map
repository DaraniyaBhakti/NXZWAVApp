{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","PixelRatio","Platform","assetPathUtils","invariant","getScaledAssetPath","asset","scale","AssetSourceResolver","pickScale","scales","get","scaleSuffix","assetDir","getBasePath","name","type","getAssetPathInDrawableFolder","drawbleFolder","getAndroidResourceFolderName","fileName","getAndroidResourceIdentifier","serverUrl","jsbundleUrl","default","key","value","isLoadedFromServer","isLoadedFromFileSystem","startsWith","defaultAsset","assetServerURL","OS","drawableFolderInBundle","resourceIdentifierWithoutScale","scaledAssetURLNearBundle","fromSource","hash","scaledAssetPath","path","source","__packager_asset","width","height","uri","deviceScale","i","length","module","exports"],"sources":["AssetSourceResolver.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nexport type ResolvedAssetSource = {|\n  +__packager_asset: boolean,\n  +width: ?number,\n  +height: ?number,\n  +uri: string,\n  +scale: number,\n|};\n\nimport type {PackagerAsset} from './AssetRegistry';\n\nconst PixelRatio = require('../Utilities/PixelRatio');\nconst Platform = require('../Utilities/Platform');\n\nconst assetPathUtils = require('./assetPathUtils');\nconst invariant = require('invariant');\n\n/**\n * Returns a path like 'assets/AwesomeModule/icon@2x.png'\n */\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = assetPathUtils.getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\n/**\n * Returns a path like 'drawable-mdpi/icon.png'\n */\nfunction getAssetPathInDrawableFolder(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const drawbleFolder = assetPathUtils.getAndroidResourceFolderName(\n    asset,\n    scale,\n  );\n  const fileName = assetPathUtils.getAndroidResourceIdentifier(asset);\n  return drawbleFolder + '/' + fileName + '.' + asset.type;\n}\n\nclass AssetSourceResolver {\n  serverUrl: ?string;\n  // where the jsbundle is being run from\n  jsbundleUrl: ?string;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(serverUrl: ?string, jsbundleUrl: ?string, asset: PackagerAsset) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    if (Platform.OS === 'android') {\n      return this.isLoadedFromFileSystem()\n        ? this.drawableFolderInBundle()\n        : this.resourceIdentifierWithoutScale();\n    } else {\n      return this.scaledAssetURLNearBundle();\n    }\n  }\n\n  /**\n   * Returns an absolute URL which can be used to fetch the asset\n   * from the devserver\n   */\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash,\n    );\n  }\n\n  /**\n   * Resolves to just the scaled asset filename\n   * E.g. 'assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n\n  /**\n   * Resolves to where the bundle is running from, with a scaled asset filename\n   * E.g. 'file:///sdcard/bundle/assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n\n  /**\n   * The default location of assets bundled with the app, located by\n   * resource identifier\n   * The Android resource system picks the correct scale.\n   * E.g. 'assets_awesomemodule_icon'\n   */\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    invariant(\n      Platform.OS === 'android',\n      'resource identifiers work on Android',\n    );\n    return this.fromSource(\n      assetPathUtils.getAndroidResourceIdentifier(this.asset),\n    );\n  }\n\n  /**\n   * If the jsbundle is running from a sideload location, this resolves assets\n   * relative to its location\n   * E.g. 'file:///sdcard/AwesomeModule/drawable-mdpi/icon.png'\n   */\n  drawableFolderInBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale(scales: Array<number>, deviceScale: number): number {\n    // Packager guarantees that `scales` array is sorted\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n\n    // If nothing matches, device scale is larger than any available\n    // scales, so we return the biggest one. Unless the array is empty,\n    // in which case we default to 1\n    return scales[scales.length - 1] || 1;\n  }\n}\n\nmodule.exports = AssetSourceResolver;\n"],"mappings":"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"}