{"version":3,"names":["_times","_interopRequireDefault","require","_react","_interopRequireWildcard","_propTypes","_reactNative","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","STAR_IMAGE","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","_Component","_inherits2","_super","props","_this","_classCallCheck2","_this$props","onStartRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","event","gesture","newPosition","setValue","x","dx","y","setState","value","onPanResponderRelease","rating","getCurrentRating","state","minValue","setCurrentRating","display","_createClass2","componentDidMount","_STAR_IMAGE","_HEART_IMAGE","_ROCKET_IMAGE","_BELL_IMAGE","_regenerator","async","componentDidMount$","_context","prev","next","awrap","sent","t0","console","log","startingValue","stop","Promise","componentDidUpdate","prevProps","getPrimaryViewStyle","_this$props2","imageSize","ratingCount","type","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","getSecondaryViewStyle","_this$props3","renderRatings","_this$props4","tintColor","times","index","createElement","View","style","styles","starContainer","Image","_this$props5","currentRating","Math","ceil","toFixed","_this$props6","initialRating","displayCurrentRating","_this$props7","readonly","ratingTextColor","showRatingView","ratingView","Text","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","_this$props8","ratingImage","ratingColor","ratingBackgroundColor","showRating","custom","pointerEvents","_extends2","starsWrapper","panHandlers","starsInsideWrapper","Component","exports","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","PropTypes","string","number","func","bool","ViewPropTypes"],"sources":["SwipeRating.js"],"sourcesContent":["import times from 'lodash/times';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { \n  View, Text, Animated, PanResponder, Image, \n  StyleSheet, Platform, ViewPropTypes\n} from 'react-native';\n\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require('./images/star.png');\nconst HEART_IMAGE = require('./images/heart.png');\nconst ROCKET_IMAGE = require('./images/rocket.png');\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nexport default class SwipeRating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: require('./images/star.png'),\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    imageSize: 40,\n    onFinishRating: () => console.log('Attach a onFinishRating function here.'),\n    minValue: 0\n  };\n\n  constructor(props) {\n    super(props);\n    const { onStartRating, onFinishRating, fractions } = this.props;\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: gesture.dx, y: 0 });\n        this.setState({ position: newPosition, value: gesture.dx });\n      },\n      onPanResponderRelease: event => {\n        const rating = this.getCurrentRating(this.state.value);\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating(rating);\n          }\n          onFinishRating(rating);\n        }\n      }\n    });\n\n    this.state = { panResponder, position, display: false };\n  }\n\n  async componentDidMount() {\n    try {\n      const STAR_IMAGE = await require('./images/star.png');\n      const HEART_IMAGE = await require('./images/heart.png');\n      const ROCKET_IMAGE = await require('./images/rocket.png');\n      const BELL_IMAGE = await require('./images/bell.png');\n\n      this.setState({ display: true })\n    } catch(err) {\n      console.log(err)\n    }\n\n    this.setCurrentRating(this.props.startingValue);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const color = TYPES[type].color;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, (ratingCount * imageSize) / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const backgroundColor = TYPES[type].backgroundColor;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, (ratingCount * imageSize) / 2, 0],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type, tintColor } = this.props;\n    const source = TYPES[type].source;\n\n    return times(ratingCount, index => (\n      <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\n      </View>\n    ));\n  }\n\n  getCurrentRating(value) {\n    // const { value } = this.state;\n    const { fractions, imageSize, ratingCount } = this.props;\n\n    const startingValue = ratingCount / 2;\n    let currentRating = (this.props.minValue) ? this.props.minValue : 0;\n\n    if (value > (ratingCount * imageSize) / 2) {\n      currentRating = ratingCount;\n    } else if (value < (-ratingCount * imageSize) / 2) {\n      currentRating = (this.props.minValue) ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    const { imageSize, ratingCount } = this.props;\n\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = (ratingCount * imageSize) / 2;\n    } else if (rating < 0) {\n      value = (-ratingCount * imageSize) / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({ x: value, y: 0 });\n    this.setState({ position: newPosition, value });\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly, ratingTextColor } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating(this.state.value)}</Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>{readonly && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n\n    return (\n      this.state.display ?\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n      null\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20\n        ? null\n        : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n    }\n\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  readonly: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAC,uBAAA,CAAAF,OAAA;AACA,IAAAG,UAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAEA,IAAAI,YAAA,GAAAJ,OAAA;AAGsB,SAAAK,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAJ,wBAAAQ,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAW,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAArB,OAAA,EAAAgB,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,OAAAF,gBAAA,CAAArB,OAAA,QAAAwB,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAQ,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAA7B,OAAA,QAAAsB,MAAA;AAAA,SAAAJ,0BAAA,eAAAO,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAtB,SAAA,CAAAuB,OAAA,CAAArB,IAAA,CAAAa,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAE,CAAA;AAGtB,IAAMC,UAAU,GAAG/C,OAAO,CAAC,mBAAmB,CAAC;AAC/C,IAAMgD,WAAW,GAAGhD,OAAO,CAAC,oBAAoB,CAAC;AACjD,IAAMiD,YAAY,GAAGjD,OAAO,CAAC,qBAAqB,CAAC;AACnD,IAAMkD,UAAU,GAAGlD,OAAO,CAAC,mBAAmB,CAAC;AAE/C,IAAMmD,KAAK,GAAG;EACZC,IAAI,EAAE;IACJC,MAAM,EAAEN,UAAU;IAClBO,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB,CAAC;EACDC,KAAK,EAAE;IACLH,MAAM,EAAEL,WAAW;IACnBM,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB,CAAC;EACDE,MAAM,EAAE;IACNJ,MAAM,EAAEJ,YAAY;IACpBK,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB,CAAC;EACDG,IAAI,EAAE;IACJL,MAAM,EAAEH,UAAU;IAClBI,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE;EACnB;AACF,CAAC;AAAC,IAEmBI,WAAW,aAAAC,UAAA;EAAA,IAAAC,UAAA,CAAAjD,OAAA,EAAA+C,WAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAnC,YAAA,CAAAgC,WAAA;EAY9B,SAAAA,YAAYI,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAA,IAAAC,gBAAA,CAAArD,OAAA,QAAA+C,WAAA;IACjBK,KAAA,GAAAF,MAAA,CAAAtC,IAAA,OAAMuC,KAAK;IACX,IAAAG,WAAA,GAAqDF,KAAA,CAAKD,KAAK;MAAvDI,aAAa,GAAAD,WAAA,CAAbC,aAAa;MAAEC,cAAc,GAAAF,WAAA,CAAdE,cAAc;MAAEC,SAAS,GAAAH,WAAA,CAATG,SAAS;IAChD,IAAMC,QAAQ,GAAG,IAAIC,qBAAQ,CAACC,OAAO,CAAC,CAAC;IAEvC,IAAMC,YAAY,GAAGC,yBAAY,CAACC,MAAM,CAAC;MACvCC,4BAA4B,EAAE,SAAAA,6BAAA;QAAA,OAAM,IAAI;MAAA;MACxCC,mBAAmB,EAAE,SAAAA,oBAAA,EAAM;QACzB,IAAI,OAAOV,aAAa,KAAK,UAAU,EAAE;UACvCA,aAAa,CAAC,CAAC;QACjB;MACF,CAAC;MACDW,kBAAkB,EAAE,SAAAA,mBAACC,KAAK,EAAEC,OAAO,EAAK;QACtC,IAAMC,WAAW,GAAG,IAAIV,qBAAQ,CAACC,OAAO,CAAC,CAAC;QAC1CS,WAAW,CAACC,QAAQ,CAAC;UAAEC,CAAC,EAAEH,OAAO,CAACI,EAAE;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC;QAC7CrB,KAAA,CAAKsB,QAAQ,CAAC;UAAEhB,QAAQ,EAAEW,WAAW;UAAEM,KAAK,EAAEP,OAAO,CAACI;QAAG,CAAC,CAAC;MAC7D,CAAC;MACDI,qBAAqB,EAAE,SAAAA,sBAAAT,KAAK,EAAI;QAC9B,IAAMU,MAAM,GAAGzB,KAAA,CAAK0B,gBAAgB,CAAC1B,KAAA,CAAK2B,KAAK,CAACJ,KAAK,CAAC;QACtD,IAAIE,MAAM,IAAIzB,KAAA,CAAKD,KAAK,CAAC6B,QAAQ,EAAE;UACjC,IAAI,CAACvB,SAAS,EAAE;YAEdL,KAAA,CAAK6B,gBAAgB,CAACJ,MAAM,CAAC;UAC/B;UACArB,cAAc,CAACqB,MAAM,CAAC;QACxB;MACF;IACF,CAAC,CAAC;IAEFzB,KAAA,CAAK2B,KAAK,GAAG;MAAElB,YAAY,EAAZA,YAAY;MAAEH,QAAQ,EAARA,QAAQ;MAAEwB,OAAO,EAAE;IAAM,CAAC;IAAC,OAAA9B,KAAA;EAC1D;EAAC,IAAA+B,aAAA,CAAAnF,OAAA,EAAA+C,WAAA;IAAAtC,GAAA;IAAAkE,KAAA,EAED,SAAAS,kBAAA;MAAA,IAAAC,WAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,WAAA;MAAA,OAAAC,YAAA,CAAAzF,OAAA,CAAA0F,KAAA,UAAAC,mBAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAAAL,YAAA,CAAAzF,OAAA,CAAA+F,KAAA,CAE6B3G,OAAO,CAAC,mBAAmB,CAAC;UAAA;YAA/C+C,WAAU,GAAAyD,QAAA,CAAAI,IAAA;YAAAJ,QAAA,CAAAE,IAAA;YAAA,OAAAL,YAAA,CAAAzF,OAAA,CAAA+F,KAAA,CACU3G,OAAO,CAAC,oBAAoB,CAAC;UAAA;YAAjDgD,YAAW,GAAAwD,QAAA,CAAAI,IAAA;YAAAJ,QAAA,CAAAE,IAAA;YAAA,OAAAL,YAAA,CAAAzF,OAAA,CAAA+F,KAAA,CACU3G,OAAO,CAAC,qBAAqB,CAAC;UAAA;YAAnDiD,aAAY,GAAAuD,QAAA,CAAAI,IAAA;YAAAJ,QAAA,CAAAE,IAAA;YAAA,OAAAL,YAAA,CAAAzF,OAAA,CAAA+F,KAAA,CACO3G,OAAO,CAAC,mBAAmB,CAAC;UAAA;YAA/CkD,WAAU,GAAAsD,QAAA,CAAAI,IAAA;YAEhB,IAAI,CAACtB,QAAQ,CAAC;cAAEQ,OAAO,EAAE;YAAK,CAAC,CAAC;YAAAU,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAK,EAAA,GAAAL,QAAA;YAEhCM,OAAO,CAACC,GAAG,CAAAP,QAAA,CAAAK,EAAI,CAAC;UAAA;YAGlB,IAAI,CAAChB,gBAAgB,CAAC,IAAI,CAAC9B,KAAK,CAACiD,aAAa,CAAC;UAAC;UAAA;YAAA,OAAAR,QAAA,CAAAS,IAAA;QAAA;MAAA,0BAAAC,OAAA;IAAA;EACjD;IAAA7F,GAAA;IAAAkE,KAAA,EAED,SAAA4B,mBAAmBC,SAAS,EAAE;MAC5B,IAAI,IAAI,CAACrD,KAAK,CAACiD,aAAa,KAAKI,SAAS,CAACJ,aAAa,EAAE;QACxD,IAAI,CAACnB,gBAAgB,CAAC,IAAI,CAAC9B,KAAK,CAACiD,aAAa,CAAC;MACjD;IACF;EAAC;IAAA3F,GAAA;IAAAkE,KAAA,EAED,SAAA8B,oBAAA,EAAsB;MACpB,IAAQ/C,QAAQ,GAAK,IAAI,CAACqB,KAAK,CAAvBrB,QAAQ;MAChB,IAAAgD,YAAA,GAAyC,IAAI,CAACvD,KAAK;QAA3CwD,SAAS,GAAAD,YAAA,CAATC,SAAS;QAAEC,WAAW,GAAAF,YAAA,CAAXE,WAAW;QAAEC,IAAI,GAAAH,YAAA,CAAJG,IAAI;MAEpC,IAAMnE,KAAK,GAAGH,KAAK,CAACsE,IAAI,CAAC,CAACnE,KAAK;MAE/B,IAAMoE,KAAK,GAAGpD,QAAQ,CAACa,CAAC,CAACwC,WAAW,CAClC;QACEC,UAAU,EAAE,CAAC,CAACJ,WAAW,IAAID,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEC,WAAW,IAAID,SAAS,GAAG,CAAC,CAAC,CAAC;QAC9EM,WAAW,EAAE,CAAC,CAAC,EAAGL,WAAW,GAAGD,SAAS,GAAI,CAAC,EAAEC,WAAW,GAAGD,SAAS,CAAC;QACxEO,WAAW,EAAE;MACf,CAAC,EACD;QACEC,eAAe,EAAE;MACnB,CACF,CAAC;MAED,OAAO;QACLxE,eAAe,EAAED,KAAK;QACtBoE,KAAK,EAALA,KAAK;QACLM,MAAM,EAAEN,KAAK,GAAGH,SAAS,GAAG;MAC9B,CAAC;IACH;EAAC;IAAAlG,GAAA;IAAAkE,KAAA,EAED,SAAA0C,sBAAA,EAAwB;MACtB,IAAQ3D,QAAQ,GAAK,IAAI,CAACqB,KAAK,CAAvBrB,QAAQ;MAChB,IAAA4D,YAAA,GAAyC,IAAI,CAACnE,KAAK;QAA3CwD,SAAS,GAAAW,YAAA,CAATX,SAAS;QAAEC,WAAW,GAAAU,YAAA,CAAXV,WAAW;QAAEC,IAAI,GAAAS,YAAA,CAAJT,IAAI;MAEpC,IAAMlE,eAAe,GAAGJ,KAAK,CAACsE,IAAI,CAAC,CAAClE,eAAe;MAEnD,IAAMmE,KAAK,GAAGpD,QAAQ,CAACa,CAAC,CAACwC,WAAW,CAClC;QACEC,UAAU,EAAE,CAAC,CAACJ,WAAW,IAAID,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEC,WAAW,IAAID,SAAS,GAAG,CAAC,CAAC,CAAC;QAC9EM,WAAW,EAAE,CAACL,WAAW,GAAGD,SAAS,EAAGC,WAAW,GAAGD,SAAS,GAAI,CAAC,EAAE,CAAC,CAAC;QACxEO,WAAW,EAAE;MACf,CAAC,EACD;QACEC,eAAe,EAAE;MACnB,CACF,CAAC;MAED,OAAO;QACLxE,eAAe,EAAfA,eAAe;QACfmE,KAAK,EAALA,KAAK;QACLM,MAAM,EAAEN,KAAK,GAAGH,SAAS,GAAG;MAC9B,CAAC;IACH;EAAC;IAAAlG,GAAA;IAAAkE,KAAA,EAED,SAAA4C,cAAA,EAAgB;MACd,IAAAC,YAAA,GAAoD,IAAI,CAACrE,KAAK;QAAtDwD,SAAS,GAAAa,YAAA,CAATb,SAAS;QAAEC,WAAW,GAAAY,YAAA,CAAXZ,WAAW;QAAEC,IAAI,GAAAW,YAAA,CAAJX,IAAI;QAAEY,SAAS,GAAAD,YAAA,CAATC,SAAS;MAC/C,IAAMhF,MAAM,GAAGF,KAAK,CAACsE,IAAI,CAAC,CAACpE,MAAM;MAEjC,OAAO,IAAAiF,cAAK,EAACd,WAAW,EAAE,UAAAe,KAAK;QAAA,OAC7BtI,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAqI,IAAI;UAACpH,GAAG,EAAEkH,KAAM;UAACG,KAAK,EAAEC,MAAM,CAACC;QAAc,GAC5C3I,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAyI,KAAK;UAACxF,MAAM,EAAEA,MAAO;UAACqF,KAAK,EAAE;YAAEhB,KAAK,EAAEH,SAAS;YAAES,MAAM,EAAET,SAAS;YAAEc,SAAS,EAATA;UAAU;QAAE,CAAE,CAC/E,CAAC;MAAA,CACR,CAAC;IACJ;EAAC;IAAAhH,GAAA;IAAAkE,KAAA,EAED,SAAAG,iBAAiBH,KAAK,EAAE;MAEtB,IAAAuD,YAAA,GAA8C,IAAI,CAAC/E,KAAK;QAAhDM,SAAS,GAAAyE,YAAA,CAATzE,SAAS;QAAEkD,SAAS,GAAAuB,YAAA,CAATvB,SAAS;QAAEC,WAAW,GAAAsB,YAAA,CAAXtB,WAAW;MAEzC,IAAMR,aAAa,GAAGQ,WAAW,GAAG,CAAC;MACrC,IAAIuB,aAAa,GAAI,IAAI,CAAChF,KAAK,CAAC6B,QAAQ,GAAI,IAAI,CAAC7B,KAAK,CAAC6B,QAAQ,GAAG,CAAC;MAEnE,IAAIL,KAAK,GAAIiC,WAAW,GAAGD,SAAS,GAAI,CAAC,EAAE;QACzCwB,aAAa,GAAGvB,WAAW;MAC7B,CAAC,MAAM,IAAIjC,KAAK,GAAI,CAACiC,WAAW,GAAGD,SAAS,GAAI,CAAC,EAAE;QACjDwB,aAAa,GAAI,IAAI,CAAChF,KAAK,CAAC6B,QAAQ,GAAI,IAAI,CAAC7B,KAAK,CAAC6B,QAAQ,GAAG,CAAC;MACjE,CAAC,MAAM,IAAIL,KAAK,IAAIgC,SAAS,IAAIhC,KAAK,GAAGgC,SAAS,EAAE;QAClDwB,aAAa,GAAG/B,aAAa,GAAGzB,KAAK,GAAGgC,SAAS;QACjDwB,aAAa,GAAG,CAAC1E,SAAS,GAAG2E,IAAI,CAACC,IAAI,CAACF,aAAa,CAAC,GAAG,CAACA,aAAa,CAACG,OAAO,CAAC7E,SAAS,CAAC;MAC3F,CAAC,MAAM;QACL0E,aAAa,GAAG,CAAC1E,SAAS,GAAG2E,IAAI,CAACC,IAAI,CAACjC,aAAa,CAAC,GAAG,CAACA,aAAa,CAACkC,OAAO,CAAC7E,SAAS,CAAC;MAC3F;MAEA,OAAO0E,aAAa;IACtB;EAAC;IAAA1H,GAAA;IAAAkE,KAAA,EAED,SAAAM,iBAAiBJ,MAAM,EAAE;MACvB,IAAA0D,YAAA,GAAmC,IAAI,CAACpF,KAAK;QAArCwD,SAAS,GAAA4B,YAAA,CAAT5B,SAAS;QAAEC,WAAW,GAAA2B,YAAA,CAAX3B,WAAW;MAI9B,IAAM4B,aAAa,GAAG5B,WAAW,GAAG,CAAC;MACrC,IAAIjC,KAAK,GAAG,IAAI;MAEhB,IAAIE,MAAM,GAAG+B,WAAW,EAAE;QACxBjC,KAAK,GAAIiC,WAAW,GAAGD,SAAS,GAAI,CAAC;MACvC,CAAC,MAAM,IAAI9B,MAAM,GAAG,CAAC,EAAE;QACrBF,KAAK,GAAI,CAACiC,WAAW,GAAGD,SAAS,GAAI,CAAC;MACxC,CAAC,MAAM,IAAI9B,MAAM,GAAG+B,WAAW,GAAG,CAAC,IAAI/B,MAAM,GAAG+B,WAAW,GAAG,CAAC,EAAE;QAC/DjC,KAAK,GAAG,CAACE,MAAM,GAAG2D,aAAa,IAAI7B,SAAS;MAC9C,CAAC,MAAM;QACLhC,KAAK,GAAG,CAAC;MACX;MAEA,IAAMN,WAAW,GAAG,IAAIV,qBAAQ,CAACC,OAAO,CAAC,CAAC;MAC1CS,WAAW,CAACC,QAAQ,CAAC;QAAEC,CAAC,EAAEI,KAAK;QAAEF,CAAC,EAAE;MAAE,CAAC,CAAC;MACxC,IAAI,CAACC,QAAQ,CAAC;QAAEhB,QAAQ,EAAEW,WAAW;QAAEM,KAAK,EAALA;MAAM,CAAC,CAAC;IACjD;EAAC;IAAAlE,GAAA;IAAAkE,KAAA,EAED,SAAA8D,qBAAA,EAAuB;MACrB,IAAAC,YAAA,GAAyD,IAAI,CAACvF,KAAK;QAA3DyD,WAAW,GAAA8B,YAAA,CAAX9B,WAAW;QAAEC,IAAI,GAAA6B,YAAA,CAAJ7B,IAAI;QAAE8B,QAAQ,GAAAD,YAAA,CAARC,QAAQ;QAAEC,eAAe,GAAAF,YAAA,CAAfE,eAAe;MACpD,IAAMlG,KAAK,GAAGkG,eAAe,IAAIrG,KAAK,CAACsE,IAAI,CAAC,CAACnE,KAAK;MAElD,OACErD,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAqI,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACc;MAAe,GACjCxJ,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAqI,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACe;MAAW,GAC7BzJ,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAuJ,IAAI;QAACjB,KAAK,EAAE,CAACC,MAAM,CAACiB,UAAU,EAAE;UAAEtG,KAAK,EAALA;QAAM,CAAC;MAAE,GAAC,SAAO,EAAC,GAAU,CAAC,EAChErD,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAuJ,IAAI;QAACjB,KAAK,EAAE,CAACC,MAAM,CAACkB,iBAAiB,EAAE;UAAEvG,KAAK,EAALA;QAAM,CAAC;MAAE,GAAE,IAAI,CAACoC,gBAAgB,CAAC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAQ,CAAC,EACpGtF,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAuJ,IAAI;QAACjB,KAAK,EAAE,CAACC,MAAM,CAACmB,aAAa,EAAE;UAAExG,KAAK,EAALA;QAAM,CAAC;MAAE,GAAC,GAAC,EAACkE,WAAkB,CAChE,CAAC,EACPvH,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAqI,IAAI,QAAEc,QAAQ,IAAItJ,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAuJ,IAAI;QAACjB,KAAK,EAAE,CAACC,MAAM,CAACoB,aAAa,EAAE;UAAEzG,KAAK,EAALA;QAAM,CAAC;MAAE,GAAC,YAAgB,CAAQ,CACvF,CAAC;IAEX;EAAC;IAAAjC,GAAA;IAAAkE,KAAA,EAED,SAAAyE,OAAA,EAAS;MACP,IAAAC,YAAA,GAA+F,IAAI,CAAClG,KAAK;QAAjGwF,QAAQ,GAAAU,YAAA,CAARV,QAAQ;QAAE9B,IAAI,GAAAwC,YAAA,CAAJxC,IAAI;QAAEyC,WAAW,GAAAD,YAAA,CAAXC,WAAW;QAAEC,WAAW,GAAAF,YAAA,CAAXE,WAAW;QAAEC,qBAAqB,GAAAH,YAAA,CAArBG,qBAAqB;QAAE1B,KAAK,GAAAuB,YAAA,CAALvB,KAAK;QAAE2B,UAAU,GAAAJ,YAAA,CAAVI,UAAU;MAE1F,IAAI5C,IAAI,KAAK,QAAQ,EAAE;QACrB,IAAI6C,MAAM,GAAG;UACXjH,MAAM,EAAE6G,WAAW;UACnB5G,KAAK,EAAE6G,WAAW;UAClB5G,eAAe,EAAE6G;QACnB,CAAC;QACDjH,KAAK,CAACmH,MAAM,GAAGA,MAAM;MACvB;MAEA,OACE,IAAI,CAAC3E,KAAK,CAACG,OAAO,GAClB7F,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAqI,IAAI;QAAC8B,aAAa,EAAEhB,QAAQ,GAAG,MAAM,GAAG,MAAO;QAACb,KAAK,EAAEA;MAAM,GAC3D2B,UAAU,IAAI,IAAI,CAAChB,oBAAoB,CAAC,CAAC,EAC1CpJ,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAqI,IAAI,MAAA+B,SAAA,CAAA5J,OAAA;QAAC8H,KAAK,EAAEC,MAAM,CAAC8B;MAAa,GAAK,IAAI,CAAC9E,KAAK,CAAClB,YAAY,CAACiG,WAAW,GACvEzK,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAqI,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACgC;MAAmB,GACrC1K,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAmE,QAAQ,CAACkE,IAAI;QAACC,KAAK,EAAE,IAAI,CAACrB,mBAAmB,CAAC;MAAE,CAAE,CAAC,EACpDpH,MAAA,CAAAW,OAAA,CAAA4H,aAAA,CAACpI,YAAA,CAAAmE,QAAQ,CAACkE,IAAI;QAACC,KAAK,EAAE,IAAI,CAACT,qBAAqB,CAAC;MAAE,CAAE,CACjD,CAAC,EACN,IAAI,CAACE,aAAa,CAAC,CAChB,CACF,CAAC,GACP,IAAI;IAER;EAAC;EAAA,OAAAxE,WAAA;AAAA,EAlNsCiH,gBAAS;AAAAC,OAAA,CAAAjK,OAAA,GAAA+C,WAAA;AAA7BA,WAAW,CACvBmH,YAAY,GAAG;EACpBrD,IAAI,EAAE,MAAM;EACZyC,WAAW,EAAElK,OAAO,CAAC,mBAAmB,CAAC;EACzCmK,WAAW,EAAE,SAAS;EACtBC,qBAAqB,EAAE,OAAO;EAC9B5C,WAAW,EAAE,CAAC;EACdD,SAAS,EAAE,EAAE;EACbnD,cAAc,EAAE,SAAAA,eAAA;IAAA,OAAM0C,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EAAA;EAC3EnB,QAAQ,EAAE;AACZ,CAAC;AA2MH,IAAM+C,MAAM,GAAGoC,uBAAU,CAACpG,MAAM,CAAC;EAC/B8F,YAAY,EAAE;IACZO,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDP,kBAAkB,EAAE;IAClBrG,QAAQ,EAAE,UAAU;IACpB6G,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTN,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDzB,cAAc,EAAE;IACduB,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,aAAa,EAAE;EACjB,CAAC;EACD7B,UAAU,EAAE;IACVsB,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,aAAa,EAAE;EACjB,CAAC;EACD3B,UAAU,EAAE;IACV4B,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG,IAAI;IACzDtI,KAAK,EAAE;EACT,CAAC;EACDyG,aAAa,EAAE;IACbkB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBM,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG,IAAI;IACzDtI,KAAK,EAAE;EACT,CAAC;EACDuG,iBAAiB,EAAE;IACjB2B,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG;EACvD,CAAC;EACD9B,aAAa,EAAE;IACb0B,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAEC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,cAAc,GAAG,IAAI;IACzDtI,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,IAAMuI,aAAa,GAAG,SAAhBA,aAAaA,CAAI9H,KAAK,EAAE+H,QAAQ,EAAEC,aAAa,EAAK;EACxD,IAAIhI,KAAK,CAAC+H,QAAQ,CAAC,EAAE;IACnB,IAAMvG,KAAK,GAAGxB,KAAK,CAAC+H,QAAQ,CAAC;IAC7B,IAAI,OAAOvG,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,EAAE,GAC5B,IAAI,GACJ,IAAIyG,KAAK,OAAMF,QAAQ,cAAWC,aAAa,+BAA6B,CAAC;IACnF;IAEA,OAAO,IAAIC,KAAK,OAAMF,QAAQ,cAAWC,aAAa,uBAAqB,CAAC;EAC9E;AACF,CAAC;AAEDpI,WAAW,CAACsI,SAAS,GAAG;EACtBxE,IAAI,EAAEyE,kBAAS,CAACC,MAAM;EACtBjC,WAAW,EAAErB,kBAAK,CAACoD,SAAS,CAAC5I,MAAM;EACnC8G,WAAW,EAAE+B,kBAAS,CAACC,MAAM;EAC7B/B,qBAAqB,EAAE8B,kBAAS,CAACC,MAAM;EACvC3E,WAAW,EAAE0E,kBAAS,CAACE,MAAM;EAC7B5C,eAAe,EAAE0C,kBAAS,CAACC,MAAM;EACjC5E,SAAS,EAAE2E,kBAAS,CAACE,MAAM;EAC3BjI,aAAa,EAAE+H,kBAAS,CAACG,IAAI;EAC7BjI,cAAc,EAAE8H,kBAAS,CAACG,IAAI;EAC9BhC,UAAU,EAAE6B,kBAAS,CAACI,IAAI;EAC1B5D,KAAK,EAAE6D,0BAAa,CAAC7D,KAAK;EAC1Ba,QAAQ,EAAE2C,kBAAS,CAACI,IAAI;EACxBtF,aAAa,EAAEkF,kBAAS,CAACE,MAAM;EAC/B/H,SAAS,EAAEwH,aAAa;EACxBjG,QAAQ,EAAEsG,kBAAS,CAACE;AACtB,CAAC"}