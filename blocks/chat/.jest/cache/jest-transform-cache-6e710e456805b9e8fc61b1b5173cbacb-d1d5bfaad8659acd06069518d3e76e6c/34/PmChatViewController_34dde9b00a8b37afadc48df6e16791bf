ebcbc6043a2d43c987cd4658316bef96
"use strict";

/* istanbul ignore next */
function cov_v6udidbdo() {
  var path = "/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/PmChatViewController.tsx";
  var hash = "3eea1f6396d4cd0ddd179ec0151c695654d18694";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/PmChatViewController.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 89
        }
      },
      "4": {
        start: {
          line: 4,
          column: 71
        },
        end: {
          line: 4,
          column: 83
        }
      },
      "5": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "6": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "7": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 17
        }
      },
      "8": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 13,
          column: 2
        }
      },
      "9": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 72
        }
      },
      "10": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 21
        }
      },
      "11": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "12": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "13": {
        start: {
          line: 15,
          column: 31
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "14": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "15": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "16": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "17": {
        start: {
          line: 17,
          column: 40
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "18": {
        start: {
          line: 17,
          column: 99
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "19": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "20": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 18
        }
      },
      "21": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "22": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 110
        }
      },
      "23": {
        start: {
          line: 22,
          column: 91
        },
        end: {
          line: 22,
          column: 106
        }
      },
      "24": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "25": {
        start: {
          line: 24,
          column: 36
        },
        end: {
          line: 24,
          column: 97
        }
      },
      "26": {
        start: {
          line: 24,
          column: 42
        },
        end: {
          line: 24,
          column: 70
        }
      },
      "27": {
        start: {
          line: 24,
          column: 85
        },
        end: {
          line: 24,
          column: 95
        }
      },
      "28": {
        start: {
          line: 25,
          column: 35
        },
        end: {
          line: 25,
          column: 100
        }
      },
      "29": {
        start: {
          line: 25,
          column: 41
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "30": {
        start: {
          line: 25,
          column: 88
        },
        end: {
          line: 25,
          column: 98
        }
      },
      "31": {
        start: {
          line: 26,
          column: 32
        },
        end: {
          line: 26,
          column: 116
        }
      },
      "32": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 78
        }
      },
      "33": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "34": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "35": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "36": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "37": {
        start: {
          line: 35,
          column: 18
        },
        end: {
          line: 35,
          column: 59
        }
      },
      "38": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "39": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 90
        }
      },
      "40": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "41": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "42": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 41,
          column: 66
        }
      },
      "43": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 42,
          column: 67
        }
      },
      "44": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "45": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "46": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 21
        }
      },
      "47": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 41
        }
      },
      "48": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "49": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "50": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 27
        }
      },
      "51": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "52": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "53": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "54": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 33
        }
      },
      "55": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "56": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "57": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "58": {
        start: {
          line: 62,
          column: 66
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "59": {
        start: {
          line: 63,
          column: 35
        },
        end: {
          line: 63,
          column: 124
        }
      },
      "60": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 65
        }
      },
      "61": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 168
        }
      },
      "62": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "63": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 70,
          column: 43
        }
      },
      "64": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 59
        }
      },
      "65": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "66": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 133
        }
      },
      "67": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 150
        }
      },
      "68": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 75,
          column: 210
        }
      },
      "69": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 125
        }
      },
      "70": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 117
        }
      },
      "71": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 87
        }
      },
      "72": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 81
        }
      },
      "73": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "74": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 84
        }
      },
      "75": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "76": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "77": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 47
        }
      },
      "78": {
        start: {
          line: 91,
          column: 33
        },
        end: {
          line: 91,
          column: 67
        }
      },
      "79": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 92,
          column: 56
        }
      },
      "80": {
        start: {
          line: 93,
          column: 29
        },
        end: {
          line: 93,
          column: 60
        }
      },
      "81": {
        start: {
          line: 94,
          column: 21
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "82": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "83": {
        start: {
          line: 96,
          column: 22
        },
        end: {
          line: 96,
          column: 42
        }
      },
      "84": {
        start: {
          line: 97,
          column: 23
        },
        end: {
          line: 97,
          column: 44
        }
      },
      "85": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "86": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "87": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 81
        }
      },
      "88": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 57
        }
      },
      "89": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 56
        }
      },
      "90": {
        start: {
          line: 131,
          column: 23
        },
        end: {
          line: 133,
          column: 10
        }
      },
      "91": {
        start: {
          line: 132,
          column: 44
        },
        end: {
          line: 132,
          column: 67
        }
      },
      "92": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "93": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 48
        }
      },
      "94": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 136,
          column: 170
        }
      },
      "95": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 39
        }
      },
      "96": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 138,
          column: 108
        }
      },
      "97": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 57
        }
      },
      "98": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 141,
          column: 88
        }
      },
      "99": {
        start: {
          line: 141,
          column: 61
        },
        end: {
          line: 141,
          column: 79
        }
      },
      "100": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 100
        }
      },
      "101": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 48
        }
      },
      "102": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "103": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 52
        }
      },
      "104": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "105": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "106": {
        start: {
          line: 154,
          column: 41
        },
        end: {
          line: 154,
          column: 129
        }
      },
      "107": {
        start: {
          line: 155,
          column: 37
        },
        end: {
          line: 155,
          column: 128
        }
      },
      "108": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 187,
          column: 17
        }
      },
      "109": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 43
        }
      },
      "110": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 159,
          column: 30
        }
      },
      "111": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 170,
          column: 27
        }
      },
      "112": {
        start: {
          line: 165,
          column: 28
        },
        end: {
          line: 169,
          column: 29
        }
      },
      "113": {
        start: {
          line: 167,
          column: 32
        },
        end: {
          line: 167,
          column: 112
        }
      },
      "114": {
        start: {
          line: 168,
          column: 32
        },
        end: {
          line: 168,
          column: 54
        }
      },
      "115": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 171,
          column: 30
        }
      },
      "116": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 179,
          column: 25
        }
      },
      "117": {
        start: {
          line: 175,
          column: 28
        },
        end: {
          line: 175,
          column: 47
        }
      },
      "118": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 178,
          column: 100
        }
      },
      "119": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 30
        }
      },
      "120": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 61
        }
      },
      "121": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 30
        }
      },
      "122": {
        start: {
          line: 189,
          column: 17
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "123": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 190,
          column: 112
        }
      },
      "124": {
        start: {
          line: 191,
          column: 37
        },
        end: {
          line: 191,
          column: 118
        }
      },
      "125": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 198,
          column: 17
        }
      },
      "126": {
        start: {
          line: 193,
          column: 40
        },
        end: {
          line: 193,
          column: 64
        }
      },
      "127": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 197,
          column: 21
        }
      },
      "128": {
        start: {
          line: 195,
          column: 42
        },
        end: {
          line: 195,
          column: 61
        }
      },
      "129": {
        start: {
          line: 196,
          column: 24
        },
        end: {
          line: 196,
          column: 53
        }
      },
      "130": {
        start: {
          line: 203,
          column: 31
        },
        end: {
          line: 203,
          column: 120
        }
      },
      "131": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 61
        }
      },
      "132": {
        start: {
          line: 205,
          column: 23
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "133": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 129
        }
      },
      "134": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 145
        }
      },
      "135": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 214,
          column: 75
        }
      },
      "136": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 121
        }
      },
      "137": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 77
        }
      },
      "138": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "139": {
        start: {
          line: 220,
          column: 35
        },
        end: {
          line: 220,
          column: 124
        }
      },
      "140": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 67
        }
      },
      "141": {
        start: {
          line: 222,
          column: 27
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "142": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 133
        }
      },
      "143": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 149
        }
      },
      "144": {
        start: {
          line: 227,
          column: 30
        },
        end: {
          line: 230,
          column: 64
        }
      },
      "145": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 125
        }
      },
      "146": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 81
        }
      },
      "147": {
        start: {
          line: 236,
          column: 31
        },
        end: {
          line: 236,
          column: 120
        }
      },
      "148": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 64
        }
      },
      "149": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 164
        }
      },
      "150": {
        start: {
          line: 239,
          column: 23
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "151": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 129
        }
      },
      "152": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 145
        }
      },
      "153": {
        start: {
          line: 245,
          column: 30
        },
        end: {
          line: 245,
          column: 32
        }
      },
      "154": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "155": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 79
        }
      },
      "156": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 79
        }
      },
      "157": {
        start: {
          line: 252,
          column: 26
        },
        end: {
          line: 255,
          column: 77
        }
      },
      "158": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 121
        }
      },
      "159": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 77
        }
      },
      "160": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 260,
          column: 109
        }
      },
      "161": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 264,
          column: 11
        }
      },
      "162": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 27
        }
      },
      "163": {
        start: {
          line: 268,
          column: 0
        },
        end: {
          line: 268,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 5,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 59
          }
        },
        loc: {
          start: {
            line: 4,
            column: 69
          },
          end: {
            line: 4,
            column: 85
          }
        },
        line: 4
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 5,
            column: 6
          },
          end: {
            line: 5,
            column: 7
          }
        },
        loc: {
          start: {
            line: 5,
            column: 28
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 5
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 9,
            column: 80
          },
          end: {
            line: 9,
            column: 81
          }
        },
        loc: {
          start: {
            line: 9,
            column: 95
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 11,
            column: 5
          },
          end: {
            line: 11,
            column: 6
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 14,
            column: 50
          },
          end: {
            line: 14,
            column: 51
          }
        },
        loc: {
          start: {
            line: 14,
            column: 65
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 14
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 45
          }
        },
        loc: {
          start: {
            line: 21,
            column: 89
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 21
      },
      "7": {
        name: "adopt",
        decl: {
          start: {
            line: 22,
            column: 13
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 112
          }
        },
        line: 22
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 22,
            column: 70
          },
          end: {
            line: 22,
            column: 71
          }
        },
        loc: {
          start: {
            line: 22,
            column: 89
          },
          end: {
            line: 22,
            column: 108
          }
        },
        line: 22
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 23,
            column: 36
          },
          end: {
            line: 23,
            column: 37
          }
        },
        loc: {
          start: {
            line: 23,
            column: 63
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 23
      },
      "10": {
        name: "fulfilled",
        decl: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 26
          }
        },
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 24,
            column: 99
          }
        },
        line: 24
      },
      "11": {
        name: "rejected",
        decl: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 25,
            column: 102
          }
        },
        line: 25
      },
      "12": {
        name: "step",
        decl: {
          start: {
            line: 26,
            column: 17
          },
          end: {
            line: 26,
            column: 21
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 118
          }
        },
        line: 26
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 30,
            column: 57
          }
        },
        loc: {
          start: {
            line: 30,
            column: 71
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 30
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 48
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 36
          }
        },
        loc: {
          start: {
            line: 59,
            column: 48
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 59
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 62,
            column: 31
          },
          end: {
            line: 62,
            column: 32
          }
        },
        loc: {
          start: {
            line: 62,
            column: 66
          },
          end: {
            line: 80,
            column: 10
          }
        },
        line: 62
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 62,
            column: 98
          },
          end: {
            line: 62,
            column: 99
          }
        },
        loc: {
          start: {
            line: 62,
            column: 111
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 62
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 82,
            column: 21
          },
          end: {
            line: 82,
            column: 22
          }
        },
        loc: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 84,
            column: 13
          }
        },
        line: 82
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 86,
            column: 35
          },
          end: {
            line: 86,
            column: 36
          }
        },
        loc: {
          start: {
            line: 86,
            column: 41
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 86
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 24
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 130
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 132,
            column: 38
          },
          end: {
            line: 132,
            column: 39
          }
        },
        loc: {
          start: {
            line: 132,
            column: 44
          },
          end: {
            line: 132,
            column: 67
          }
        },
        line: 132
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 134,
            column: 47
          },
          end: {
            line: 134,
            column: 48
          }
        },
        loc: {
          start: {
            line: 134,
            column: 60
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 134
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 141,
            column: 55
          },
          end: {
            line: 141,
            column: 56
          }
        },
        loc: {
          start: {
            line: 141,
            column: 61
          },
          end: {
            line: 141,
            column: 79
          }
        },
        line: 141
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 27
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 146
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 147,
            column: 47
          },
          end: {
            line: 147,
            column: 48
          }
        },
        loc: {
          start: {
            line: 147,
            column: 60
          },
          end: {
            line: 149,
            column: 9
          }
        },
        line: 147
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 151
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 152,
            column: 47
          },
          end: {
            line: 152,
            column: 48
          }
        },
        loc: {
          start: {
            line: 152,
            column: 60
          },
          end: {
            line: 200,
            column: 9
          }
        },
        line: 152
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 164,
            column: 27
          },
          end: {
            line: 164,
            column: 28
          }
        },
        loc: {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 170,
            column: 25
          }
        },
        line: 164
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 18
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 202
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 30
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 218
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 219,
            column: 47
          },
          end: {
            line: 219,
            column: 48
          }
        },
        loc: {
          start: {
            line: 219,
            column: 60
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 219
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 21
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 235
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 36
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 259
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 8,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 8,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 8,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 5,
            column: 1
          }
        }, {
          start: {
            line: 5,
            column: 6
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "4": {
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 13,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 26
          },
          end: {
            line: 9,
            column: 30
          }
        }, {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 57
          }
        }, {
          start: {
            line: 9,
            column: 63
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 9
      },
      "5": {
        loc: {
          start: {
            line: 9,
            column: 63
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 80
          },
          end: {
            line: 11,
            column: 1
          }
        }, {
          start: {
            line: 11,
            column: 5
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 9
      },
      "6": {
        loc: {
          start: {
            line: 14,
            column: 19
          },
          end: {
            line: 20,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 24
          }
        }, {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 14,
            column: 45
          }
        }, {
          start: {
            line: 14,
            column: 50
          },
          end: {
            line: 20,
            column: 1
          }
        }],
        line: 14
      },
      "7": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "8": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 11
          }
        }, {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 29
          }
        }],
        line: 15
      },
      "9": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 131
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 131
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "10": {
        loc: {
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 131
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 131
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "11": {
        loc: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 59
          }
        }, {
          start: {
            line: 17,
            column: 63
          },
          end: {
            line: 17,
            column: 97
          }
        }],
        line: 17
      },
      "12": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 29,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 21,
            column: 21
          }
        }, {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 39
          }
        }, {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 29,
            column: 1
          }
        }],
        line: 21
      },
      "13": {
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 56
          },
          end: {
            line: 22,
            column: 61
          }
        }, {
          start: {
            line: 22,
            column: 64
          },
          end: {
            line: 22,
            column: 109
          }
        }],
        line: 22
      },
      "14": {
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 23,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 23,
            column: 17
          }
        }, {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 33
          }
        }],
        line: 23
      },
      "15": {
        loc: {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 26,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 26,
            column: 67
          }
        }, {
          start: {
            line: 26,
            column: 70
          },
          end: {
            line: 26,
            column: 115
          }
        }],
        line: 26
      },
      "16": {
        loc: {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 61
          }
        }, {
          start: {
            line: 27,
            column: 65
          },
          end: {
            line: 27,
            column: 67
          }
        }],
        line: 27
      },
      "17": {
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 32,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 32,
            column: 1
          }
        }],
        line: 30
      },
      "18": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 31,
            column: 40
          }
        }, {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 61
          }
        }],
        line: 31
      },
      "19": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 15
          }
        }, {
          start: {
            line: 31,
            column: 19
          },
          end: {
            line: 31,
            column: 33
          }
        }],
        line: 31
      },
      "20": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: 189,
            column: 17
          },
          end: {
            line: 199,
            column: 13
          }
        }],
        line: 153
      },
      "21": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 157,
            column: 20
          },
          end: {
            line: 160,
            column: 21
          }
        }, {
          start: {
            line: 161,
            column: 20
          },
          end: {
            line: 172,
            column: 21
          }
        }, {
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 181,
            column: 21
          }
        }, {
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 186,
            column: 21
          }
        }],
        line: 156
      },
      "22": {
        loc: {
          start: {
            line: 163,
            column: 41
          },
          end: {
            line: 163,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 92
          },
          end: {
            line: 163,
            column: 98
          }
        }, {
          start: {
            line: 163,
            column: 101
          },
          end: {
            line: 163,
            column: 118
          }
        }],
        line: 163
      },
      "23": {
        loc: {
          start: {
            line: 163,
            column: 41
          },
          end: {
            line: 163,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 41
          },
          end: {
            line: 163,
            column: 62
          }
        }, {
          start: {
            line: 163,
            column: 66
          },
          end: {
            line: 163,
            column: 89
          }
        }],
        line: 163
      },
      "24": {
        loc: {
          start: {
            line: 165,
            column: 28
          },
          end: {
            line: 169,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 28
          },
          end: {
            line: 169,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "25": {
        loc: {
          start: {
            line: 165,
            column: 32
          },
          end: {
            line: 165,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 32
          },
          end: {
            line: 165,
            column: 58
          }
        }, {
          start: {
            line: 165,
            column: 62
          },
          end: {
            line: 165,
            column: 95
          }
        }],
        line: 165
      },
      "26": {
        loc: {
          start: {
            line: 174,
            column: 24
          },
          end: {
            line: 179,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 24
          },
          end: {
            line: 179,
            column: 25
          }
        }, {
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 179,
            column: 25
          }
        }],
        line: 174
      },
      "27": {
        loc: {
          start: {
            line: 189,
            column: 17
          },
          end: {
            line: 199,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 17
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "28": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "29": {
        loc: {
          start: {
            line: 194,
            column: 20
          },
          end: {
            line: 197,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 20
          },
          end: {
            line: 197,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "30": {
        loc: {
          start: {
            line: 194,
            column: 24
          },
          end: {
            line: 194,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 24
          },
          end: {
            line: 194,
            column: 35
          }
        }, {
          start: {
            line: 194,
            column: 39
          },
          end: {
            line: 194,
            column: 55
          }
        }],
        line: 194
      },
      "31": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: 249,
            column: 13
          },
          end: {
            line: 251,
            column: 9
          }
        }],
        line: 246
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      file: "/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/PmChatViewController.tsx",
      sources: ["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/PmChatViewController.tsx"],
      names: [],
      mappings: "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",
      sourcesContent: ["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\nimport React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport {\n  InputProps\n} from \"@material-ui/core\";\nimport { AsyncStorageKey } from \"../../../components/src/AppGlobals\";\nimport { APIConstant, APIEndPoint, APIRequest } from \"../../../framework/src/AppConstant\";\nimport { getStorageData } from \"../../../framework/src/Utilities\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\n// Customizable Area Start\nexport interface IMessage {\n  id: string;\n  type: \"pm_chat\";\n  attributes: {\n    id: number;\n    points: number;\n    message: PMMessage;\n    is_locked: boolean;\n    image: string | null;\n    is_mark_read: boolean;\n    profile: PMProfile;\n    conversation_id: number;\n  };\n}\n\nexport interface PMProfile {\n  profile_pic: string | null,\n  user_name: string,\n  user_role: string | null\n}\n\nexport interface PMMessage {\n  message: string,\n  created_at: string\n}\nexport interface ReceiveUser {\n  userID: string,\n  userName: string,\n  userRole: string,\n  userPic: string,\n  userPoints: string,\n}\n// Customizable Area End\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  token: string;\n  chatId: number;\n  message: string;\n  accountIdInput: string;\n  accountId: number;\n  isVisiblePreviewModal: boolean;\n  imageUrl: string;\n  muted: boolean | null;\n  messageList: IMessage[];\n  receiverUserID: string;\n  receiverUserName: string;\n  receiverUserRole: string;\n  receiverUserPic: string;\n  conversationID: string;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\nexport default class PmChatViewController extends BlockComponent<Props, S, SS> {\n  // Customizable Area Start\n  unlockMessageApiCallId: string = \"\";\n  getChatListApiCallId: string = \"\";\n  sendMessageApiCallId: string = \"\";\n  refreshChatInterval: unknown;\n  scrollViewRef: React.RefObject<ScrollView>;\n  fileInputRef: React.RefObject<InputProps & { click: Function }>;\n  apiToken: string = \"\";\n  loginUserProfileId: string = \"\"\n  putReadMessageApiCallId: string = \"\";\n  chatTypePM: boolean = true;\n  conversationID: string = \"\";\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    const navigationParams = this.props.navigation.state.params;\n    let receiverUser = navigationParams.receiverUser;\n    let conversationID = navigationParams.conversationID;\n    let userID = receiverUser.userID\n    let userName = receiverUser.userName\n    let userPic = receiverUser.userPic\n    let userRole = receiverUser.userRole\n    // Customizable Area End\n\n    this.subScribedMessages = [\n      // Customizable Area Start\n      // getName(MessageEnum.SessionResponseMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n      // Customizable Area End\n    ];\n\n    this.state = {\n      // Customizable Area Start\n      token: \"\",\n      chatId: 3,\n      message: \"\",\n      accountId: -1,\n      accountIdInput: \"\",\n      isVisiblePreviewModal: false,\n      imageUrl: \"\",\n      muted: null,\n      messageList: [],\n      receiverUserID: userID,\n      receiverUserName: userName,\n      receiverUserRole: userRole,\n      receiverUserPic: userPic,\n      conversationID: conversationID\n      // Customizable Area End\n    };\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n    // Customizable Area Start\n    this.scrollViewRef = React.createRef();\n    this.fileInputRef = React.createRef();\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n  async componentDidMount() {\n    super.componentDidMount();\n    const token = \"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA\"\n    this.apiToken = \"\" + token;\n    let userProfileId = await getStorageData(AsyncStorageKey.profileUserID);\n    this.loginUserProfileId = \"\" + userProfileId;\n    this.getChatList(),\n      this.refreshChatInterval = setInterval(\n        () => this.getChatList(),\n        30000\n      );\n    let isTypePM = await getStorageData(AsyncStorageKey.chatTypeDm);\n    this.chatTypePM = Boolean(isTypePM);\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.refreshChatInterval as number);\n  }\n\n  handleMessageChange = (message: string) => {\n    this.setState({ message });\n  };\n\n  sendChatMessage = async (receiverId: string, message: string, imageUrl?: string) => {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.sendMessageApiCallId = requestMessage.messageId;\n\n    let token = \"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA\"\n    const header = {\n      'Content-Type': 'multipart/form-data',\n      \"token\": token\n    };\n\n    const formData = new FormData();\n    formData.append(\"message\", this.state.message);\n    formData.append(\"points\", 0 as unknown as Blob);\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPostMethod\n    );\n\n    let apiEndPoint =\n      APIEndPoint.endPointAPIPmChat + APIConstant.markQuestion + APIConstant.paramsReceiverID + APIConstant.markEqual + receiverId\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      formData\n    );\n    this.setState({ message: \"\", imageUrl: \"\", isVisiblePreviewModal: false });\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  btnSendMessageProps = {\n    onPress: () => {\n      this.sendChatMessage(this.state.receiverUserID, this.state.message);\n    },\n  };\n\n  async receive(from: string, message: Message) {\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n      const responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      switch (apiRequestCallId) {\n        case this.sendMessageApiCallId: {\n          this.getChatList();\n          break;\n        }\n        case this.getChatListApiCallId: {\n          this.setState(\n            {\n              messageList: responseJson?.data\n            },\n            () => {\n              if (!this.state.conversationID && this.state.messageList.length > 0) {\n                //This function call one time after the message list  \n                this.conversationID = \"\" + this.state.messageList[0].attributes.conversation_id\n                this.getReadMessage();\n              }\n            }\n          );\n          break;\n        }\n        case this.unlockMessageApiCallId: {\n          if (responseJson.data) {\n            this.getChatList();\n          } else {\n            this.showAlert(\n              configJSON.errorTitle,\n              responseJson.message,\n              \"\"\n            );\n          }\n          break;\n        }\n        case this.putReadMessageApiCallId: {\n          //Callback message for conversation screen \n          this.refreshConversationListScreen()\n          break;\n        }\n      }\n    }\n    else if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      const token: string = message.getData(\n        getName(MessageEnum.SessionResponseToken)\n      );\n      const responseData: string = message.getData(\n        getName(MessageEnum.SessionResponseData)\n      );\n      if (responseData) {\n        const messageData = JSON.parse(responseData);\n        if (messageData && messageData.meta) {\n          const accountId: number = messageData.meta.id;\n          this.setState({ accountId });\n        }\n      }\n    }\n  }\n\n  doButtonBackPressed = () => {\n    this.props.navigation.navigate('Chat');\n  };\n\n  getChatList() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getChatListApiCallId = requestMessage.messageId;\n\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      \"token\": 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA'\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpGetMethod\n    );\n\n    let apiEndPoint = APIEndPoint.endPointAPIGetPMChatList +\n      APIConstant.markQuestion +\n      APIConstant.paramsReceiverID +\n      APIConstant.markEqual + this.state.receiverUserID;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  async unlockMessage(message_id: number) {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.unlockMessageApiCallId = requestMessage.messageId;\n\n    const header = {\n      token: \"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA\"\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPutMethod\n    );\n\n    let apiEndPoint = APIEndPoint.endPointAPIUnlockMessage +\n      APIConstant.markQuestion +\n      APIConstant.paramsMessageID +\n      APIConstant.markEqual + message_id;\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  getReadMessage() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.putReadMessageApiCallId = requestMessage.messageId;\n\n    let token = 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA';\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: token,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPutMethod\n    );\n\n    let conversationKey = \"\";\n    if (this.chatTypePM) {\n      conversationKey = APIConstant.paramsPMConversationID\n    } else {\n      conversationKey = APIConstant.paramsDMConversationID\n    }\n    let apiEndPoint = APIEndPoint.endPointAPIPutReadMessage\n      + APIConstant.markQuestion\n      + conversationKey\n      + APIConstant.markEqual + this.state.conversationID\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  refreshConversationListScreen() {\n    const message = new Message(getName(MessageEnum.NavigationMessage));\n    message.addData(getName(MessageEnum.NavigationPropsMessage), {\n      messageType: \"readMessage\",\n      conversationID: this.state.conversationID\n    });\n    this.send(message);\n  }\n\n  // Customizable Area End\n}"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3eea1f6396d4cd0ddd179ec0151c695654d18694"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v6udidbdo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v6udidbdo();
var __createBinding =
/* istanbul ignore next */
(cov_v6udidbdo().s[0]++,
/* istanbul ignore next */
(cov_v6udidbdo().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_v6udidbdo().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_v6udidbdo().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_v6udidbdo().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_v6udidbdo().f[0]++;
  cov_v6udidbdo().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_v6udidbdo().b[2][0]++;
    cov_v6udidbdo().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_v6udidbdo().b[2][1]++;
  }
  cov_v6udidbdo().s[3]++;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      /* istanbul ignore next */
      cov_v6udidbdo().f[1]++;
      cov_v6udidbdo().s[4]++;
      return m[k];
    }
  });
}) :
/* istanbul ignore next */
(cov_v6udidbdo().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_v6udidbdo().f[2]++;
  cov_v6udidbdo().s[5]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_v6udidbdo().b[3][0]++;
    cov_v6udidbdo().s[6]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_v6udidbdo().b[3][1]++;
  }
  cov_v6udidbdo().s[7]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_v6udidbdo().s[8]++,
/* istanbul ignore next */
(cov_v6udidbdo().b[4][0]++, this) &&
/* istanbul ignore next */
(cov_v6udidbdo().b[4][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_v6udidbdo().b[4][2]++, Object.create ?
/* istanbul ignore next */
(cov_v6udidbdo().b[5][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_v6udidbdo().f[3]++;
  cov_v6udidbdo().s[9]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_v6udidbdo().b[5][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_v6udidbdo().f[4]++;
  cov_v6udidbdo().s[10]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_v6udidbdo().s[11]++,
/* istanbul ignore next */
(cov_v6udidbdo().b[6][0]++, this) &&
/* istanbul ignore next */
(cov_v6udidbdo().b[6][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_v6udidbdo().b[6][2]++, function (mod) {
  /* istanbul ignore next */
  cov_v6udidbdo().f[5]++;
  cov_v6udidbdo().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_v6udidbdo().b[8][0]++, mod) &&
  /* istanbul ignore next */
  (cov_v6udidbdo().b[8][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_v6udidbdo().b[7][0]++;
    cov_v6udidbdo().s[13]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_v6udidbdo().b[7][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_v6udidbdo().s[14]++, {});
  /* istanbul ignore next */
  cov_v6udidbdo().s[15]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_v6udidbdo().b[9][0]++;
    cov_v6udidbdo().s[16]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_v6udidbdo().s[17]++;
      if (
      /* istanbul ignore next */
      (cov_v6udidbdo().b[11][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_v6udidbdo().b[11][1]++, Object.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_v6udidbdo().b[10][0]++;
        cov_v6udidbdo().s[18]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_v6udidbdo().b[10][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_v6udidbdo().b[9][1]++;
  }
  cov_v6udidbdo().s[19]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_v6udidbdo().s[20]++;
  return result;
}));
var __awaiter =
/* istanbul ignore next */
(cov_v6udidbdo().s[21]++,
/* istanbul ignore next */
(cov_v6udidbdo().b[12][0]++, this) &&
/* istanbul ignore next */
(cov_v6udidbdo().b[12][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_v6udidbdo().b[12][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_v6udidbdo().f[6]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_v6udidbdo().f[7]++;
    cov_v6udidbdo().s[22]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_v6udidbdo().b[13][0]++, value) :
    /* istanbul ignore next */
    (cov_v6udidbdo().b[13][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_v6udidbdo().f[8]++;
      cov_v6udidbdo().s[23]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_v6udidbdo().s[24]++;
  return new (
  /* istanbul ignore next */
  (cov_v6udidbdo().b[14][0]++, P) ||
  /* istanbul ignore next */
  (cov_v6udidbdo().b[14][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_v6udidbdo().f[9]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_v6udidbdo().f[10]++;
      cov_v6udidbdo().s[25]++;
      try {
        /* istanbul ignore next */
        cov_v6udidbdo().s[26]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_v6udidbdo().s[27]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_v6udidbdo().f[11]++;
      cov_v6udidbdo().s[28]++;
      try {
        /* istanbul ignore next */
        cov_v6udidbdo().s[29]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_v6udidbdo().s[30]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_v6udidbdo().f[12]++;
      cov_v6udidbdo().s[31]++;
      result.done ?
      /* istanbul ignore next */
      (cov_v6udidbdo().b[15][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_v6udidbdo().b[15][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_v6udidbdo().s[32]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_v6udidbdo().b[16][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_v6udidbdo().b[16][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_v6udidbdo().s[33]++,
/* istanbul ignore next */
(cov_v6udidbdo().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_v6udidbdo().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_v6udidbdo().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_v6udidbdo().f[13]++;
  cov_v6udidbdo().s[34]++;
  return (
    /* istanbul ignore next */
    (cov_v6udidbdo().b[19][0]++, mod) &&
    /* istanbul ignore next */
    (cov_v6udidbdo().b[19][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_v6udidbdo().b[18][0]++, mod) :
    /* istanbul ignore next */
    (cov_v6udidbdo().b[18][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_v6udidbdo().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_v6udidbdo().s[36]++;
exports.configJSON = void 0;
const Message_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[37]++, require("../../../framework/src/Message"));
const BlockComponent_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[38]++, require("../../../framework/src/BlockComponent"));
const MessageEnum_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[39]++, __importStar(require("../../../framework/src/Messages/MessageEnum")));
const RunEngine_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[40]++, require("../../../framework/src/RunEngine"));
// Customizable Area Start
const react_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[41]++, __importDefault(require("react")));
const AppGlobals_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[42]++, require("../../../components/src/AppGlobals"));
const AppConstant_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[43]++, require("../../../framework/src/AppConstant"));
const Utilities_1 =
/* istanbul ignore next */
(cov_v6udidbdo().s[44]++, require("../../../framework/src/Utilities"));
// Customizable Area End
/* istanbul ignore next */
cov_v6udidbdo().s[45]++;
exports.configJSON = require("./config");
class PmChatViewController extends
/* istanbul ignore next */
(BlockComponent_1.BlockComponent) {
  // Customizable Area End
  constructor(props) {
    /* istanbul ignore next */
    cov_v6udidbdo().f[14]++;
    cov_v6udidbdo().s[46]++;
    super(props);
    // Customizable Area Start
    /* istanbul ignore next */
    cov_v6udidbdo().s[47]++;
    this.unlockMessageApiCallId = "";
    /* istanbul ignore next */
    cov_v6udidbdo().s[48]++;
    this.getChatListApiCallId = "";
    /* istanbul ignore next */
    cov_v6udidbdo().s[49]++;
    this.sendMessageApiCallId = "";
    /* istanbul ignore next */
    cov_v6udidbdo().s[50]++;
    this.apiToken = "";
    /* istanbul ignore next */
    cov_v6udidbdo().s[51]++;
    this.loginUserProfileId = "";
    /* istanbul ignore next */
    cov_v6udidbdo().s[52]++;
    this.putReadMessageApiCallId = "";
    /* istanbul ignore next */
    cov_v6udidbdo().s[53]++;
    this.chatTypePM = true;
    /* istanbul ignore next */
    cov_v6udidbdo().s[54]++;
    this.conversationID = "";
    /* istanbul ignore next */
    cov_v6udidbdo().s[55]++;
    this.handleMessageChange = message => {
      /* istanbul ignore next */
      cov_v6udidbdo().f[15]++;
      cov_v6udidbdo().s[56]++;
      this.setState({
        message
      });
    };
    /* istanbul ignore next */
    cov_v6udidbdo().s[57]++;
    this.sendChatMessage = (receiverId, message, imageUrl) => {
      /* istanbul ignore next */
      cov_v6udidbdo().f[16]++;
      cov_v6udidbdo().s[58]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_v6udidbdo().f[17]++;
        const requestMessage =
        /* istanbul ignore next */
        (cov_v6udidbdo().s[59]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
        /* istanbul ignore next */
        cov_v6udidbdo().s[60]++;
        this.sendMessageApiCallId = requestMessage.messageId;
        let token =
        /* istanbul ignore next */
        (cov_v6udidbdo().s[61]++, "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA");
        const header =
        /* istanbul ignore next */
        (cov_v6udidbdo().s[62]++, {
          'Content-Type': 'multipart/form-data',
          "token": token
        });
        const formData =
        /* istanbul ignore next */
        (cov_v6udidbdo().s[63]++, new FormData());
        /* istanbul ignore next */
        cov_v6udidbdo().s[64]++;
        formData.append("message", this.state.message);
        /* istanbul ignore next */
        cov_v6udidbdo().s[65]++;
        formData.append("points", 0);
        /* istanbul ignore next */
        cov_v6udidbdo().s[66]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
        /* istanbul ignore next */
        cov_v6udidbdo().s[67]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), AppConstant_1.APIRequest.httpPostMethod);
        let apiEndPoint =
        /* istanbul ignore next */
        (cov_v6udidbdo().s[68]++, AppConstant_1.APIEndPoint.endPointAPIPmChat + AppConstant_1.APIConstant.markQuestion + AppConstant_1.APIConstant.paramsReceiverID + AppConstant_1.APIConstant.markEqual + receiverId);
        /* istanbul ignore next */
        cov_v6udidbdo().s[69]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), apiEndPoint);
        /* istanbul ignore next */
        cov_v6udidbdo().s[70]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestBodyMessage), formData);
        /* istanbul ignore next */
        cov_v6udidbdo().s[71]++;
        this.setState({
          message: "",
          imageUrl: "",
          isVisiblePreviewModal: false
        });
        /* istanbul ignore next */
        cov_v6udidbdo().s[72]++;
        RunEngine_1.runEngine.sendMessage(requestMessage.id, requestMessage);
      });
    };
    /* istanbul ignore next */
    cov_v6udidbdo().s[73]++;
    this.btnSendMessageProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_v6udidbdo().f[18]++;
        cov_v6udidbdo().s[74]++;
        this.sendChatMessage(this.state.receiverUserID, this.state.message);
      }
    };
    /* istanbul ignore next */
    cov_v6udidbdo().s[75]++;
    this.doButtonBackPressed = () => {
      /* istanbul ignore next */
      cov_v6udidbdo().f[19]++;
      cov_v6udidbdo().s[76]++;
      this.props.navigation.navigate('Chat');
    };
    /* istanbul ignore next */
    cov_v6udidbdo().s[77]++;
    this.receive = this.receive.bind(this);
    // Customizable Area Start
    const navigationParams =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[78]++, this.props.navigation.state.params);
    let receiverUser =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[79]++, navigationParams.receiverUser);
    let conversationID =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[80]++, navigationParams.conversationID);
    let userID =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[81]++, receiverUser.userID);
    let userName =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[82]++, receiverUser.userName);
    let userPic =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[83]++, receiverUser.userPic);
    let userRole =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[84]++, receiverUser.userRole);
    // Customizable Area End
    /* istanbul ignore next */
    cov_v6udidbdo().s[85]++;
    this.subScribedMessages = [
    // Customizable Area Start
    // getName(MessageEnum.SessionResponseMessage),
    MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceMessage), MessageEnum_1.getName(MessageEnum_1.default.NavigationPayLoadMessage)];
    /* istanbul ignore next */
    cov_v6udidbdo().s[86]++;
    this.state = {
      // Customizable Area Start
      token: "",
      chatId: 3,
      message: "",
      accountId: -1,
      accountIdInput: "",
      isVisiblePreviewModal: false,
      imageUrl: "",
      muted: null,
      messageList: [],
      receiverUserID: userID,
      receiverUserName: userName,
      receiverUserRole: userRole,
      receiverUserPic: userPic,
      conversationID: conversationID
      // Customizable Area End
    };
    /* istanbul ignore next */
    cov_v6udidbdo().s[87]++;
    RunEngine_1.runEngine.attachBuildingBlock(this, this.subScribedMessages);
    // Customizable Area Start
    /* istanbul ignore next */
    cov_v6udidbdo().s[88]++;
    this.scrollViewRef = react_1.default.createRef();
    /* istanbul ignore next */
    cov_v6udidbdo().s[89]++;
    this.fileInputRef = react_1.default.createRef();
    // Customizable Area End
  }
  // Customizable Area Start
  componentDidMount() {
    /* istanbul ignore next */
    cov_v6udidbdo().f[20]++;
    const _super =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[90]++, Object.create(null, {
      componentDidMount: {
        get: () => {
          /* istanbul ignore next */
          cov_v6udidbdo().f[21]++;
          cov_v6udidbdo().s[91]++;
          return super.componentDidMount;
        }
      }
    }));
    /* istanbul ignore next */
    cov_v6udidbdo().s[92]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_v6udidbdo().f[22]++;
      cov_v6udidbdo().s[93]++;
      _super.componentDidMount.call(this);
      const token =
      /* istanbul ignore next */
      (cov_v6udidbdo().s[94]++, "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA");
      /* istanbul ignore next */
      cov_v6udidbdo().s[95]++;
      this.apiToken = "" + token;
      let userProfileId =
      /* istanbul ignore next */
      (cov_v6udidbdo().s[96]++, yield Utilities_1.getStorageData(AppGlobals_1.AsyncStorageKey.profileUserID));
      /* istanbul ignore next */
      cov_v6udidbdo().s[97]++;
      this.loginUserProfileId = "" + userProfileId;
      /* istanbul ignore next */
      cov_v6udidbdo().s[98]++;
      this.getChatList(), this.refreshChatInterval = setInterval(() => {
        /* istanbul ignore next */
        cov_v6udidbdo().f[23]++;
        cov_v6udidbdo().s[99]++;
        return this.getChatList();
      }, 30000);
      let isTypePM =
      /* istanbul ignore next */
      (cov_v6udidbdo().s[100]++, yield Utilities_1.getStorageData(AppGlobals_1.AsyncStorageKey.chatTypeDm));
      /* istanbul ignore next */
      cov_v6udidbdo().s[101]++;
      this.chatTypePM = Boolean(isTypePM);
    });
  }
  componentWillUnmount() {
    /* istanbul ignore next */
    cov_v6udidbdo().f[24]++;
    cov_v6udidbdo().s[102]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_v6udidbdo().f[25]++;
      cov_v6udidbdo().s[103]++;
      clearInterval(this.refreshChatInterval);
    });
  }
  receive(from, message) {
    /* istanbul ignore next */
    cov_v6udidbdo().f[26]++;
    cov_v6udidbdo().s[104]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_v6udidbdo().f[27]++;
      cov_v6udidbdo().s[105]++;
      if (MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceMessage) === message.id) {
        /* istanbul ignore next */
        cov_v6udidbdo().b[20][0]++;
        const apiRequestCallId =
        /* istanbul ignore next */
        (cov_v6udidbdo().s[106]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceDataMessage)));
        const responseJson =
        /* istanbul ignore next */
        (cov_v6udidbdo().s[107]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceSuccessMessage)));
        /* istanbul ignore next */
        cov_v6udidbdo().s[108]++;
        switch (apiRequestCallId) {
          case this.sendMessageApiCallId:
            /* istanbul ignore next */
            cov_v6udidbdo().b[21][0]++;
            {
              /* istanbul ignore next */
              cov_v6udidbdo().s[109]++;
              this.getChatList();
              /* istanbul ignore next */
              cov_v6udidbdo().s[110]++;
              break;
            }
          case this.getChatListApiCallId:
            /* istanbul ignore next */
            cov_v6udidbdo().b[21][1]++;
            {
              /* istanbul ignore next */
              cov_v6udidbdo().s[111]++;
              this.setState({
                messageList:
                /* istanbul ignore next */
                (cov_v6udidbdo().b[23][0]++, responseJson === null) ||
                /* istanbul ignore next */
                (cov_v6udidbdo().b[23][1]++, responseJson === void 0) ?
                /* istanbul ignore next */
                (cov_v6udidbdo().b[22][0]++, void 0) :
                /* istanbul ignore next */
                (cov_v6udidbdo().b[22][1]++, responseJson.data)
              }, () => {
                /* istanbul ignore next */
                cov_v6udidbdo().f[28]++;
                cov_v6udidbdo().s[112]++;
                if (
                /* istanbul ignore next */
                (cov_v6udidbdo().b[25][0]++, !this.state.conversationID) &&
                /* istanbul ignore next */
                (cov_v6udidbdo().b[25][1]++, this.state.messageList.length > 0)) {
                  /* istanbul ignore next */
                  cov_v6udidbdo().b[24][0]++;
                  cov_v6udidbdo().s[113]++;
                  //This function call one time after the message list  
                  this.conversationID = "" + this.state.messageList[0].attributes.conversation_id;
                  /* istanbul ignore next */
                  cov_v6udidbdo().s[114]++;
                  this.getReadMessage();
                } else
                /* istanbul ignore next */
                {
                  cov_v6udidbdo().b[24][1]++;
                }
              });
              /* istanbul ignore next */
              cov_v6udidbdo().s[115]++;
              break;
            }
          case this.unlockMessageApiCallId:
            /* istanbul ignore next */
            cov_v6udidbdo().b[21][2]++;
            {
              /* istanbul ignore next */
              cov_v6udidbdo().s[116]++;
              if (responseJson.data) {
                /* istanbul ignore next */
                cov_v6udidbdo().b[26][0]++;
                cov_v6udidbdo().s[117]++;
                this.getChatList();
              } else {
                /* istanbul ignore next */
                cov_v6udidbdo().b[26][1]++;
                cov_v6udidbdo().s[118]++;
                this.showAlert(exports.configJSON.errorTitle, responseJson.message, "");
              }
              /* istanbul ignore next */
              cov_v6udidbdo().s[119]++;
              break;
            }
          case this.putReadMessageApiCallId:
            /* istanbul ignore next */
            cov_v6udidbdo().b[21][3]++;
            {
              /* istanbul ignore next */
              cov_v6udidbdo().s[120]++;
              //Callback message for conversation screen 
              this.refreshConversationListScreen();
              /* istanbul ignore next */
              cov_v6udidbdo().s[121]++;
              break;
            }
        }
      } else {
        /* istanbul ignore next */
        cov_v6udidbdo().b[20][1]++;
        cov_v6udidbdo().s[122]++;
        if (MessageEnum_1.getName(MessageEnum_1.default.SessionResponseMessage) === message.id) {
          /* istanbul ignore next */
          cov_v6udidbdo().b[27][0]++;
          const token =
          /* istanbul ignore next */
          (cov_v6udidbdo().s[123]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.SessionResponseToken)));
          const responseData =
          /* istanbul ignore next */
          (cov_v6udidbdo().s[124]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.SessionResponseData)));
          /* istanbul ignore next */
          cov_v6udidbdo().s[125]++;
          if (responseData) {
            /* istanbul ignore next */
            cov_v6udidbdo().b[28][0]++;
            const messageData =
            /* istanbul ignore next */
            (cov_v6udidbdo().s[126]++, JSON.parse(responseData));
            /* istanbul ignore next */
            cov_v6udidbdo().s[127]++;
            if (
            /* istanbul ignore next */
            (cov_v6udidbdo().b[30][0]++, messageData) &&
            /* istanbul ignore next */
            (cov_v6udidbdo().b[30][1]++, messageData.meta)) {
              /* istanbul ignore next */
              cov_v6udidbdo().b[29][0]++;
              const accountId =
              /* istanbul ignore next */
              (cov_v6udidbdo().s[128]++, messageData.meta.id);
              /* istanbul ignore next */
              cov_v6udidbdo().s[129]++;
              this.setState({
                accountId
              });
            } else
            /* istanbul ignore next */
            {
              cov_v6udidbdo().b[29][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_v6udidbdo().b[28][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_v6udidbdo().b[27][1]++;
        }
      }
    });
  }
  getChatList() {
    /* istanbul ignore next */
    cov_v6udidbdo().f[29]++;
    const requestMessage =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[130]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
    /* istanbul ignore next */
    cov_v6udidbdo().s[131]++;
    this.getChatListApiCallId = requestMessage.messageId;
    const header =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[132]++, {
      "Content-Type": AppConstant_1.APIRequest.jsonApiContentType,
      "token": 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA'
    });
    /* istanbul ignore next */
    cov_v6udidbdo().s[133]++;
    requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
    /* istanbul ignore next */
    cov_v6udidbdo().s[134]++;
    requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), AppConstant_1.APIRequest.httpGetMethod);
    let apiEndPoint =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[135]++, AppConstant_1.APIEndPoint.endPointAPIGetPMChatList + AppConstant_1.APIConstant.markQuestion + AppConstant_1.APIConstant.paramsReceiverID + AppConstant_1.APIConstant.markEqual + this.state.receiverUserID);
    /* istanbul ignore next */
    cov_v6udidbdo().s[136]++;
    requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), apiEndPoint);
    /* istanbul ignore next */
    cov_v6udidbdo().s[137]++;
    RunEngine_1.runEngine.sendMessage(requestMessage.id, requestMessage);
  }
  unlockMessage(message_id) {
    /* istanbul ignore next */
    cov_v6udidbdo().f[30]++;
    cov_v6udidbdo().s[138]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_v6udidbdo().f[31]++;
      const requestMessage =
      /* istanbul ignore next */
      (cov_v6udidbdo().s[139]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
      /* istanbul ignore next */
      cov_v6udidbdo().s[140]++;
      this.unlockMessageApiCallId = requestMessage.messageId;
      const header =
      /* istanbul ignore next */
      (cov_v6udidbdo().s[141]++, {
        token: "eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA"
      });
      /* istanbul ignore next */
      cov_v6udidbdo().s[142]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
      /* istanbul ignore next */
      cov_v6udidbdo().s[143]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), AppConstant_1.APIRequest.httpPutMethod);
      let apiEndPoint =
      /* istanbul ignore next */
      (cov_v6udidbdo().s[144]++, AppConstant_1.APIEndPoint.endPointAPIUnlockMessage + AppConstant_1.APIConstant.markQuestion + AppConstant_1.APIConstant.paramsMessageID + AppConstant_1.APIConstant.markEqual + message_id);
      /* istanbul ignore next */
      cov_v6udidbdo().s[145]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), apiEndPoint);
      /* istanbul ignore next */
      cov_v6udidbdo().s[146]++;
      RunEngine_1.runEngine.sendMessage(requestMessage.id, requestMessage);
    });
  }
  getReadMessage() {
    /* istanbul ignore next */
    cov_v6udidbdo().f[32]++;
    const requestMessage =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[147]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
    /* istanbul ignore next */
    cov_v6udidbdo().s[148]++;
    this.putReadMessageApiCallId = requestMessage.messageId;
    let token =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[149]++, 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA');
    const header =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[150]++, {
      "Content-Type": AppConstant_1.APIRequest.jsonApiContentType,
      token: token
    });
    /* istanbul ignore next */
    cov_v6udidbdo().s[151]++;
    requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
    /* istanbul ignore next */
    cov_v6udidbdo().s[152]++;
    requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), AppConstant_1.APIRequest.httpPutMethod);
    let conversationKey =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[153]++, "");
    /* istanbul ignore next */
    cov_v6udidbdo().s[154]++;
    if (this.chatTypePM) {
      /* istanbul ignore next */
      cov_v6udidbdo().b[31][0]++;
      cov_v6udidbdo().s[155]++;
      conversationKey = AppConstant_1.APIConstant.paramsPMConversationID;
    } else {
      /* istanbul ignore next */
      cov_v6udidbdo().b[31][1]++;
      cov_v6udidbdo().s[156]++;
      conversationKey = AppConstant_1.APIConstant.paramsDMConversationID;
    }
    let apiEndPoint =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[157]++, AppConstant_1.APIEndPoint.endPointAPIPutReadMessage + AppConstant_1.APIConstant.markQuestion + conversationKey + AppConstant_1.APIConstant.markEqual + this.state.conversationID);
    /* istanbul ignore next */
    cov_v6udidbdo().s[158]++;
    requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), apiEndPoint);
    /* istanbul ignore next */
    cov_v6udidbdo().s[159]++;
    RunEngine_1.runEngine.sendMessage(requestMessage.id, requestMessage);
  }
  refreshConversationListScreen() {
    /* istanbul ignore next */
    cov_v6udidbdo().f[33]++;
    const message =
    /* istanbul ignore next */
    (cov_v6udidbdo().s[160]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.NavigationMessage)));
    /* istanbul ignore next */
    cov_v6udidbdo().s[161]++;
    message.addData(MessageEnum_1.getName(MessageEnum_1.default.NavigationPropsMessage), {
      messageType: "readMessage",
      conversationID: this.state.conversationID
    });
    /* istanbul ignore next */
    cov_v6udidbdo().s[162]++;
    this.send(message);
  }
}
/* istanbul ignore next */
cov_v6udidbdo().s[163]++;
exports.default = PmChatViewController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,