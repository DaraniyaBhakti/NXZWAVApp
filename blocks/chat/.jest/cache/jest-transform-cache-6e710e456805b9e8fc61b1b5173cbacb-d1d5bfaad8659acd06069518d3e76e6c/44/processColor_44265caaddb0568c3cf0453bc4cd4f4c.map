{"version":3,"names":["Platform","require","normalizeColor","processColor","color","undefined","int32Color","OS","module","exports"],"sources":["processColor.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Platform = require('../Utilities/Platform');\n\nconst normalizeColor = require('../Color/normalizeColor');\n\n/* eslint no-bitwise: 0 */\nfunction processColor(color?: ?(string | number)): ?number {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let int32Color = normalizeColor(color);\n  if (int32Color === null || int32Color === undefined) {\n    return undefined;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    int32Color = int32Color | 0x0;\n  }\n  return int32Color;\n}\n\nmodule.exports = processColor;\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,QAAQ,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEjD,IAAMC,cAAc,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAGzD,SAASE,YAAYA,CAACC,KAA0B,EAAW;EACzD,IAAIA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI,EAAE;IACzC,OAAOA,KAAK;EACd;EAEA,IAAIE,UAAU,GAAGJ,cAAc,CAACE,KAAK,CAAC;EACtC,IAAIE,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKD,SAAS,EAAE;IACnD,OAAOA,SAAS;EAClB;EAGAC,UAAU,GAAG,CAAEA,UAAU,IAAI,EAAE,GAAKA,UAAU,KAAK,CAAE,MAAM,CAAC;EAE5D,IAAIN,QAAQ,CAACO,EAAE,KAAK,SAAS,EAAE;IAK7BD,UAAU,GAAGA,UAAU,GAAG,GAAG;EAC/B;EACA,OAAOA,UAAU;AACnB;AAEAE,MAAM,CAACC,OAAO,GAAGN,YAAY"}