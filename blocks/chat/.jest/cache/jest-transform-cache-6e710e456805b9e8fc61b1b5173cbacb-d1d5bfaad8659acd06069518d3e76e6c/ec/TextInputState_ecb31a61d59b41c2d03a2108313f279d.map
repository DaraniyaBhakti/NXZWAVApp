{"version":3,"names":["Platform","require","UIManager","currentlyFocusedID","inputs","Set","currentlyFocusedField","focusTextInput","textFieldID","OS","focus","dispatchViewManagerCommand","getViewManagerConfig","Commands","blurTextInput","blur","registerInput","add","unregisterInput","delete","isTextInput","has","module","exports"],"sources":["TextInputState.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Platform = require('../../Utilities/Platform');\nconst UIManager = require('../../ReactNative/UIManager');\n\nlet currentlyFocusedID: ?number = null;\nconst inputs = new Set();\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  return currentlyFocusedID;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused\n */\nfunction focusTextInput(textFieldID: ?number) {\n  if (currentlyFocusedID !== textFieldID && textFieldID !== null) {\n    currentlyFocusedID = textFieldID;\n    if (Platform.OS === 'ios') {\n      UIManager.focus(textFieldID);\n    } else if (Platform.OS === 'android') {\n      UIManager.dispatchViewManagerCommand(\n        textFieldID,\n        UIManager.getViewManagerConfig('AndroidTextInput').Commands\n          .focusTextInput,\n        null,\n      );\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textFieldID: ?number) {\n  if (currentlyFocusedID === textFieldID && textFieldID !== null) {\n    currentlyFocusedID = null;\n    if (Platform.OS === 'ios') {\n      UIManager.blur(textFieldID);\n    } else if (Platform.OS === 'android') {\n      UIManager.dispatchViewManagerCommand(\n        textFieldID,\n        UIManager.getViewManagerConfig('AndroidTextInput').Commands\n          .blurTextInput,\n        null,\n      );\n    }\n  }\n}\n\nfunction registerInput(textFieldID: number) {\n  inputs.add(textFieldID);\n}\n\nfunction unregisterInput(textFieldID: number) {\n  inputs.delete(textFieldID);\n}\n\nfunction isTextInput(textFieldID: number): boolean {\n  return inputs.has(textFieldID);\n}\n\nmodule.exports = {\n  currentlyFocusedField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n"],"mappings":"AAeA,YAAY;;AAEZ,IAAMA,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAMC,SAAS,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAExD,IAAIE,kBAA2B,GAAG,IAAI;AACtC,IAAMC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;AAMxB,SAASC,qBAAqBA,CAAA,EAAY;EACxC,OAAOH,kBAAkB;AAC3B;AAOA,SAASI,cAAcA,CAACC,WAAoB,EAAE;EAC5C,IAAIL,kBAAkB,KAAKK,WAAW,IAAIA,WAAW,KAAK,IAAI,EAAE;IAC9DL,kBAAkB,GAAGK,WAAW;IAChC,IAAIR,QAAQ,CAACS,EAAE,KAAK,KAAK,EAAE;MACzBP,SAAS,CAACQ,KAAK,CAACF,WAAW,CAAC;IAC9B,CAAC,MAAM,IAAIR,QAAQ,CAACS,EAAE,KAAK,SAAS,EAAE;MACpCP,SAAS,CAACS,0BAA0B,CAClCH,WAAW,EACXN,SAAS,CAACU,oBAAoB,CAAC,kBAAkB,CAAC,CAACC,QAAQ,CACxDN,cAAc,EACjB,IACF,CAAC;IACH;EACF;AACF;AAOA,SAASO,aAAaA,CAACN,WAAoB,EAAE;EAC3C,IAAIL,kBAAkB,KAAKK,WAAW,IAAIA,WAAW,KAAK,IAAI,EAAE;IAC9DL,kBAAkB,GAAG,IAAI;IACzB,IAAIH,QAAQ,CAACS,EAAE,KAAK,KAAK,EAAE;MACzBP,SAAS,CAACa,IAAI,CAACP,WAAW,CAAC;IAC7B,CAAC,MAAM,IAAIR,QAAQ,CAACS,EAAE,KAAK,SAAS,EAAE;MACpCP,SAAS,CAACS,0BAA0B,CAClCH,WAAW,EACXN,SAAS,CAACU,oBAAoB,CAAC,kBAAkB,CAAC,CAACC,QAAQ,CACxDC,aAAa,EAChB,IACF,CAAC;IACH;EACF;AACF;AAEA,SAASE,aAAaA,CAACR,WAAmB,EAAE;EAC1CJ,MAAM,CAACa,GAAG,CAACT,WAAW,CAAC;AACzB;AAEA,SAASU,eAAeA,CAACV,WAAmB,EAAE;EAC5CJ,MAAM,CAACe,MAAM,CAACX,WAAW,CAAC;AAC5B;AAEA,SAASY,WAAWA,CAACZ,WAAmB,EAAW;EACjD,OAAOJ,MAAM,CAACiB,GAAG,CAACb,WAAW,CAAC;AAChC;AAEAc,MAAM,CAACC,OAAO,GAAG;EACfjB,qBAAqB,EAArBA,qBAAqB;EACrBC,cAAc,EAAdA,cAAc;EACdO,aAAa,EAAbA,aAAa;EACbE,aAAa,EAAbA,aAAa;EACbE,eAAe,EAAfA,eAAe;EACfE,WAAW,EAAXA;AACF,CAAC"}