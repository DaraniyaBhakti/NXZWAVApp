bd2d9c61f7c4e4b4474309379a90fe79
"use strict";

/* istanbul ignore next */
function cov_2ewh89ltqi() {
  var path = "/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/ChatViewController.tsx";
  var hash = "79ed9efeeae966ff4022ea4895067e987e83a7ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/ChatViewController.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 89
        }
      },
      "4": {
        start: {
          line: 4,
          column: 71
        },
        end: {
          line: 4,
          column: 83
        }
      },
      "5": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "6": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "7": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 17
        }
      },
      "8": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 13,
          column: 2
        }
      },
      "9": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 72
        }
      },
      "10": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 21
        }
      },
      "11": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "12": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "13": {
        start: {
          line: 15,
          column: 31
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "14": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "15": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "16": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "17": {
        start: {
          line: 17,
          column: 40
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "18": {
        start: {
          line: 17,
          column: 99
        },
        end: {
          line: 17,
          column: 131
        }
      },
      "19": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "20": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 18
        }
      },
      "21": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "22": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 110
        }
      },
      "23": {
        start: {
          line: 22,
          column: 91
        },
        end: {
          line: 22,
          column: 106
        }
      },
      "24": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "25": {
        start: {
          line: 24,
          column: 36
        },
        end: {
          line: 24,
          column: 97
        }
      },
      "26": {
        start: {
          line: 24,
          column: 42
        },
        end: {
          line: 24,
          column: 70
        }
      },
      "27": {
        start: {
          line: 24,
          column: 85
        },
        end: {
          line: 24,
          column: 95
        }
      },
      "28": {
        start: {
          line: 25,
          column: 35
        },
        end: {
          line: 25,
          column: 100
        }
      },
      "29": {
        start: {
          line: 25,
          column: 41
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "30": {
        start: {
          line: 25,
          column: 88
        },
        end: {
          line: 25,
          column: 98
        }
      },
      "31": {
        start: {
          line: 26,
          column: 32
        },
        end: {
          line: 26,
          column: 116
        }
      },
      "32": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 78
        }
      },
      "33": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "34": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "35": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "36": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "37": {
        start: {
          line: 35,
          column: 18
        },
        end: {
          line: 35,
          column: 59
        }
      },
      "38": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "39": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 90
        }
      },
      "40": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "41": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "42": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "43": {
        start: {
          line: 42,
          column: 39
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "44": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 43,
          column: 66
        }
      },
      "45": {
        start: {
          line: 44,
          column: 22
        },
        end: {
          line: 44,
          column: 67
        }
      },
      "46": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "47": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 21
        }
      },
      "48": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 35
        }
      },
      "49": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "50": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "51": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "52": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "53": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 38
        }
      },
      "54": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 45
        }
      },
      "55": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "56": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "57": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 42
        }
      },
      "58": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "59": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 33
        }
      },
      "60": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "61": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 50
        }
      },
      "62": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "63": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 52
        }
      },
      "64": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "65": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 53
        }
      },
      "66": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "67": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 88
        }
      },
      "68": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "69": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 46
        }
      },
      "70": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "71": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 39
        }
      },
      "72": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "73": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "74": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 84,
          column: 50
        }
      },
      "75": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "76": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 89,
          column: 18
        }
      },
      "77": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 165
        }
      },
      "78": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 43
        }
      },
      "79": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 77
        }
      },
      "80": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 62
        }
      },
      "81": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "82": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "83": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 102,
          column: 54
        }
      },
      "84": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "85": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 33
        }
      },
      "86": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 119,
          column: 10
        }
      },
      "87": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 60
        }
      },
      "88": {
        start: {
          line: 109,
          column: 27
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "89": {
        start: {
          line: 113,
          column: 35
        },
        end: {
          line: 113,
          column: 124
        }
      },
      "90": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 61
        }
      },
      "91": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 167
        }
      },
      "92": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 133
        }
      },
      "93": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 142
        }
      },
      "94": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 141,
          column: 10
        }
      },
      "95": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "96": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 113
        }
      },
      "97": {
        start: {
          line: 125,
          column: 31
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "98": {
        start: {
          line: 129,
          column: 33
        },
        end: {
          line: 132,
          column: 17
        }
      },
      "99": {
        start: {
          line: 133,
          column: 39
        },
        end: {
          line: 133,
          column: 128
        }
      },
      "100": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 71
        }
      },
      "101": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 161
        }
      },
      "102": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 137
        }
      },
      "103": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 137
        }
      },
      "104": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 147
        }
      },
      "105": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 157,
          column: 10
        }
      },
      "106": {
        start: {
          line: 143,
          column: 27
        },
        end: {
          line: 146,
          column: 13
        }
      },
      "107": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "108": {
        start: {
          line: 150,
          column: 35
        },
        end: {
          line: 150,
          column: 124
        }
      },
      "109": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 63
        }
      },
      "110": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 153
        }
      },
      "111": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 133
        }
      },
      "112": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 133
        }
      },
      "113": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 143
        }
      },
      "114": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "115": {
        start: {
          line: 158,
          column: 66
        },
        end: {
          line: 175,
          column: 10
        }
      },
      "116": {
        start: {
          line: 159,
          column: 35
        },
        end: {
          line: 159,
          column: 124
        }
      },
      "117": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 65
        }
      },
      "118": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 161,
          column: 168
        }
      },
      "119": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "120": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 133
        }
      },
      "121": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 150
        }
      },
      "122": {
        start: {
          line: 169,
          column: 30
        },
        end: {
          line: 169,
          column: 212
        }
      },
      "123": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 125
        }
      },
      "124": {
        start: {
          line: 171,
          column: 27
        },
        end: {
          line: 171,
          column: 47
        }
      },
      "125": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 133
        }
      },
      "126": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 69
        }
      },
      "127": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 81
        }
      },
      "128": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 185,
          column: 10
        }
      },
      "129": {
        start: {
          line: 177,
          column: 30
        },
        end: {
          line: 177,
          column: 40
        }
      },
      "130": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "131": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 47
        }
      },
      "132": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 49
        }
      },
      "133": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 30
        }
      },
      "134": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "135": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 59
        }
      },
      "136": {
        start: {
          line: 188,
          column: 38
        },
        end: {
          line: 188,
          column: 48
        }
      },
      "137": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "138": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "139": {
        start: {
          line: 196,
          column: 35
        },
        end: {
          line: 196,
          column: 124
        }
      },
      "140": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "141": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 169
        }
      },
      "142": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 133
        }
      },
      "143": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 133
        }
      },
      "144": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 142
        }
      },
      "145": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "146": {
        start: {
          line: 205,
          column: 27
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "147": {
        start: {
          line: 209,
          column: 29
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "148": {
        start: {
          line: 212,
          column: 35
        },
        end: {
          line: 212,
          column: 124
        }
      },
      "149": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 71
        }
      },
      "150": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 166
        }
      },
      "151": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 133
        }
      },
      "152": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 133
        }
      },
      "153": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 142
        }
      },
      "154": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 239,
          column: 11
        }
      },
      "155": {
        start: {
          line: 220,
          column: 30
        },
        end: {
          line: 239,
          column: 10
        }
      },
      "156": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "157": {
        start: {
          line: 222,
          column: 33
        },
        end: {
          line: 226,
          column: 18
        }
      },
      "158": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 229,
          column: 17
        }
      },
      "159": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 228,
          column: 109
        }
      },
      "160": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 237,
          column: 17
        }
      },
      "161": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 94
        }
      },
      "162": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 77
        }
      },
      "163": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 244,
          column: 10
        }
      },
      "164": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 56
        }
      },
      "165": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 249,
          column: 10
        }
      },
      "166": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 49
        }
      },
      "167": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 252,
          column: 10
        }
      },
      "168": {
        start: {
          line: 251,
          column: 27
        },
        end: {
          line: 251,
          column: 91
        }
      },
      "169": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 10
        }
      },
      "170": {
        start: {
          line: 254,
          column: 27
        },
        end: {
          line: 254,
          column: 43
        }
      },
      "171": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 258,
          column: 10
        }
      },
      "172": {
        start: {
          line: 257,
          column: 27
        },
        end: {
          line: 257,
          column: 43
        }
      },
      "173": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "174": {
        start: {
          line: 260,
          column: 27
        },
        end: {
          line: 260,
          column: 64
        }
      },
      "175": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 267,
          column: 10
        }
      },
      "176": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 84
        }
      },
      "177": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 91
        }
      },
      "178": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "179": {
        start: {
          line: 269,
          column: 27
        },
        end: {
          line: 269,
          column: 50
        }
      },
      "180": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "181": {
        start: {
          line: 272,
          column: 27
        },
        end: {
          line: 272,
          column: 58
        }
      },
      "182": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 10
        }
      },
      "183": {
        start: {
          line: 275,
          column: 27
        },
        end: {
          line: 275,
          column: 42
        }
      },
      "184": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 279,
          column: 10
        }
      },
      "185": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 75
        }
      },
      "186": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 282,
          column: 10
        }
      },
      "187": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 49
        }
      },
      "188": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "189": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 40
        }
      },
      "190": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 43
        }
      },
      "191": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 290,
          column: 10
        }
      },
      "192": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 51
        }
      },
      "193": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 54
        }
      },
      "194": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 47
        }
      },
      "195": {
        start: {
          line: 293,
          column: 33
        },
        end: {
          line: 293,
          column: 67
        }
      },
      "196": {
        start: {
          line: 294,
          column: 27
        },
        end: {
          line: 294,
          column: 56
        }
      },
      "197": {
        start: {
          line: 295,
          column: 21
        },
        end: {
          line: 295,
          column: 40
        }
      },
      "198": {
        start: {
          line: 296,
          column: 23
        },
        end: {
          line: 296,
          column: 44
        }
      },
      "199": {
        start: {
          line: 297,
          column: 22
        },
        end: {
          line: 297,
          column: 42
        }
      },
      "200": {
        start: {
          line: 298,
          column: 25
        },
        end: {
          line: 298,
          column: 48
        }
      },
      "201": {
        start: {
          line: 299,
          column: 23
        },
        end: {
          line: 299,
          column: 44
        }
      },
      "202": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 306,
          column: 10
        }
      },
      "203": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 327,
          column: 10
        }
      },
      "204": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 81
        }
      },
      "205": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 57
        }
      },
      "206": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 56
        }
      },
      "207": {
        start: {
          line: 336,
          column: 23
        },
        end: {
          line: 338,
          column: 10
        }
      },
      "208": {
        start: {
          line: 337,
          column: 44
        },
        end: {
          line: 337,
          column: 67
        }
      },
      "209": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 351,
          column: 11
        }
      },
      "210": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 48
        }
      },
      "211": {
        start: {
          line: 341,
          column: 26
        },
        end: {
          line: 341,
          column: 170
        }
      },
      "212": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 39
        }
      },
      "213": {
        start: {
          line: 344,
          column: 32
        },
        end: {
          line: 344,
          column: 117
        }
      },
      "214": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 57
        }
      },
      "215": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 76
        }
      },
      "216": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 348,
          column: 88
        }
      },
      "217": {
        start: {
          line: 348,
          column: 61
        },
        end: {
          line: 348,
          column: 79
        }
      },
      "218": {
        start: {
          line: 349,
          column: 27
        },
        end: {
          line: 349,
          column: 109
        }
      },
      "219": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 48
        }
      },
      "220": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "221": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 72
        }
      },
      "222": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 52
        }
      },
      "223": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 430,
          column: 11
        }
      },
      "224": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 81
        }
      },
      "225": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 64
        }
      },
      "226": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 429,
          column: 13
        }
      },
      "227": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 81
        }
      },
      "228": {
        start: {
          line: 365,
          column: 41
        },
        end: {
          line: 365,
          column: 129
        }
      },
      "229": {
        start: {
          line: 366,
          column: 37
        },
        end: {
          line: 366,
          column: 128
        }
      },
      "230": {
        start: {
          line: 367,
          column: 38
        },
        end: {
          line: 367,
          column: 127
        }
      },
      "231": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 369,
          column: 67
        }
      },
      "232": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 67
        }
      },
      "233": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 371,
          column: 61
        }
      },
      "234": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 61
        }
      },
      "235": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 414,
          column: 17
        }
      },
      "236": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 413,
          column: 21
        }
      },
      "237": {
        start: {
          line: 374,
          column: 24
        },
        end: {
          line: 382,
          column: 25
        }
      },
      "238": {
        start: {
          line: 375,
          column: 45
        },
        end: {
          line: 375,
          column: 62
        }
      },
      "239": {
        start: {
          line: 376,
          column: 46
        },
        end: {
          line: 376,
          column: 159
        }
      },
      "240": {
        start: {
          line: 376,
          column: 96
        },
        end: {
          line: 376,
          column: 147
        }
      },
      "241": {
        start: {
          line: 377,
          column: 28
        },
        end: {
          line: 380,
          column: 31
        }
      },
      "242": {
        start: {
          line: 381,
          column: 28
        },
        end: {
          line: 381,
          column: 54
        }
      },
      "243": {
        start: {
          line: 384,
          column: 25
        },
        end: {
          line: 413,
          column: 21
        }
      },
      "244": {
        start: {
          line: 385,
          column: 24
        },
        end: {
          line: 385,
          column: 101
        }
      },
      "245": {
        start: {
          line: 386,
          column: 24
        },
        end: {
          line: 386,
          column: 43
        }
      },
      "246": {
        start: {
          line: 388,
          column: 25
        },
        end: {
          line: 413,
          column: 21
        }
      },
      "247": {
        start: {
          line: 389,
          column: 24
        },
        end: {
          line: 399,
          column: 25
        }
      },
      "248": {
        start: {
          line: 390,
          column: 28
        },
        end: {
          line: 398,
          column: 31
        }
      },
      "249": {
        start: {
          line: 393,
          column: 32
        },
        end: {
          line: 397,
          column: 33
        }
      },
      "250": {
        start: {
          line: 395,
          column: 36
        },
        end: {
          line: 395,
          column: 116
        }
      },
      "251": {
        start: {
          line: 396,
          column: 36
        },
        end: {
          line: 396,
          column: 58
        }
      },
      "252": {
        start: {
          line: 401,
          column: 25
        },
        end: {
          line: 413,
          column: 21
        }
      },
      "253": {
        start: {
          line: 402,
          column: 24
        },
        end: {
          line: 402,
          column: 41
        }
      },
      "254": {
        start: {
          line: 404,
          column: 25
        },
        end: {
          line: 413,
          column: 21
        }
      },
      "255": {
        start: {
          line: 406,
          column: 25
        },
        end: {
          line: 413,
          column: 21
        }
      },
      "256": {
        start: {
          line: 408,
          column: 24
        },
        end: {
          line: 408,
          column: 86
        }
      },
      "257": {
        start: {
          line: 409,
          column: 24
        },
        end: {
          line: 409,
          column: 61
        }
      },
      "258": {
        start: {
          line: 411,
          column: 25
        },
        end: {
          line: 413,
          column: 21
        }
      },
      "259": {
        start: {
          line: 412,
          column: 24
        },
        end: {
          line: 412,
          column: 55
        }
      },
      "260": {
        start: {
          line: 416,
          column: 17
        },
        end: {
          line: 429,
          column: 13
        }
      },
      "261": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 417,
          column: 81
        }
      },
      "262": {
        start: {
          line: 418,
          column: 30
        },
        end: {
          line: 418,
          column: 112
        }
      },
      "263": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 90
        }
      },
      "264": {
        start: {
          line: 420,
          column: 37
        },
        end: {
          line: 420,
          column: 118
        }
      },
      "265": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 421,
          column: 104
        }
      },
      "266": {
        start: {
          line: 422,
          column: 16
        },
        end: {
          line: 428,
          column: 17
        }
      },
      "267": {
        start: {
          line: 423,
          column: 40
        },
        end: {
          line: 423,
          column: 64
        }
      },
      "268": {
        start: {
          line: 424,
          column: 20
        },
        end: {
          line: 427,
          column: 21
        }
      },
      "269": {
        start: {
          line: 425,
          column: 42
        },
        end: {
          line: 425,
          column: 61
        }
      },
      "270": {
        start: {
          line: 426,
          column: 24
        },
        end: {
          line: 426,
          column: 53
        }
      },
      "271": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 450,
          column: 11
        }
      },
      "272": {
        start: {
          line: 434,
          column: 35
        },
        end: {
          line: 434,
          column: 124
        }
      },
      "273": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 65
        }
      },
      "274": {
        start: {
          line: 436,
          column: 27
        },
        end: {
          line: 439,
          column: 13
        }
      },
      "275": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 133
        }
      },
      "276": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 149
        }
      },
      "277": {
        start: {
          line: 442,
          column: 30
        },
        end: {
          line: 446,
          column: 41
        }
      },
      "278": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 125
        }
      },
      "279": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 69
        }
      },
      "280": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 81
        }
      },
      "281": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 478,
          column: 11
        }
      },
      "282": {
        start: {
          line: 454,
          column: 35
        },
        end: {
          line: 454,
          column: 124
        }
      },
      "283": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 68
        }
      },
      "284": {
        start: {
          line: 456,
          column: 24
        },
        end: {
          line: 456,
          column: 168
        }
      },
      "285": {
        start: {
          line: 458,
          column: 27
        },
        end: {
          line: 461,
          column: 13
        }
      },
      "286": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 133
        }
      },
      "287": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 149
        }
      },
      "288": {
        start: {
          line: 464,
          column: 34
        },
        end: {
          line: 464,
          column: 36
        }
      },
      "289": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 470,
          column: 13
        }
      },
      "290": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 466,
          column: 83
        }
      },
      "291": {
        start: {
          line: 469,
          column: 16
        },
        end: {
          line: 469,
          column: 83
        }
      },
      "292": {
        start: {
          line: 471,
          column: 30
        },
        end: {
          line: 474,
          column: 75
        }
      },
      "293": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 125
        }
      },
      "294": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 69
        }
      },
      "295": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 81
        }
      },
      "296": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 71
        }
      },
      "297": {
        start: {
          line: 482,
          column: 24
        },
        end: {
          line: 482,
          column: 109
        }
      },
      "298": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 486,
          column: 11
        }
      },
      "299": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 487,
          column: 27
        }
      },
      "300": {
        start: {
          line: 490,
          column: 0
        },
        end: {
          line: 490,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 5,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 4,
            column: 58
          },
          end: {
            line: 4,
            column: 59
          }
        },
        loc: {
          start: {
            line: 4,
            column: 69
          },
          end: {
            line: 4,
            column: 85
          }
        },
        line: 4
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 5,
            column: 6
          },
          end: {
            line: 5,
            column: 7
          }
        },
        loc: {
          start: {
            line: 5,
            column: 28
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 5
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 9,
            column: 80
          },
          end: {
            line: 9,
            column: 81
          }
        },
        loc: {
          start: {
            line: 9,
            column: 95
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 11,
            column: 5
          },
          end: {
            line: 11,
            column: 6
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 14,
            column: 50
          },
          end: {
            line: 14,
            column: 51
          }
        },
        loc: {
          start: {
            line: 14,
            column: 65
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 14
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 45
          }
        },
        loc: {
          start: {
            line: 21,
            column: 89
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 21
      },
      "7": {
        name: "adopt",
        decl: {
          start: {
            line: 22,
            column: 13
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 112
          }
        },
        line: 22
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 22,
            column: 70
          },
          end: {
            line: 22,
            column: 71
          }
        },
        loc: {
          start: {
            line: 22,
            column: 89
          },
          end: {
            line: 22,
            column: 108
          }
        },
        line: 22
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 23,
            column: 36
          },
          end: {
            line: 23,
            column: 37
          }
        },
        loc: {
          start: {
            line: 23,
            column: 63
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 23
      },
      "10": {
        name: "fulfilled",
        decl: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 26
          }
        },
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 24,
            column: 99
          }
        },
        line: 24
      },
      "11": {
        name: "rejected",
        decl: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 25,
            column: 102
          }
        },
        line: 25
      },
      "12": {
        name: "step",
        decl: {
          start: {
            line: 26,
            column: 17
          },
          end: {
            line: 26,
            column: 21
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 118
          }
        },
        line: 26
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 30,
            column: 57
          }
        },
        loc: {
          start: {
            line: 30,
            column: 71
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 30
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 49
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 64,
            column: 36
          }
        },
        loc: {
          start: {
            line: 64,
            column: 47
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 64
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 26
          }
        },
        loc: {
          start: {
            line: 67,
            column: 31
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 67
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 70,
            column: 26
          }
        },
        loc: {
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 72,
            column: 9
          }
        },
        line: 70
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 73,
            column: 33
          }
        },
        loc: {
          start: {
            line: 73,
            column: 38
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 73
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 76,
            column: 42
          },
          end: {
            line: 76,
            column: 43
          }
        },
        loc: {
          start: {
            line: 76,
            column: 62
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 76
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 79,
            column: 35
          },
          end: {
            line: 79,
            column: 36
          }
        },
        loc: {
          start: {
            line: 79,
            column: 48
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 79
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 82,
            column: 32
          },
          end: {
            line: 82,
            column: 33
          }
        },
        loc: {
          start: {
            line: 82,
            column: 43
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 82
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 86,
            column: 32
          },
          end: {
            line: 86,
            column: 33
          }
        },
        loc: {
          start: {
            line: 86,
            column: 49
          },
          end: {
            line: 89,
            column: 17
          }
        },
        line: 86
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 34
          }
        },
        loc: {
          start: {
            line: 97,
            column: 39
          },
          end: {
            line: 100,
            column: 9
          }
        },
        line: 97
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 101,
            column: 33
          },
          end: {
            line: 101,
            column: 34
          }
        },
        loc: {
          start: {
            line: 101,
            column: 39
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 101
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 31
          }
        },
        loc: {
          start: {
            line: 107,
            column: 49
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 107
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 120,
            column: 29
          },
          end: {
            line: 120,
            column: 30
          }
        },
        loc: {
          start: {
            line: 120,
            column: 57
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 120
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 142,
            column: 30
          }
        },
        loc: {
          start: {
            line: 142,
            column: 41
          },
          end: {
            line: 157,
            column: 9
          }
        },
        line: 142
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 158,
            column: 31
          },
          end: {
            line: 158,
            column: 32
          }
        },
        loc: {
          start: {
            line: 158,
            column: 66
          },
          end: {
            line: 175,
            column: 10
          }
        },
        line: 158
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 158,
            column: 98
          },
          end: {
            line: 158,
            column: 99
          }
        },
        loc: {
          start: {
            line: 158,
            column: 111
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 158
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 176,
            column: 40
          },
          end: {
            line: 176,
            column: 41
          }
        },
        loc: {
          start: {
            line: 176,
            column: 46
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 176
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 27
          }
        },
        loc: {
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 203,
            column: 9
          }
        },
        line: 186
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 204,
            column: 35
          }
        },
        loc: {
          start: {
            line: 204,
            column: 40
          },
          end: {
            line: 219,
            column: 9
          }
        },
        line: 204
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 220,
            column: 24
          },
          end: {
            line: 220,
            column: 25
          }
        },
        loc: {
          start: {
            line: 220,
            column: 30
          },
          end: {
            line: 239,
            column: 10
          }
        },
        line: 220
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 220,
            column: 62
          },
          end: {
            line: 220,
            column: 63
          }
        },
        loc: {
          start: {
            line: 220,
            column: 75
          },
          end: {
            line: 239,
            column: 9
          }
        },
        line: 220
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 241,
            column: 26
          },
          end: {
            line: 241,
            column: 27
          }
        },
        loc: {
          start: {
            line: 241,
            column: 36
          },
          end: {
            line: 243,
            column: 13
          }
        },
        line: 241
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 246,
            column: 26
          },
          end: {
            line: 246,
            column: 27
          }
        },
        loc: {
          start: {
            line: 246,
            column: 36
          },
          end: {
            line: 248,
            column: 13
          }
        },
        line: 246
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 251,
            column: 21
          },
          end: {
            line: 251,
            column: 22
          }
        },
        loc: {
          start: {
            line: 251,
            column: 27
          },
          end: {
            line: 251,
            column: 91
          }
        },
        line: 251
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 254,
            column: 21
          },
          end: {
            line: 254,
            column: 22
          }
        },
        loc: {
          start: {
            line: 254,
            column: 27
          },
          end: {
            line: 254,
            column: 43
          }
        },
        line: 254
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 257,
            column: 21
          },
          end: {
            line: 257,
            column: 22
          }
        },
        loc: {
          start: {
            line: 257,
            column: 27
          },
          end: {
            line: 257,
            column: 43
          }
        },
        line: 257
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 260,
            column: 21
          },
          end: {
            line: 260,
            column: 22
          }
        },
        loc: {
          start: {
            line: 260,
            column: 27
          },
          end: {
            line: 260,
            column: 64
          }
        },
        line: 260
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 263,
            column: 21
          },
          end: {
            line: 263,
            column: 22
          }
        },
        loc: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 266,
            column: 13
          }
        },
        line: 263
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 269,
            column: 21
          },
          end: {
            line: 269,
            column: 22
          }
        },
        loc: {
          start: {
            line: 269,
            column: 27
          },
          end: {
            line: 269,
            column: 50
          }
        },
        line: 269
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 272,
            column: 21
          },
          end: {
            line: 272,
            column: 22
          }
        },
        loc: {
          start: {
            line: 272,
            column: 27
          },
          end: {
            line: 272,
            column: 58
          }
        },
        line: 272
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 275,
            column: 21
          },
          end: {
            line: 275,
            column: 22
          }
        },
        loc: {
          start: {
            line: 275,
            column: 27
          },
          end: {
            line: 275,
            column: 42
          }
        },
        line: 275
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 277,
            column: 32
          },
          end: {
            line: 277,
            column: 33
          }
        },
        loc: {
          start: {
            line: 277,
            column: 43
          },
          end: {
            line: 279,
            column: 9
          }
        },
        line: 277
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 280,
            column: 32
          },
          end: {
            line: 280,
            column: 33
          }
        },
        loc: {
          start: {
            line: 280,
            column: 43
          },
          end: {
            line: 282,
            column: 9
          }
        },
        line: 280
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 283,
            column: 35
          },
          end: {
            line: 283,
            column: 36
          }
        },
        loc: {
          start: {
            line: 283,
            column: 41
          },
          end: {
            line: 286,
            column: 9
          }
        },
        line: 283
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 287,
            column: 39
          },
          end: {
            line: 287,
            column: 40
          }
        },
        loc: {
          start: {
            line: 287,
            column: 45
          },
          end: {
            line: 290,
            column: 9
          }
        },
        line: 287
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        loc: {
          start: {
            line: 335,
            column: 24
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 335
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 337,
            column: 38
          },
          end: {
            line: 337,
            column: 39
          }
        },
        loc: {
          start: {
            line: 337,
            column: 44
          },
          end: {
            line: 337,
            column: 67
          }
        },
        line: 337
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 339,
            column: 47
          },
          end: {
            line: 339,
            column: 48
          }
        },
        loc: {
          start: {
            line: 339,
            column: 60
          },
          end: {
            line: 351,
            column: 9
          }
        },
        line: 339
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 348,
            column: 55
          },
          end: {
            line: 348,
            column: 56
          }
        },
        loc: {
          start: {
            line: 348,
            column: 61
          },
          end: {
            line: 348,
            column: 79
          }
        },
        line: 348
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 27
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 353
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 354,
            column: 47
          },
          end: {
            line: 354,
            column: 48
          }
        },
        loc: {
          start: {
            line: 354,
            column: 60
          },
          end: {
            line: 357,
            column: 9
          }
        },
        line: 354
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 27
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 359
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 360,
            column: 47
          },
          end: {
            line: 360,
            column: 48
          }
        },
        loc: {
          start: {
            line: 360,
            column: 60
          },
          end: {
            line: 430,
            column: 9
          }
        },
        line: 360
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 376,
            column: 86
          },
          end: {
            line: 376,
            column: 87
          }
        },
        loc: {
          start: {
            line: 376,
            column: 96
          },
          end: {
            line: 376,
            column: 147
          }
        },
        line: 376
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 392,
            column: 31
          },
          end: {
            line: 392,
            column: 32
          }
        },
        loc: {
          start: {
            line: 392,
            column: 37
          },
          end: {
            line: 398,
            column: 29
          }
        },
        line: 392
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 432,
            column: 5
          }
        },
        loc: {
          start: {
            line: 432,
            column: 18
          },
          end: {
            line: 451,
            column: 5
          }
        },
        line: 432
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 433,
            column: 47
          },
          end: {
            line: 433,
            column: 48
          }
        },
        loc: {
          start: {
            line: 433,
            column: 60
          },
          end: {
            line: 450,
            column: 9
          }
        },
        line: 433
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 452,
            column: 4
          },
          end: {
            line: 452,
            column: 5
          }
        },
        loc: {
          start: {
            line: 452,
            column: 21
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 452
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 453,
            column: 47
          },
          end: {
            line: 453,
            column: 48
          }
        },
        loc: {
          start: {
            line: 453,
            column: 60
          },
          end: {
            line: 478,
            column: 9
          }
        },
        line: 453
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 36
          },
          end: {
            line: 488,
            column: 5
          }
        },
        line: 480
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 8,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 8,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 8,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 5,
            column: 1
          }
        }, {
          start: {
            line: 5,
            column: 6
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "4": {
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 13,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 26
          },
          end: {
            line: 9,
            column: 30
          }
        }, {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 57
          }
        }, {
          start: {
            line: 9,
            column: 63
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 9
      },
      "5": {
        loc: {
          start: {
            line: 9,
            column: 63
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 80
          },
          end: {
            line: 11,
            column: 1
          }
        }, {
          start: {
            line: 11,
            column: 5
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 9
      },
      "6": {
        loc: {
          start: {
            line: 14,
            column: 19
          },
          end: {
            line: 20,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 24
          }
        }, {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 14,
            column: 45
          }
        }, {
          start: {
            line: 14,
            column: 50
          },
          end: {
            line: 20,
            column: 1
          }
        }],
        line: 14
      },
      "7": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "8": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 11
          }
        }, {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 29
          }
        }],
        line: 15
      },
      "9": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 131
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 131
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "10": {
        loc: {
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 131
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 131
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "11": {
        loc: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 59
          }
        }, {
          start: {
            line: 17,
            column: 63
          },
          end: {
            line: 17,
            column: 97
          }
        }],
        line: 17
      },
      "12": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 29,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 21,
            column: 21
          }
        }, {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 39
          }
        }, {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 29,
            column: 1
          }
        }],
        line: 21
      },
      "13": {
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 56
          },
          end: {
            line: 22,
            column: 61
          }
        }, {
          start: {
            line: 22,
            column: 64
          },
          end: {
            line: 22,
            column: 109
          }
        }],
        line: 22
      },
      "14": {
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 23,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 23,
            column: 17
          }
        }, {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 33
          }
        }],
        line: 23
      },
      "15": {
        loc: {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 26,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 26,
            column: 67
          }
        }, {
          start: {
            line: 26,
            column: 70
          },
          end: {
            line: 26,
            column: 115
          }
        }],
        line: 26
      },
      "16": {
        loc: {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 61
          }
        }, {
          start: {
            line: 27,
            column: 65
          },
          end: {
            line: 27,
            column: 67
          }
        }],
        line: 27
      },
      "17": {
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 32,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 32,
            column: 1
          }
        }],
        line: 30
      },
      "18": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 31,
            column: 40
          }
        }, {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 61
          }
        }],
        line: 31
      },
      "19": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 15
          }
        }, {
          start: {
            line: 31,
            column: 19
          },
          end: {
            line: 31,
            column: 33
          }
        }],
        line: 31
      },
      "20": {
        loc: {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 65,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 65,
            column: 26
          }
        }, {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 49
          }
        }],
        line: 65
      },
      "21": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: 93,
            column: 17
          },
          end: {
            line: 95,
            column: 13
          }
        }],
        line: 83
      },
      "22": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 83,
            column: 34
          }
        }, {
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 83,
            column: 56
          }
        }],
        line: 83
      },
      "23": {
        loc: {
          start: {
            line: 88,
            column: 46
          },
          end: {
            line: 88,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 100
          },
          end: {
            line: 88,
            column: 106
          }
        }, {
          start: {
            line: 88,
            column: 109
          },
          end: {
            line: 88,
            column: 118
          }
        }],
        line: 88
      },
      "24": {
        loc: {
          start: {
            line: 88,
            column: 46
          },
          end: {
            line: 88,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 46
          },
          end: {
            line: 88,
            column: 80
          }
        }, {
          start: {
            line: 88,
            column: 84
          },
          end: {
            line: 88,
            column: 97
          }
        }],
        line: 88
      },
      "25": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "26": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: 124,
            column: 17
          },
          end: {
            line: 140,
            column: 13
          }
        }],
        line: 121
      },
      "27": {
        loc: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 31
          }
        }, {
          start: {
            line: 121,
            column: 35
          },
          end: {
            line: 121,
            column: 75
          }
        }],
        line: 121
      },
      "28": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        }, {
          start: {
            line: 181,
            column: 17
          },
          end: {
            line: 183,
            column: 13
          }
        }],
        line: 178
      },
      "29": {
        loc: {
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "30": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 237,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 237,
            column: 17
          }
        }, {
          start: {
            line: 235,
            column: 21
          },
          end: {
            line: 237,
            column: 17
          }
        }],
        line: 232
      },
      "31": {
        loc: {
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 429,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 429,
            column: 13
          }
        }, {
          start: {
            line: 416,
            column: 17
          },
          end: {
            line: 429,
            column: 13
          }
        }],
        line: 363
      },
      "32": {
        loc: {
          start: {
            line: 368,
            column: 16
          },
          end: {
            line: 369,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 16
          },
          end: {
            line: 369,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "33": {
        loc: {
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 371,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 371,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "34": {
        loc: {
          start: {
            line: 370,
            column: 20
          },
          end: {
            line: 370,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 370,
            column: 71
          },
          end: {
            line: 370,
            column: 77
          }
        }, {
          start: {
            line: 370,
            column: 80
          },
          end: {
            line: 370,
            column: 99
          }
        }],
        line: 370
      },
      "35": {
        loc: {
          start: {
            line: 370,
            column: 20
          },
          end: {
            line: 370,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 20
          },
          end: {
            line: 370,
            column: 41
          }
        }, {
          start: {
            line: 370,
            column: 45
          },
          end: {
            line: 370,
            column: 68
          }
        }],
        line: 370
      },
      "36": {
        loc: {
          start: {
            line: 372,
            column: 16
          },
          end: {
            line: 414,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 16
          },
          end: {
            line: 414,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "37": {
        loc: {
          start: {
            line: 373,
            column: 20
          },
          end: {
            line: 413,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 20
          },
          end: {
            line: 413,
            column: 21
          }
        }, {
          start: {
            line: 384,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }],
        line: 373
      },
      "38": {
        loc: {
          start: {
            line: 374,
            column: 24
          },
          end: {
            line: 382,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 24
          },
          end: {
            line: 382,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "39": {
        loc: {
          start: {
            line: 384,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }, {
          start: {
            line: 388,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }],
        line: 384
      },
      "40": {
        loc: {
          start: {
            line: 388,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }, {
          start: {
            line: 401,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }],
        line: 388
      },
      "41": {
        loc: {
          start: {
            line: 389,
            column: 24
          },
          end: {
            line: 399,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 24
          },
          end: {
            line: 399,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "42": {
        loc: {
          start: {
            line: 393,
            column: 32
          },
          end: {
            line: 397,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 32
          },
          end: {
            line: 397,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "43": {
        loc: {
          start: {
            line: 393,
            column: 36
          },
          end: {
            line: 393,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 36
          },
          end: {
            line: 393,
            column: 56
          }
        }, {
          start: {
            line: 393,
            column: 60
          },
          end: {
            line: 393,
            column: 93
          }
        }],
        line: 393
      },
      "44": {
        loc: {
          start: {
            line: 401,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }, {
          start: {
            line: 404,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }],
        line: 401
      },
      "45": {
        loc: {
          start: {
            line: 404,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }, {
          start: {
            line: 406,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }],
        line: 404
      },
      "46": {
        loc: {
          start: {
            line: 406,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }, {
          start: {
            line: 411,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }],
        line: 406
      },
      "47": {
        loc: {
          start: {
            line: 411,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 25
          },
          end: {
            line: 413,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "48": {
        loc: {
          start: {
            line: 416,
            column: 17
          },
          end: {
            line: 429,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 17
          },
          end: {
            line: 429,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "49": {
        loc: {
          start: {
            line: 422,
            column: 16
          },
          end: {
            line: 428,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 16
          },
          end: {
            line: 428,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "50": {
        loc: {
          start: {
            line: 424,
            column: 20
          },
          end: {
            line: 427,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 20
          },
          end: {
            line: 427,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "51": {
        loc: {
          start: {
            line: 424,
            column: 24
          },
          end: {
            line: 424,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 24
          },
          end: {
            line: 424,
            column: 35
          }
        }, {
          start: {
            line: 424,
            column: 39
          },
          end: {
            line: 424,
            column: 55
          }
        }],
        line: 424
      },
      "52": {
        loc: {
          start: {
            line: 465,
            column: 12
          },
          end: {
            line: 470,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 465,
            column: 12
          },
          end: {
            line: 470,
            column: 13
          }
        }, {
          start: {
            line: 468,
            column: 17
          },
          end: {
            line: 470,
            column: 13
          }
        }],
        line: 465
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      file: "/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/ChatViewController.tsx",
      sources: ["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/src/ChatViewController.tsx"],
      names: [],
      mappings: "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",
      sourcesContent: ["import { IBlock } from \"../../../framework/src/IBlock\";\nimport { Message } from \"../../../framework/src/Message\";\nimport { BlockComponent } from \"../../../framework/src/BlockComponent\";\nimport MessageEnum, {\n  getName,\n} from \"../../../framework/src/Messages/MessageEnum\";\nimport { runEngine } from \"../../../framework/src/RunEngine\";\n\n// Customizable Area Start\nimport React, { ChangeEvent } from \"react\";\nimport { AsyncStorage, Keyboard, ScrollView } from \"react-native\";\nimport DocumentPicker from \"react-native-document-picker\";\nimport {\n  InputProps\n} from \"@material-ui/core\";\nimport { UserResponse } from \"./ChatController\";\nimport { AsyncStorageKey } from \"../../../components/src/AppGlobals\";\nimport { APIConstant, APIEndPoint, APIRequest } from \"../../../framework/src/AppConstant\";\n// Customizable Area End\n\nexport const configJSON = require(\"./config\");\n\n// Customizable Area Start\nexport interface IChatData {\n  id: string;\n  attributes: {\n    id: number;\n    name: string;\n    is_notification_mute: boolean;\n    accounts_chats: [\n      {\n        id: string;\n        attributes: {\n          account_id: number;\n          muted: boolean;\n          unread_count: number;\n        };\n      }\n    ];\n    messages: IMessage[];\n  };\n  relationships: { accounts: { data: { id: string; type: string }[] } };\n}\n\nexport interface IMessage {\n  id: string;\n  type: \"conversation\";\n  attributes: {\n    id: number;\n    message: string;\n    user_profile_info_id: number;\n    conversation_id: number;\n    created_at: string;\n    updated_at: string;\n    is_mark_read: boolean;\n    profile_image: string | null;\n    user_name: string | null;\n  };\n}\n\nexport interface ReceiveUser {\n  userID: string,\n  userName: string,\n  userRole: string,\n  userPic: string,\n  userPoints: string,\n}\n// Customizable Area End\n\nexport interface Props {\n  navigation: any;\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\ninterface S {\n  // Customizable Area Start\n  token: string;\n  chatId: number;\n  message: string;\n  accountIdInput: string;\n  accountId: number;\n  chatData: IChatData | null;\n  isVisibleModal: boolean;\n  isVisiblePreviewModal: boolean;\n  imageUrl: string;\n  docRes: unknown;\n  keyboardHeight: number;\n  muted: boolean | null;\n  messageList: IMessage[];\n  receiverUserID: string;\n  receiverUserName: string;\n  receiverUserRole: string;\n  receiverUserPic: string;\n  receiverUserPoints: string;\n  // Customizable Area End\n}\n\ninterface SS {\n  id: string;\n  // Customizable Area Start\n  // Customizable Area End\n}\n\nexport default class ChatViewController extends BlockComponent<Props, S, SS> {\n  // Customizable Area Start\n  getChatApiCallId: string = \"\";\n  getChatListApiCallId: string = \"\";\n  addUserToChatApiCallId: string = \"\";\n  leaveChatApiCallId: string = \"\";\n  sendMessageApiCallId: string = \"\";\n  toggleMuteApiCallId: string = \"\";\n  updateReadMessageApiCallId: string = \"\";\n  refreshChatInterval: unknown;\n  scrollViewRef: React.RefObject<ScrollView>;\n  fileInputRef: React.RefObject<InputProps & { click: Function }>;\n  apiToken: string = \"\";\n  loginUserProfileId: string = \"\"\n  putReadMessageApiCallId: string = \"\";\n  chatTypeDM: boolean = true;\n  conversationID: string = \"\";\n  // Customizable Area End\n\n  constructor(props: Props) {\n    super(props);\n    this.receive = this.receive.bind(this);\n\n    // Customizable Area Start\n    const navigationParams = this.props.navigation.state.params;\n    let receiverUser = navigationParams.receiverUser;\n    let userID = receiverUser.userID\n    let userName = receiverUser.userName\n    let userPic = receiverUser.userPic\n    let userPoints = receiverUser.userPoints\n    let userRole = receiverUser.userRole\n    // Customizable Area End\n\n    this.subScribedMessages = [\n      // Customizable Area Start\n      // getName(MessageEnum.SessionResponseMessage),\n      getName(MessageEnum.RestAPIResponceMessage),\n      getName(MessageEnum.NavigationPayLoadMessage),\n      // Customizable Area End\n    ];\n\n    this.state = {\n      // Customizable Area Start\n      token: \"\",\n      chatId: 3,\n      message: \"\",\n      accountId: -1,\n      accountIdInput: \"\",\n      chatData: null,\n      isVisibleModal: false,\n      isVisiblePreviewModal: false,\n      imageUrl: \"\",\n      docRes: null,\n      keyboardHeight: 0,\n      muted: null,\n      messageList: [],\n      receiverUserID: userID,\n      receiverUserName: userName,\n      receiverUserRole: userRole,\n      receiverUserPic: userPic,\n      receiverUserPoints: userPoints,\n      // Customizable Area End\n    };\n\n    runEngine.attachBuildingBlock(this as IBlock, this.subScribedMessages);\n    // Customizable Area Start\n    this.scrollViewRef = React.createRef();\n    this.fileInputRef = React.createRef();\n    // Customizable Area End\n  }\n\n  // Customizable Area Start\n  async componentDidMount() {\n    super.componentDidMount();\n    const token = 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA'\n    // await AsyncStorage.getItem(AsyncStorageKey.headerToken);\n    this.apiToken = \"\" + token;\n    let userProfileId = await AsyncStorage.getItem(AsyncStorageKey.profileUserID);\n    this.loginUserProfileId = \"\" + userProfileId;\n    console.log(\"ChatViewController userProfileId \", userProfileId);\n    this.getChatList(),\n      this.refreshChatInterval = setInterval(\n        () => this.getChatList(),\n        30000\n      );\n    let isTypeDM = await AsyncStorage.getItem(AsyncStorageKey.chatTypeDm);\n    this.chatTypeDM = Boolean(isTypeDM);\n  }\n\n  async componentWillUnmount() {\n    console.log(\"Chat view controller - componentWillUnmount \");\n    clearInterval(this.refreshChatInterval as number);\n  }\n\n  isStringNullOrBlank = (string: string) => {\n    return !string || string.length === 0;\n  };\n\n  showModal = () => {\n    this.setState({ isVisibleModal: true });\n  };\n\n  hideModal = () => {\n    this.setState({ isVisibleModal: false });\n  };\n\n  hidePreviewModal = () => {\n    this.setState({ isVisiblePreviewModal: false, imageUrl: '', docRes: null });\n  };\n\n  handleAccountIdInputChange = (accountIdInput: string) => {\n    this.setState({ accountIdInput });\n  };\n\n  handleMessageChange = (message: string) => {\n    this.setState({ message });\n  };\n\n  handleFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value && event.target.files) {\n      const file = event.target.files[0] as Blob;\n      let reader = new FileReader();\n      reader.onload = (readerEvent) => {\n        this.setState({ imageUrl: readerEvent.target?.result as string, docRes: file, isVisiblePreviewModal: true });\n      };\n      reader.readAsDataURL(file);\n      this.setState({ docRes: file, isVisiblePreviewModal: true });\n    }\n    else {\n      this.setState({ imageUrl: \"\", docRes: null })\n    }\n  };\n\n  handleSendMessage = () => {\n    //this.sendChatMessage(this.state.chatId, this.state.message, this.state.imageUrl);\n    //this.setState({ message: \"\", imageUrl: \"\", isVisiblePreviewModal: false });\n  };\n\n  handleInsertImage = () => {\n    const refrence = this.fileInputRef.current;\n    if (refrence) {\n      refrence.click();\n    }\n  };\n\n  getChatDetails = (token: string, chatId: number) => {\n    console.log(\"Chat details API getChatDetails \");\n\n    const header = {\n      \"Content-Type\": configJSON.apiContentType,\n      token,\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.getChatApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.showChatApiEndPoint}/${chatId}`\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.getApiMethod\n    );\n\n    //runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  addUserToChat = (accountIdInput: string, chatId: number) => {\n    if (!accountIdInput || this.isStringNullOrBlank(accountIdInput)) {\n      this.showAlert(\n        configJSON.errorTitle,\n        configJSON.errorAllFieldsAreMandatory,\n        \"\"\n      );\n    } else {\n      const header = {\n        \"Content-Type\": configJSON.apiContentType,\n        token: this.state.token,\n      };\n      const bodyData = {\n        accounts_id: [Number(accountIdInput)],\n        chat_id: Number(chatId),\n      };\n      const requestMessage = new Message(\n        getName(MessageEnum.RestAPIRequestMessage)\n      );\n\n      this.addUserToChatApiCallId = requestMessage.messageId;\n\n      requestMessage.addData(\n        getName(MessageEnum.RestAPIResponceEndPointMessage),\n        configJSON.addUserToChatApiEndPoint\n      );\n      requestMessage.addData(\n        getName(MessageEnum.RestAPIRequestHeaderMessage),\n        JSON.stringify(header)\n      );\n      requestMessage.addData(\n        getName(MessageEnum.RestAPIRequestBodyMessage),\n        JSON.stringify(bodyData)\n      );\n      requestMessage.addData(\n        getName(MessageEnum.RestAPIRequestMethodMessage),\n        configJSON.postApiMethod\n      );\n\n      //runEngine.sendMessage(requestMessage.id, requestMessage);\n    }\n  };\n\n  leaveChatRoom = (chatId: number) => {\n    const header = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.state.token,\n    };\n    const bodyData = {\n      chat_id: parseInt(chatId + \"\", 10),\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.leaveChatApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      configJSON.leaveChatApiEndPoint\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(bodyData)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.postApiMethod\n    );\n\n    //runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  sendChatMessage = async (receiverId: string, message: string, imageUrl?: string) => {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.sendMessageApiCallId = requestMessage.messageId;\n\n    let token = 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA'\n    // await AsyncStorage.getItem(AsyncStorageKey.headerToken);\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: token,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPostMethod\n    );\n\n    let apiEndPoint =\n      APIEndPoint.endPointAPIPostChat + APIConstant.markQuestion + APIConstant.paramsReceiverID + APIConstant.markEqual + receiverId\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n\n    let httpBody = { message: message };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(httpBody)\n    );\n    console.log(\"getUserList API request  \", requestMessage);\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  changeNotificationStatus = () => {\n    const { muted } = this.state;\n    if (muted === null) {\n      this.setState({ muted: true });\n    } else {\n      this.setState({ muted: !muted });\n    }\n    this.toggleMute();\n  };\n\n  toggleMute = () => {\n    console.log(\"toggleMute mute API toggleMute \")\n    const { chatId, muted } = this.state;\n    const header = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.state.token,\n    };\n    const bodyData = {\n      chat: { muted: !muted },\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.toggleMuteApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.updateChatApiEndPoint}/${chatId}`\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(bodyData)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.putApiMethod\n    );\n\n    //runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  updateReadMessages = () => {\n    const header = {\n      \"Content-Type\": configJSON.apiContentType,\n      token: this.state.token,\n    };\n    const bodyData = {\n      chat_id: this.state.chatId,\n    };\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n\n    this.updateReadMessageApiCallId = requestMessage.messageId;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      `${configJSON.updateReadMessageApiEndPoint}`\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestBodyMessage),\n      JSON.stringify(bodyData)\n    );\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      configJSON.putApiMethod\n    );\n\n    //runEngine.sendMessage(requestMessage.id, requestMessage);\n  };\n\n  openFile = async () => {\n    try {\n      const response = await DocumentPicker.pickSingle({\n        type: [\n          DocumentPicker.types.images,\n        ],\n      });\n\n      if (response) {\n        this.setState({ imageUrl: response.uri, isVisiblePreviewModal: true, docRes: response })\n      }\n    } catch (error) {\n      if (DocumentPicker.isCancel(error)) {\n        runEngine.debugLog(\"Message Recived\", \"User Canceled Picker\");\n      } else {\n        runEngine.debugLog(\"Message Recived\", error);\n      }\n    }\n  };\n\n  inputAccountIdProps = {\n    onChangeText: (text: string) => {\n      this.setState({ accountIdInput: text });\n    },\n  };\n\n  inputMessageProps = {\n    onChangeText: (text: string) => {\n      this.setState({ message: text });\n    },\n  };\n\n  btnAddAccountProps = {\n    onPress: () =>\n      this.addUserToChat(this.state.accountIdInput, this.state.chatId),\n  };\n\n  btnCloseModalProps = {\n    onPress: () => this.hideModal(),\n  };\n\n  btnShowAddModalProps = {\n    onPress: () => this.showModal(),\n  };\n\n  btnLeaveChatProps = {\n    onPress: () => this.leaveChatRoom(this.state.chatId),\n  };\n\n  btnSendMessageProps = {\n    onPress: () => {\n      this.sendChatMessage(this.state.receiverUserID, this.state.message);\n      this.setState({ message: \"\", imageUrl: \"\", isVisiblePreviewModal: false });\n    },\n  };\n\n  btnClosePreviewModal = {\n    onPress: () => this.hidePreviewModal(),\n  }\n\n  btnMuteProps = {\n    onPress: () => this.changeNotificationStatus(),\n  };\n\n  btnInsertPhotoProps = {\n    onPress: () => this.openFile(),\n  };\n\n  _keyboardDidShow = (event: { endCoordinates: { height: number } }) => {\n    this.setState({ keyboardHeight: event.endCoordinates.height });\n  };\n\n  _keyboardDidHide = (event: { endCoordinates: { height: number } }) => {\n    this.setState({ keyboardHeight: 0 });\n  };\n\n  async receive(from: string, message: Message) {\n    console.log(\"ChatViewController receive*** * **  * * * * * ** * : \");\n    console.log(\"ChatViewController receive \", message);\n\n    if (getName(MessageEnum.RestAPIResponceMessage) === message.id) {\n      console.log(\"ChatViewController receive RestAPIResponceMessage\");\n      const apiRequestCallId = message.getData(\n        getName(MessageEnum.RestAPIResponceDataMessage)\n      );\n      const responseJson = message.getData(\n        getName(MessageEnum.RestAPIResponceSuccessMessage)\n      );\n      const errorResponse = message.getData(\n        getName(MessageEnum.RestAPIResponceErrorMessage)\n      );\n      if (errorResponse) this.parseApiCatchErrorResponse(errorResponse);\n      if (responseJson?.errors) this.parseApiErrorResponse(responseJson);\n\n      if (responseJson) {\n        if (apiRequestCallId === this.getChatApiCallId) {\n          if (responseJson.data) {\n            const chatData = responseJson.data;\n            const { muted } = chatData.attributes.accounts_chats.find(\n              (item: { attributes: { account_id: number } }) =>\n                item.attributes.account_id === this.state.accountId\n            ).attributes;\n            this.setState({\n              chatData,\n              muted,\n            });\n            this.updateReadMessages();\n          }\n        }\n        else if (\n          apiRequestCallId === this.sendMessageApiCallId\n        ) {\n          console.log(\"get chatList API response sendMessageApiCallId \", responseJson);\n          this.getChatList();\n        }\n        else if (\n          apiRequestCallId === this.getChatListApiCallId\n        ) {\n          if (responseJson.data) {\n            this.setState(\n              {\n                messageList: responseJson.data\n              },\n              () => {\n                if (!this.conversationID && this.state.messageList.length > 0) {\n                  //This function call one time after the message list  \n                  this.conversationID = \"\" + this.state.messageList[0].attributes.conversation_id\n                  this.getReadMessage();\n                }\n              }\n            );\n          }\n        }\n        else if (\n          apiRequestCallId === this.addUserToChatApiCallId\n        ) {\n          this.hideModal();\n        }\n        else if (apiRequestCallId === this.toggleMuteApiCallId) {\n        }\n        else if (\n          apiRequestCallId === this.putReadMessageApiCallId\n        ) {\n          //Callback message for conversation screen \n          console.log(\"putReadMessageApiCallId call NavigationMessage\")\n          this.refreshConversationListScreen()\n        }\n        else if (apiRequestCallId === this.leaveChatApiCallId) {\n          this.props.navigation.goBack();\n        }\n      }\n    }\n    else if (getName(MessageEnum.SessionResponseMessage) === message.id) {\n      console.log(\"ChatViewController receive SessionResponseMessage\");\n      const token: string = message.getData(\n        getName(MessageEnum.SessionResponseToken)\n      );\n      runEngine.debugLog(\"ChatViewController receive TOKEN\", token);\n      const responseData: string = message.getData(\n        getName(MessageEnum.SessionResponseData)\n      );\n      runEngine.debugLog(\"ChatViewController receive responseData\", responseData);\n      if (responseData) {\n        const messageData = JSON.parse(responseData);\n        if (messageData && messageData.meta) {\n          const accountId: number = messageData.meta.id;\n          this.setState({ accountId });\n        }\n      }\n    }\n  }\n\n  doButtonBackPressed = () => {\n    console.log(\"back presses\");\n    this.props.navigation.goBack();\n  };\n\n  doButtonPressNewMessage = () => {\n    console.log(\"doButtonPressNewMessage\");\n    this.props.navigation.navigate(\"ChatNew\")\n  };\n\n  async getChatList() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.getChatListApiCallId = requestMessage.messageId;\n\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: this.apiToken,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpGetMethod\n    );\n\n    let apiEndPoint = APIEndPoint.endPointAPIGetDMChatList +\n      APIConstant.markQuestion +\n      APIConstant.paramsReceiverID +\n      APIConstant.markEqual +\n      this.state.receiverUserID;\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    console.log(\"getChatList API request  \", requestMessage);\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  async getReadMessage() {\n    const requestMessage = new Message(\n      getName(MessageEnum.RestAPIRequestMessage)\n    );\n    this.putReadMessageApiCallId = requestMessage.messageId;\n\n    let token = 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA';\n    // await AsyncStorage.getItem(AsyncStorageKey.headerToken);\n    const header = {\n      \"Content-Type\": APIRequest.jsonApiContentType,\n      token: token,\n    };\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestHeaderMessage),\n      JSON.stringify(header)\n    );\n\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIRequestMethodMessage),\n      APIRequest.httpPutMethod\n    );\n\n    let conversationKey = \"\";\n    if (this.chatTypeDM) {\n      conversationKey = APIConstant.paramsDMConversationID\n    } else {\n      conversationKey = APIConstant.paramsPMConversationID\n    }\n    let apiEndPoint = APIEndPoint.endPointAPIPutReadMessage\n      + APIConstant.markQuestion\n      + conversationKey\n      + APIConstant.markEqual + this.conversationID\n    requestMessage.addData(\n      getName(MessageEnum.RestAPIResponceEndPointMessage),\n      apiEndPoint\n    );\n    console.log(\"getUserList API request  \", requestMessage);\n    runEngine.sendMessage(requestMessage.id, requestMessage);\n  }\n\n  refreshConversationListScreen() {\n    console.log(\"refreshConversationListScreen NavigationMessage\")\n    const message = new Message(getName(MessageEnum.NavigationMessage));\n    message.addData(getName(MessageEnum.NavigationPropsMessage), {\n      messageType: \"readMessage\",\n      conversationID: this.conversationID\n    });\n    this.send(message);\n  }\n\n  // Customizable Area End\n}"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "79ed9efeeae966ff4022ea4895067e987e83a7ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ewh89ltqi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ewh89ltqi();
var __createBinding =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[0]++,
/* istanbul ignore next */
(cov_2ewh89ltqi().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2ewh89ltqi().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2ewh89ltqi().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2ewh89ltqi().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2ewh89ltqi().f[0]++;
  cov_2ewh89ltqi().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().b[2][0]++;
    cov_2ewh89ltqi().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2ewh89ltqi().b[2][1]++;
  }
  cov_2ewh89ltqi().s[3]++;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[1]++;
      cov_2ewh89ltqi().s[4]++;
      return m[k];
    }
  });
}) :
/* istanbul ignore next */
(cov_2ewh89ltqi().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2ewh89ltqi().f[2]++;
  cov_2ewh89ltqi().s[5]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().b[3][0]++;
    cov_2ewh89ltqi().s[6]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2ewh89ltqi().b[3][1]++;
  }
  cov_2ewh89ltqi().s[7]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[8]++,
/* istanbul ignore next */
(cov_2ewh89ltqi().b[4][0]++, this) &&
/* istanbul ignore next */
(cov_2ewh89ltqi().b[4][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2ewh89ltqi().b[4][2]++, Object.create ?
/* istanbul ignore next */
(cov_2ewh89ltqi().b[5][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2ewh89ltqi().f[3]++;
  cov_2ewh89ltqi().s[9]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2ewh89ltqi().b[5][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2ewh89ltqi().f[4]++;
  cov_2ewh89ltqi().s[10]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[11]++,
/* istanbul ignore next */
(cov_2ewh89ltqi().b[6][0]++, this) &&
/* istanbul ignore next */
(cov_2ewh89ltqi().b[6][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2ewh89ltqi().b[6][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2ewh89ltqi().f[5]++;
  cov_2ewh89ltqi().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2ewh89ltqi().b[8][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2ewh89ltqi().b[8][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().b[7][0]++;
    cov_2ewh89ltqi().s[13]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_2ewh89ltqi().b[7][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_2ewh89ltqi().s[14]++, {});
  /* istanbul ignore next */
  cov_2ewh89ltqi().s[15]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().b[9][0]++;
    cov_2ewh89ltqi().s[16]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[17]++;
      if (
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[11][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[11][1]++, Object.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[10][0]++;
        cov_2ewh89ltqi().s[18]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_2ewh89ltqi().b[10][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_2ewh89ltqi().b[9][1]++;
  }
  cov_2ewh89ltqi().s[19]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_2ewh89ltqi().s[20]++;
  return result;
}));
var __awaiter =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[21]++,
/* istanbul ignore next */
(cov_2ewh89ltqi().b[12][0]++, this) &&
/* istanbul ignore next */
(cov_2ewh89ltqi().b[12][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_2ewh89ltqi().b[12][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_2ewh89ltqi().f[6]++;
  function adopt(value) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[7]++;
    cov_2ewh89ltqi().s[22]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[13][0]++, value) :
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[13][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[8]++;
      cov_2ewh89ltqi().s[23]++;
      resolve(value);
    }));
  }
  /* istanbul ignore next */
  cov_2ewh89ltqi().s[24]++;
  return new (
  /* istanbul ignore next */
  (cov_2ewh89ltqi().b[14][0]++, P) ||
  /* istanbul ignore next */
  (cov_2ewh89ltqi().b[14][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[9]++;
    function fulfilled(value) {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[10]++;
      cov_2ewh89ltqi().s[25]++;
      try {
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[26]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[27]++;
        reject(e);
      }
    }
    function rejected(value) {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[11]++;
      cov_2ewh89ltqi().s[28]++;
      try {
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[29]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[30]++;
        reject(e);
      }
    }
    function step(result) {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[12]++;
      cov_2ewh89ltqi().s[31]++;
      result.done ?
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[15][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[15][1]++, adopt(result.value).then(fulfilled, rejected));
    }
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[32]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[16][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[16][1]++, []))).next());
  });
}));
var __importDefault =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[33]++,
/* istanbul ignore next */
(cov_2ewh89ltqi().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_2ewh89ltqi().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2ewh89ltqi().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2ewh89ltqi().f[13]++;
  cov_2ewh89ltqi().s[34]++;
  return (
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[19][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[19][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[18][0]++, mod) :
    /* istanbul ignore next */
    (cov_2ewh89ltqi().b[18][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_2ewh89ltqi().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ewh89ltqi().s[36]++;
exports.configJSON = void 0;
const Message_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[37]++, require("../../../framework/src/Message"));
const BlockComponent_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[38]++, require("../../../framework/src/BlockComponent"));
const MessageEnum_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[39]++, __importStar(require("../../../framework/src/Messages/MessageEnum")));
const RunEngine_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[40]++, require("../../../framework/src/RunEngine"));
// Customizable Area Start
const react_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[41]++, __importDefault(require("react")));
const react_native_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[42]++, require("react-native"));
const react_native_document_picker_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[43]++, __importDefault(require("react-native-document-picker")));
const AppGlobals_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[44]++, require("../../../components/src/AppGlobals"));
const AppConstant_1 =
/* istanbul ignore next */
(cov_2ewh89ltqi().s[45]++, require("../../../framework/src/AppConstant"));
// Customizable Area End
/* istanbul ignore next */
cov_2ewh89ltqi().s[46]++;
exports.configJSON = require("./config");
class ChatViewController extends
/* istanbul ignore next */
(BlockComponent_1.BlockComponent) {
  // Customizable Area End
  constructor(props) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[14]++;
    cov_2ewh89ltqi().s[47]++;
    super(props);
    // Customizable Area Start
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[48]++;
    this.getChatApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[49]++;
    this.getChatListApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[50]++;
    this.addUserToChatApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[51]++;
    this.leaveChatApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[52]++;
    this.sendMessageApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[53]++;
    this.toggleMuteApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[54]++;
    this.updateReadMessageApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[55]++;
    this.apiToken = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[56]++;
    this.loginUserProfileId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[57]++;
    this.putReadMessageApiCallId = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[58]++;
    this.chatTypeDM = true;
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[59]++;
    this.conversationID = "";
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[60]++;
    this.isStringNullOrBlank = string => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[15]++;
      cov_2ewh89ltqi().s[61]++;
      return (
        /* istanbul ignore next */
        (cov_2ewh89ltqi().b[20][0]++, !string) ||
        /* istanbul ignore next */
        (cov_2ewh89ltqi().b[20][1]++, string.length === 0)
      );
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[62]++;
    this.showModal = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[16]++;
      cov_2ewh89ltqi().s[63]++;
      this.setState({
        isVisibleModal: true
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[64]++;
    this.hideModal = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[17]++;
      cov_2ewh89ltqi().s[65]++;
      this.setState({
        isVisibleModal: false
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[66]++;
    this.hidePreviewModal = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[18]++;
      cov_2ewh89ltqi().s[67]++;
      this.setState({
        isVisiblePreviewModal: false,
        imageUrl: '',
        docRes: null
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[68]++;
    this.handleAccountIdInputChange = accountIdInput => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[19]++;
      cov_2ewh89ltqi().s[69]++;
      this.setState({
        accountIdInput
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[70]++;
    this.handleMessageChange = message => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[20]++;
      cov_2ewh89ltqi().s[71]++;
      this.setState({
        message
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[72]++;
    this.handleFileChange = event => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[21]++;
      cov_2ewh89ltqi().s[73]++;
      if (
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[22][0]++, event.target.value) &&
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[22][1]++, event.target.files)) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[21][0]++;
        const file =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[74]++, event.target.files[0]);
        let reader =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[75]++, new FileReader());
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[76]++;
        reader.onload = readerEvent => {
          /* istanbul ignore next */
          cov_2ewh89ltqi().f[22]++;
          var _a;
          /* istanbul ignore next */
          cov_2ewh89ltqi().s[77]++;
          this.setState({
            imageUrl:
            /* istanbul ignore next */
            (cov_2ewh89ltqi().b[24][0]++, (_a = readerEvent.target) === null) ||
            /* istanbul ignore next */
            (cov_2ewh89ltqi().b[24][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_2ewh89ltqi().b[23][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2ewh89ltqi().b[23][1]++, _a.result),
            docRes: file,
            isVisiblePreviewModal: true
          });
        };
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[78]++;
        reader.readAsDataURL(file);
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[79]++;
        this.setState({
          docRes: file,
          isVisiblePreviewModal: true
        });
      } else {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[21][1]++;
        cov_2ewh89ltqi().s[80]++;
        this.setState({
          imageUrl: "",
          docRes: null
        });
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[81]++;
    this.handleSendMessage = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[23]++;
    } //this.sendChatMessage(this.state.chatId, this.state.message, this.state.imageUrl);
    //this.setState({ message: "", imageUrl: "", isVisiblePreviewModal: false });
    ;
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[82]++;
    this.handleInsertImage = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[24]++;
      const refrence =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[83]++, this.fileInputRef.current);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[84]++;
      if (refrence) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[25][0]++;
        cov_2ewh89ltqi().s[85]++;
        refrence.click();
      } else
      /* istanbul ignore next */
      {
        cov_2ewh89ltqi().b[25][1]++;
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[86]++;
    this.getChatDetails = (token, chatId) => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[25]++;
      cov_2ewh89ltqi().s[87]++;
      console.log("Chat details API getChatDetails ");
      const header =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[88]++, {
        "Content-Type": exports.configJSON.apiContentType,
        token
      });
      const requestMessage =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[89]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[90]++;
      this.getChatApiCallId = requestMessage.messageId;
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[91]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), `${exports.configJSON.showChatApiEndPoint}/${chatId}`);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[92]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[93]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), exports.configJSON.getApiMethod);
      //runEngine.sendMessage(requestMessage.id, requestMessage);
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[94]++;
    this.addUserToChat = (accountIdInput, chatId) => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[26]++;
      cov_2ewh89ltqi().s[95]++;
      if (
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[27][0]++, !accountIdInput) ||
      /* istanbul ignore next */
      (cov_2ewh89ltqi().b[27][1]++, this.isStringNullOrBlank(accountIdInput))) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[26][0]++;
        cov_2ewh89ltqi().s[96]++;
        this.showAlert(exports.configJSON.errorTitle, exports.configJSON.errorAllFieldsAreMandatory, "");
      } else {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[26][1]++;
        const header =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[97]++, {
          "Content-Type": exports.configJSON.apiContentType,
          token: this.state.token
        });
        const bodyData =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[98]++, {
          accounts_id: [Number(accountIdInput)],
          chat_id: Number(chatId)
        });
        const requestMessage =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[99]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[100]++;
        this.addUserToChatApiCallId = requestMessage.messageId;
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[101]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), exports.configJSON.addUserToChatApiEndPoint);
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[102]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[103]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestBodyMessage), JSON.stringify(bodyData));
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[104]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), exports.configJSON.postApiMethod);
        //runEngine.sendMessage(requestMessage.id, requestMessage);
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[105]++;
    this.leaveChatRoom = chatId => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[27]++;
      const header =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[106]++, {
        "Content-Type": exports.configJSON.apiContentType,
        token: this.state.token
      });
      const bodyData =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[107]++, {
        chat_id: parseInt(chatId + "", 10)
      });
      const requestMessage =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[108]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[109]++;
      this.leaveChatApiCallId = requestMessage.messageId;
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[110]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), exports.configJSON.leaveChatApiEndPoint);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[111]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[112]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestBodyMessage), JSON.stringify(bodyData));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[113]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), exports.configJSON.postApiMethod);
      //runEngine.sendMessage(requestMessage.id, requestMessage);
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[114]++;
    this.sendChatMessage = (receiverId, message, imageUrl) => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[28]++;
      cov_2ewh89ltqi().s[115]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[29]++;
        const requestMessage =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[116]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[117]++;
        this.sendMessageApiCallId = requestMessage.messageId;
        let token =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[118]++, 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA');
        // await AsyncStorage.getItem(AsyncStorageKey.headerToken);
        const header =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[119]++, {
          "Content-Type": AppConstant_1.APIRequest.jsonApiContentType,
          token: token
        });
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[120]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[121]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), AppConstant_1.APIRequest.httpPostMethod);
        let apiEndPoint =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[122]++, AppConstant_1.APIEndPoint.endPointAPIPostChat + AppConstant_1.APIConstant.markQuestion + AppConstant_1.APIConstant.paramsReceiverID + AppConstant_1.APIConstant.markEqual + receiverId);
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[123]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), apiEndPoint);
        let httpBody =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[124]++, {
          message: message
        });
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[125]++;
        requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestBodyMessage), JSON.stringify(httpBody));
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[126]++;
        console.log("getUserList API request  ", requestMessage);
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[127]++;
        RunEngine_1.runEngine.sendMessage(requestMessage.id, requestMessage);
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[128]++;
    this.changeNotificationStatus = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[30]++;
      const {
        muted
      } =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[129]++, this.state);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[130]++;
      if (muted === null) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[28][0]++;
        cov_2ewh89ltqi().s[131]++;
        this.setState({
          muted: true
        });
      } else {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[28][1]++;
        cov_2ewh89ltqi().s[132]++;
        this.setState({
          muted: !muted
        });
      }
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[133]++;
      this.toggleMute();
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[134]++;
    this.toggleMute = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[31]++;
      cov_2ewh89ltqi().s[135]++;
      console.log("toggleMute mute API toggleMute ");
      const {
        chatId,
        muted
      } =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[136]++, this.state);
      const header =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[137]++, {
        "Content-Type": exports.configJSON.apiContentType,
        token: this.state.token
      });
      const bodyData =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[138]++, {
        chat: {
          muted: !muted
        }
      });
      const requestMessage =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[139]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[140]++;
      this.toggleMuteApiCallId = requestMessage.messageId;
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[141]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), `${exports.configJSON.updateChatApiEndPoint}/${chatId}`);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[142]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[143]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestBodyMessage), JSON.stringify(bodyData));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[144]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), exports.configJSON.putApiMethod);
      //runEngine.sendMessage(requestMessage.id, requestMessage);
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[145]++;
    this.updateReadMessages = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[32]++;
      const header =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[146]++, {
        "Content-Type": exports.configJSON.apiContentType,
        token: this.state.token
      });
      const bodyData =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[147]++, {
        chat_id: this.state.chatId
      });
      const requestMessage =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[148]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[149]++;
      this.updateReadMessageApiCallId = requestMessage.messageId;
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[150]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), `${exports.configJSON.updateReadMessageApiEndPoint}`);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[151]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[152]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestBodyMessage), JSON.stringify(bodyData));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[153]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), exports.configJSON.putApiMethod);
      //runEngine.sendMessage(requestMessage.id, requestMessage);
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[154]++;
    this.openFile = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[33]++;
      cov_2ewh89ltqi().s[155]++;
      return __awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[34]++;
        cov_2ewh89ltqi().s[156]++;
        try {
          const response =
          /* istanbul ignore next */
          (cov_2ewh89ltqi().s[157]++, yield react_native_document_picker_1.default.pickSingle({
            type: [react_native_document_picker_1.default.types.images]
          }));
          /* istanbul ignore next */
          cov_2ewh89ltqi().s[158]++;
          if (response) {
            /* istanbul ignore next */
            cov_2ewh89ltqi().b[29][0]++;
            cov_2ewh89ltqi().s[159]++;
            this.setState({
              imageUrl: response.uri,
              isVisiblePreviewModal: true,
              docRes: response
            });
          } else
          /* istanbul ignore next */
          {
            cov_2ewh89ltqi().b[29][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_2ewh89ltqi().s[160]++;
          if (react_native_document_picker_1.default.isCancel(error)) {
            /* istanbul ignore next */
            cov_2ewh89ltqi().b[30][0]++;
            cov_2ewh89ltqi().s[161]++;
            RunEngine_1.runEngine.debugLog("Message Recived", "User Canceled Picker");
          } else {
            /* istanbul ignore next */
            cov_2ewh89ltqi().b[30][1]++;
            cov_2ewh89ltqi().s[162]++;
            RunEngine_1.runEngine.debugLog("Message Recived", error);
          }
        }
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[163]++;
    this.inputAccountIdProps = {
      onChangeText: text => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[35]++;
        cov_2ewh89ltqi().s[164]++;
        this.setState({
          accountIdInput: text
        });
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[165]++;
    this.inputMessageProps = {
      onChangeText: text => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[36]++;
        cov_2ewh89ltqi().s[166]++;
        this.setState({
          message: text
        });
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[167]++;
    this.btnAddAccountProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[37]++;
        cov_2ewh89ltqi().s[168]++;
        return this.addUserToChat(this.state.accountIdInput, this.state.chatId);
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[169]++;
    this.btnCloseModalProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[38]++;
        cov_2ewh89ltqi().s[170]++;
        return this.hideModal();
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[171]++;
    this.btnShowAddModalProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[39]++;
        cov_2ewh89ltqi().s[172]++;
        return this.showModal();
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[173]++;
    this.btnLeaveChatProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[40]++;
        cov_2ewh89ltqi().s[174]++;
        return this.leaveChatRoom(this.state.chatId);
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[175]++;
    this.btnSendMessageProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[41]++;
        cov_2ewh89ltqi().s[176]++;
        this.sendChatMessage(this.state.receiverUserID, this.state.message);
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[177]++;
        this.setState({
          message: "",
          imageUrl: "",
          isVisiblePreviewModal: false
        });
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[178]++;
    this.btnClosePreviewModal = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[42]++;
        cov_2ewh89ltqi().s[179]++;
        return this.hidePreviewModal();
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[180]++;
    this.btnMuteProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[43]++;
        cov_2ewh89ltqi().s[181]++;
        return this.changeNotificationStatus();
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[182]++;
    this.btnInsertPhotoProps = {
      onPress: () => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[44]++;
        cov_2ewh89ltqi().s[183]++;
        return this.openFile();
      }
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[184]++;
    this._keyboardDidShow = event => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[45]++;
      cov_2ewh89ltqi().s[185]++;
      this.setState({
        keyboardHeight: event.endCoordinates.height
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[186]++;
    this._keyboardDidHide = event => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[46]++;
      cov_2ewh89ltqi().s[187]++;
      this.setState({
        keyboardHeight: 0
      });
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[188]++;
    this.doButtonBackPressed = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[47]++;
      cov_2ewh89ltqi().s[189]++;
      console.log("back presses");
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[190]++;
      this.props.navigation.goBack();
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[191]++;
    this.doButtonPressNewMessage = () => {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[48]++;
      cov_2ewh89ltqi().s[192]++;
      console.log("doButtonPressNewMessage");
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[193]++;
      this.props.navigation.navigate("ChatNew");
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[194]++;
    this.receive = this.receive.bind(this);
    // Customizable Area Start
    const navigationParams =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[195]++, this.props.navigation.state.params);
    let receiverUser =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[196]++, navigationParams.receiverUser);
    let userID =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[197]++, receiverUser.userID);
    let userName =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[198]++, receiverUser.userName);
    let userPic =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[199]++, receiverUser.userPic);
    let userPoints =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[200]++, receiverUser.userPoints);
    let userRole =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[201]++, receiverUser.userRole);
    // Customizable Area End
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[202]++;
    this.subScribedMessages = [
    // Customizable Area Start
    // getName(MessageEnum.SessionResponseMessage),
    MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceMessage), MessageEnum_1.getName(MessageEnum_1.default.NavigationPayLoadMessage)];
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[203]++;
    this.state = {
      // Customizable Area Start
      token: "",
      chatId: 3,
      message: "",
      accountId: -1,
      accountIdInput: "",
      chatData: null,
      isVisibleModal: false,
      isVisiblePreviewModal: false,
      imageUrl: "",
      docRes: null,
      keyboardHeight: 0,
      muted: null,
      messageList: [],
      receiverUserID: userID,
      receiverUserName: userName,
      receiverUserRole: userRole,
      receiverUserPic: userPic,
      receiverUserPoints: userPoints
    };
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[204]++;
    RunEngine_1.runEngine.attachBuildingBlock(this, this.subScribedMessages);
    // Customizable Area Start
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[205]++;
    this.scrollViewRef = react_1.default.createRef();
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[206]++;
    this.fileInputRef = react_1.default.createRef();
    // Customizable Area End
  }
  // Customizable Area Start
  componentDidMount() {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[49]++;
    const _super =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[207]++, Object.create(null, {
      componentDidMount: {
        get: () => {
          /* istanbul ignore next */
          cov_2ewh89ltqi().f[50]++;
          cov_2ewh89ltqi().s[208]++;
          return super.componentDidMount;
        }
      }
    }));
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[209]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[51]++;
      cov_2ewh89ltqi().s[210]++;
      _super.componentDidMount.call(this);
      const token =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[211]++, 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA');
      // await AsyncStorage.getItem(AsyncStorageKey.headerToken);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[212]++;
      this.apiToken = "" + token;
      let userProfileId =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[213]++, yield react_native_1.AsyncStorage.getItem(AppGlobals_1.AsyncStorageKey.profileUserID));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[214]++;
      this.loginUserProfileId = "" + userProfileId;
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[215]++;
      console.log("ChatViewController userProfileId ", userProfileId);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[216]++;
      this.getChatList(), this.refreshChatInterval = setInterval(() => {
        /* istanbul ignore next */
        cov_2ewh89ltqi().f[52]++;
        cov_2ewh89ltqi().s[217]++;
        return this.getChatList();
      }, 30000);
      let isTypeDM =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[218]++, yield react_native_1.AsyncStorage.getItem(AppGlobals_1.AsyncStorageKey.chatTypeDm));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[219]++;
      this.chatTypeDM = Boolean(isTypeDM);
    });
  }
  componentWillUnmount() {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[53]++;
    cov_2ewh89ltqi().s[220]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[54]++;
      cov_2ewh89ltqi().s[221]++;
      console.log("Chat view controller - componentWillUnmount ");
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[222]++;
      clearInterval(this.refreshChatInterval);
    });
  }
  receive(from, message) {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[55]++;
    cov_2ewh89ltqi().s[223]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[56]++;
      cov_2ewh89ltqi().s[224]++;
      console.log("ChatViewController receive*** * **  * * * * * ** * : ");
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[225]++;
      console.log("ChatViewController receive ", message);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[226]++;
      if (MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceMessage) === message.id) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[31][0]++;
        cov_2ewh89ltqi().s[227]++;
        console.log("ChatViewController receive RestAPIResponceMessage");
        const apiRequestCallId =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[228]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceDataMessage)));
        const responseJson =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[229]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceSuccessMessage)));
        const errorResponse =
        /* istanbul ignore next */
        (cov_2ewh89ltqi().s[230]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceErrorMessage)));
        /* istanbul ignore next */
        cov_2ewh89ltqi().s[231]++;
        if (errorResponse) {
          /* istanbul ignore next */
          cov_2ewh89ltqi().b[32][0]++;
          cov_2ewh89ltqi().s[232]++;
          this.parseApiCatchErrorResponse(errorResponse);
        } else
        /* istanbul ignore next */
        {
          cov_2ewh89ltqi().b[32][1]++;
        }
        cov_2ewh89ltqi().s[233]++;
        if (
        /* istanbul ignore next */
        (cov_2ewh89ltqi().b[35][0]++, responseJson === null) ||
        /* istanbul ignore next */
        (cov_2ewh89ltqi().b[35][1]++, responseJson === void 0) ?
        /* istanbul ignore next */
        (cov_2ewh89ltqi().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2ewh89ltqi().b[34][1]++, responseJson.errors)) {
          /* istanbul ignore next */
          cov_2ewh89ltqi().b[33][0]++;
          cov_2ewh89ltqi().s[234]++;
          this.parseApiErrorResponse(responseJson);
        } else
        /* istanbul ignore next */
        {
          cov_2ewh89ltqi().b[33][1]++;
        }
        cov_2ewh89ltqi().s[235]++;
        if (responseJson) {
          /* istanbul ignore next */
          cov_2ewh89ltqi().b[36][0]++;
          cov_2ewh89ltqi().s[236]++;
          if (apiRequestCallId === this.getChatApiCallId) {
            /* istanbul ignore next */
            cov_2ewh89ltqi().b[37][0]++;
            cov_2ewh89ltqi().s[237]++;
            if (responseJson.data) {
              /* istanbul ignore next */
              cov_2ewh89ltqi().b[38][0]++;
              const chatData =
              /* istanbul ignore next */
              (cov_2ewh89ltqi().s[238]++, responseJson.data);
              const {
                muted
              } =
              /* istanbul ignore next */
              (cov_2ewh89ltqi().s[239]++, chatData.attributes.accounts_chats.find(item => {
                /* istanbul ignore next */
                cov_2ewh89ltqi().f[57]++;
                cov_2ewh89ltqi().s[240]++;
                return item.attributes.account_id === this.state.accountId;
              }).attributes);
              /* istanbul ignore next */
              cov_2ewh89ltqi().s[241]++;
              this.setState({
                chatData,
                muted
              });
              /* istanbul ignore next */
              cov_2ewh89ltqi().s[242]++;
              this.updateReadMessages();
            } else
            /* istanbul ignore next */
            {
              cov_2ewh89ltqi().b[38][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_2ewh89ltqi().b[37][1]++;
            cov_2ewh89ltqi().s[243]++;
            if (apiRequestCallId === this.sendMessageApiCallId) {
              /* istanbul ignore next */
              cov_2ewh89ltqi().b[39][0]++;
              cov_2ewh89ltqi().s[244]++;
              console.log("get chatList API response sendMessageApiCallId ", responseJson);
              /* istanbul ignore next */
              cov_2ewh89ltqi().s[245]++;
              this.getChatList();
            } else {
              /* istanbul ignore next */
              cov_2ewh89ltqi().b[39][1]++;
              cov_2ewh89ltqi().s[246]++;
              if (apiRequestCallId === this.getChatListApiCallId) {
                /* istanbul ignore next */
                cov_2ewh89ltqi().b[40][0]++;
                cov_2ewh89ltqi().s[247]++;
                if (responseJson.data) {
                  /* istanbul ignore next */
                  cov_2ewh89ltqi().b[41][0]++;
                  cov_2ewh89ltqi().s[248]++;
                  this.setState({
                    messageList: responseJson.data
                  }, () => {
                    /* istanbul ignore next */
                    cov_2ewh89ltqi().f[58]++;
                    cov_2ewh89ltqi().s[249]++;
                    if (
                    /* istanbul ignore next */
                    (cov_2ewh89ltqi().b[43][0]++, !this.conversationID) &&
                    /* istanbul ignore next */
                    (cov_2ewh89ltqi().b[43][1]++, this.state.messageList.length > 0)) {
                      /* istanbul ignore next */
                      cov_2ewh89ltqi().b[42][0]++;
                      cov_2ewh89ltqi().s[250]++;
                      //This function call one time after the message list  
                      this.conversationID = "" + this.state.messageList[0].attributes.conversation_id;
                      /* istanbul ignore next */
                      cov_2ewh89ltqi().s[251]++;
                      this.getReadMessage();
                    } else
                    /* istanbul ignore next */
                    {
                      cov_2ewh89ltqi().b[42][1]++;
                    }
                  });
                } else
                /* istanbul ignore next */
                {
                  cov_2ewh89ltqi().b[41][1]++;
                }
              } else {
                /* istanbul ignore next */
                cov_2ewh89ltqi().b[40][1]++;
                cov_2ewh89ltqi().s[252]++;
                if (apiRequestCallId === this.addUserToChatApiCallId) {
                  /* istanbul ignore next */
                  cov_2ewh89ltqi().b[44][0]++;
                  cov_2ewh89ltqi().s[253]++;
                  this.hideModal();
                } else {
                  /* istanbul ignore next */
                  cov_2ewh89ltqi().b[44][1]++;
                  cov_2ewh89ltqi().s[254]++;
                  if (apiRequestCallId === this.toggleMuteApiCallId) {
                    /* istanbul ignore next */
                    cov_2ewh89ltqi().b[45][0]++;
                  } else {
                    /* istanbul ignore next */
                    cov_2ewh89ltqi().b[45][1]++;
                    cov_2ewh89ltqi().s[255]++;
                    if (apiRequestCallId === this.putReadMessageApiCallId) {
                      /* istanbul ignore next */
                      cov_2ewh89ltqi().b[46][0]++;
                      cov_2ewh89ltqi().s[256]++;
                      //Callback message for conversation screen 
                      console.log("putReadMessageApiCallId call NavigationMessage");
                      /* istanbul ignore next */
                      cov_2ewh89ltqi().s[257]++;
                      this.refreshConversationListScreen();
                    } else {
                      /* istanbul ignore next */
                      cov_2ewh89ltqi().b[46][1]++;
                      cov_2ewh89ltqi().s[258]++;
                      if (apiRequestCallId === this.leaveChatApiCallId) {
                        /* istanbul ignore next */
                        cov_2ewh89ltqi().b[47][0]++;
                        cov_2ewh89ltqi().s[259]++;
                        this.props.navigation.goBack();
                      } else
                      /* istanbul ignore next */
                      {
                        cov_2ewh89ltqi().b[47][1]++;
                      }
                    }
                  }
                }
              }
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_2ewh89ltqi().b[36][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[31][1]++;
        cov_2ewh89ltqi().s[260]++;
        if (MessageEnum_1.getName(MessageEnum_1.default.SessionResponseMessage) === message.id) {
          /* istanbul ignore next */
          cov_2ewh89ltqi().b[48][0]++;
          cov_2ewh89ltqi().s[261]++;
          console.log("ChatViewController receive SessionResponseMessage");
          const token =
          /* istanbul ignore next */
          (cov_2ewh89ltqi().s[262]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.SessionResponseToken)));
          /* istanbul ignore next */
          cov_2ewh89ltqi().s[263]++;
          RunEngine_1.runEngine.debugLog("ChatViewController receive TOKEN", token);
          const responseData =
          /* istanbul ignore next */
          (cov_2ewh89ltqi().s[264]++, message.getData(MessageEnum_1.getName(MessageEnum_1.default.SessionResponseData)));
          /* istanbul ignore next */
          cov_2ewh89ltqi().s[265]++;
          RunEngine_1.runEngine.debugLog("ChatViewController receive responseData", responseData);
          /* istanbul ignore next */
          cov_2ewh89ltqi().s[266]++;
          if (responseData) {
            /* istanbul ignore next */
            cov_2ewh89ltqi().b[49][0]++;
            const messageData =
            /* istanbul ignore next */
            (cov_2ewh89ltqi().s[267]++, JSON.parse(responseData));
            /* istanbul ignore next */
            cov_2ewh89ltqi().s[268]++;
            if (
            /* istanbul ignore next */
            (cov_2ewh89ltqi().b[51][0]++, messageData) &&
            /* istanbul ignore next */
            (cov_2ewh89ltqi().b[51][1]++, messageData.meta)) {
              /* istanbul ignore next */
              cov_2ewh89ltqi().b[50][0]++;
              const accountId =
              /* istanbul ignore next */
              (cov_2ewh89ltqi().s[269]++, messageData.meta.id);
              /* istanbul ignore next */
              cov_2ewh89ltqi().s[270]++;
              this.setState({
                accountId
              });
            } else
            /* istanbul ignore next */
            {
              cov_2ewh89ltqi().b[50][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2ewh89ltqi().b[49][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2ewh89ltqi().b[48][1]++;
        }
      }
    });
  }
  getChatList() {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[59]++;
    cov_2ewh89ltqi().s[271]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[60]++;
      const requestMessage =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[272]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[273]++;
      this.getChatListApiCallId = requestMessage.messageId;
      const header =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[274]++, {
        "Content-Type": AppConstant_1.APIRequest.jsonApiContentType,
        token: this.apiToken
      });
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[275]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[276]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), AppConstant_1.APIRequest.httpGetMethod);
      let apiEndPoint =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[277]++, AppConstant_1.APIEndPoint.endPointAPIGetDMChatList + AppConstant_1.APIConstant.markQuestion + AppConstant_1.APIConstant.paramsReceiverID + AppConstant_1.APIConstant.markEqual + this.state.receiverUserID);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[278]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), apiEndPoint);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[279]++;
      console.log("getChatList API request  ", requestMessage);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[280]++;
      RunEngine_1.runEngine.sendMessage(requestMessage.id, requestMessage);
    });
  }
  getReadMessage() {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[61]++;
    cov_2ewh89ltqi().s[281]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ewh89ltqi().f[62]++;
      const requestMessage =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[282]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMessage)));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[283]++;
      this.putReadMessageApiCallId = requestMessage.messageId;
      let token =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[284]++, 'eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwiZXhwIjoxNzE0NTYwMzkyfQ.Bvwagj_ftnjQ8B8rf3CJIkyabfc4yPMQ7lLubxqs2l4NvbRHLKTGGB-X7zEHVIe-9qQddyo5JkpivrdtpvuyXA');
      // await AsyncStorage.getItem(AsyncStorageKey.headerToken);
      const header =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[285]++, {
        "Content-Type": AppConstant_1.APIRequest.jsonApiContentType,
        token: token
      });
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[286]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestHeaderMessage), JSON.stringify(header));
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[287]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIRequestMethodMessage), AppConstant_1.APIRequest.httpPutMethod);
      let conversationKey =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[288]++, "");
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[289]++;
      if (this.chatTypeDM) {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[52][0]++;
        cov_2ewh89ltqi().s[290]++;
        conversationKey = AppConstant_1.APIConstant.paramsDMConversationID;
      } else {
        /* istanbul ignore next */
        cov_2ewh89ltqi().b[52][1]++;
        cov_2ewh89ltqi().s[291]++;
        conversationKey = AppConstant_1.APIConstant.paramsPMConversationID;
      }
      let apiEndPoint =
      /* istanbul ignore next */
      (cov_2ewh89ltqi().s[292]++, AppConstant_1.APIEndPoint.endPointAPIPutReadMessage + AppConstant_1.APIConstant.markQuestion + conversationKey + AppConstant_1.APIConstant.markEqual + this.conversationID);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[293]++;
      requestMessage.addData(MessageEnum_1.getName(MessageEnum_1.default.RestAPIResponceEndPointMessage), apiEndPoint);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[294]++;
      console.log("getUserList API request  ", requestMessage);
      /* istanbul ignore next */
      cov_2ewh89ltqi().s[295]++;
      RunEngine_1.runEngine.sendMessage(requestMessage.id, requestMessage);
    });
  }
  refreshConversationListScreen() {
    /* istanbul ignore next */
    cov_2ewh89ltqi().f[63]++;
    cov_2ewh89ltqi().s[296]++;
    console.log("refreshConversationListScreen NavigationMessage");
    const message =
    /* istanbul ignore next */
    (cov_2ewh89ltqi().s[297]++, new Message_1.Message(MessageEnum_1.getName(MessageEnum_1.default.NavigationMessage)));
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[298]++;
    message.addData(MessageEnum_1.getName(MessageEnum_1.default.NavigationPropsMessage), {
      messageType: "readMessage",
      conversationID: this.conversationID
    });
    /* istanbul ignore next */
    cov_2ewh89ltqi().s[299]++;
    this.send(message);
  }
}
/* istanbul ignore next */
cov_2ewh89ltqi().s[300]++;
exports.default = ChatViewController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,