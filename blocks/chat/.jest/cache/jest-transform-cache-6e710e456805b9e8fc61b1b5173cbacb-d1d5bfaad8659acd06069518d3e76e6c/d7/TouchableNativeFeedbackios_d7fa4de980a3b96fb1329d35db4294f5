e5cdbea170eaf901d4b9ead21a3fb4d9
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
var StyleSheet = require('../../StyleSheet/StyleSheet');
var Text = require('../../Text/Text');
var View = require('../View/View');
var DummyTouchableNativeFeedback = function (_React$Component) {
  (0, _inherits2.default)(DummyTouchableNativeFeedback, _React$Component);
  var _super = _createSuper(DummyTouchableNativeFeedback);
  function DummyTouchableNativeFeedback() {
    (0, _classCallCheck2.default)(this, DummyTouchableNativeFeedback);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(DummyTouchableNativeFeedback, [{
    key: "render",
    value: function render() {
      return React.createElement(View, {
        style: [styles.container, this.props.style]
      }, React.createElement(Text, {
        style: styles.info
      }, "TouchableNativeFeedback is not supported on this platform!"));
    }
  }]);
  return DummyTouchableNativeFeedback;
}(React.Component);
DummyTouchableNativeFeedback.SelectableBackground = function () {
  return {};
};
DummyTouchableNativeFeedback.SelectableBackgroundBorderless = function () {
  return {};
};
DummyTouchableNativeFeedback.Ripple = function () {
  return {};
};
DummyTouchableNativeFeedback.canUseNativeForeground = function () {
  return false;
};
var styles = StyleSheet.create({
  container: {
    height: 100,
    width: 300,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 10
  },
  info: {
    color: '#333333',
    margin: 20
  }
});
module.exports = DummyTouchableNativeFeedback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2luaGVyaXRzMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9nZXRQcm90b3R5cGVPZjIiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwiZGVmYXVsdCIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImFwcGx5Iiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiZSIsIlJlYWN0IiwiU3R5bGVTaGVldCIsIlRleHQiLCJWaWV3IiwiRHVtbXlUb3VjaGFibGVOYXRpdmVGZWVkYmFjayIsIl9SZWFjdCRDb21wb25lbnQiLCJfc3VwZXIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsInByb3BzIiwiaW5mbyIsIkNvbXBvbmVudCIsIlNlbGVjdGFibGVCYWNrZ3JvdW5kIiwiU2VsZWN0YWJsZUJhY2tncm91bmRCb3JkZXJsZXNzIiwiUmlwcGxlIiwiY2FuVXNlTmF0aXZlRm9yZWdyb3VuZCIsImNyZWF0ZSIsImhlaWdodCIsIndpZHRoIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJDb2xvciIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsIm1hcmdpbiIsImNvbG9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlRvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrLmlvcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFN0eWxlU2hlZXQgPSByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L1N0eWxlU2hlZXQnKTtcbmNvbnN0IFRleHQgPSByZXF1aXJlKCcuLi8uLi9UZXh0L1RleHQnKTtcbmNvbnN0IFZpZXcgPSByZXF1aXJlKCcuLi9WaWV3L1ZpZXcnKTtcblxuY2xhc3MgRHVtbXlUb3VjaGFibGVOYXRpdmVGZWVkYmFjayBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBTZWxlY3RhYmxlQmFja2dyb3VuZCA9ICgpID0+ICh7fSk7XG4gIHN0YXRpYyBTZWxlY3RhYmxlQmFja2dyb3VuZEJvcmRlcmxlc3MgPSAoKSA9PiAoe30pO1xuICBzdGF0aWMgUmlwcGxlID0gKCkgPT4gKHt9KTtcbiAgc3RhdGljIGNhblVzZU5hdGl2ZUZvcmVncm91bmQgPSAoKSA9PiBmYWxzZTtcblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLmNvbnRhaW5lciwgdGhpcy5wcm9wcy5zdHlsZV19PlxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmluZm99PlxuICAgICAgICAgIFRvdWNoYWJsZU5hdGl2ZUZlZWRiYWNrIGlzIG5vdCBzdXBwb3J0ZWQgb24gdGhpcyBwbGF0Zm9ybSFcbiAgICAgICAgPC9UZXh0PlxuICAgICAgPC9WaWV3PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBoZWlnaHQ6IDEwMCxcbiAgICB3aWR0aDogMzAwLFxuICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmJjYmMnLFxuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJvcmRlckNvbG9yOiAncmVkJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgbWFyZ2luOiAxMCxcbiAgfSxcbiAgaW5mbzoge1xuICAgIGNvbG9yOiAnIzMzMzMzMycsXG4gICAgbWFyZ2luOiAyMCxcbiAgfSxcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IER1bW15VG91Y2hhYmxlTmF0aXZlRmVlZGJhY2s7XG4iXSwibWFwcGluZ3MiOiJBQVNBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGdCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxhQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRyxVQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBSSwyQkFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUssZ0JBQUEsR0FBQU4sc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLFNBQUFNLGFBQUFDLE9BQUEsUUFBQUMseUJBQUEsR0FBQUMseUJBQUEsb0JBQUFDLHFCQUFBLFFBQUFDLEtBQUEsT0FBQU4sZ0JBQUEsQ0FBQU8sT0FBQSxFQUFBTCxPQUFBLEdBQUFNLE1BQUEsTUFBQUwseUJBQUEsUUFBQU0sU0FBQSxPQUFBVCxnQkFBQSxDQUFBTyxPQUFBLFFBQUFHLFdBQUEsRUFBQUYsTUFBQSxHQUFBRyxPQUFBLENBQUFDLFNBQUEsQ0FBQU4sS0FBQSxFQUFBTyxTQUFBLEVBQUFKLFNBQUEsWUFBQUQsTUFBQSxHQUFBRixLQUFBLENBQUFRLEtBQUEsT0FBQUQsU0FBQSxnQkFBQWQsMkJBQUEsQ0FBQVEsT0FB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