{"version":3,"names":["_defaults","require","_extension","AsyncStorage","storageBackend","asOptions","_classCallCheck2","default","_defineProperty","_backend","_config","log","noop","error","ext","createExtension","logger","simpleLogger","errorHandler","simpleErrorHandler","_createClass2","key","value","get","opts","_args","arguments","_regenerator","async","get$","_context","prev","next","length","undefined","action","awrap","getSingle","sent","t0","abrupt","stop","Promise","set","_args2","set$","_context2","setSingle","getMultiple","keys","values","_args3","getMultiple$","_context3","getMany","setMultiple","keyValues","_args4","setMultiple$","_context4","setMany","remove","_args5","remove$","_context5","removeSingle","removeMultiple","_args6","removeMultiple$","_context6","removeMany","getKeys","_args7","getKeys$","_context7","clearStorage","_args8","clearStorage$","_context8","dropStorage"],"sources":["../src/AsyncStorage.ts"],"sourcesContent":["/**\n * Copyright (c) React Native Community.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {simpleErrorHandler, simpleLogger, noop} from './defaults';\nimport {createExtension} from './extension';\nimport {\n  ExtensionType,\n  FactoryOptions,\n  IStorageBackend,\n  LoggerAction,\n  StorageOptions,\n} from '../types';\n\nclass AsyncStorage<M, T extends IStorageBackend<M>> {\n  readonly ext: ExtensionType<T>;\n\n  private readonly _backend: T;\n  private readonly _config: FactoryOptions;\n  private readonly log: (action: LoggerAction) => void;\n  private readonly error: (e: Error | string) => void;\n\n  constructor(storageBackend: T, asOptions: FactoryOptions) {\n    this._backend = storageBackend;\n    this._config = asOptions;\n\n    // off by default\n    this.log = noop;\n    this.error = noop;\n\n    this.ext = createExtension<T>(this._backend);\n\n    if (this._config.logger) {\n      this.log =\n        typeof this._config.logger === 'function'\n          ? this._config.logger\n          : simpleLogger;\n    }\n\n    if (this._config.errorHandler) {\n      this.error =\n        typeof this._config.errorHandler === 'function'\n          ? this._config.errorHandler\n          : simpleErrorHandler;\n    }\n  }\n  async get<K extends keyof M>(\n    key: K,\n    opts: StorageOptions = null,\n  ): Promise<M[K] | null> {\n    let value = null as M[K] | null;\n    try {\n      this.log({\n        action: 'read-single',\n        key: key as string,\n      });\n      value = await this._backend.getSingle(key, opts);\n    } catch (e) {\n      this.error(e);\n    }\n\n    return value;\n  }\n\n  async set<K extends keyof M>(\n    key: K,\n    value: M[K],\n    opts: StorageOptions = null,\n  ): Promise<void> {\n    try {\n      this.log({\n        action: 'save-single',\n        key: key as string,\n        value,\n      });\n      await this._backend.setSingle(key, value, opts);\n    } catch (e) {\n      this.error(e);\n    }\n  }\n\n  async getMultiple<K extends keyof M>(\n    keys: Array<K>,\n    opts: StorageOptions = null,\n  ): Promise<{[k in K]: M[k] | null}> {\n    let values = {} as {[k in K]: M[k] | null};\n\n    try {\n      this.log({\n        action: 'read-many',\n        key: keys as string[],\n      });\n      values = await this._backend.getMany(keys, opts);\n    } catch (e) {\n      this.error(e);\n    }\n\n    return values;\n  }\n\n  async setMultiple<K extends keyof M>(\n    keyValues: Array<{[k in K]: M[k]}>,\n    opts: StorageOptions = null,\n  ): Promise<void> {\n    try {\n      this.log({\n        action: 'save-many',\n        value: keyValues,\n      });\n      await this._backend.setMany(keyValues, opts);\n    } catch (e) {\n      this.error(e);\n    }\n  }\n\n  async remove(key: keyof M, opts: StorageOptions = null): Promise<void> {\n    try {\n      this.log({\n        action: 'delete-single',\n        key: key as string,\n      });\n      await this._backend.removeSingle(key, opts);\n    } catch (e) {\n      this.error(e);\n    }\n  }\n\n  async removeMultiple(\n    keys: Array<keyof M>,\n    opts: StorageOptions = null,\n  ): Promise<void> {\n    try {\n      this.log({\n        action: 'delete-many',\n        key: keys as string[],\n      });\n      await this._backend.removeMany(keys, opts);\n    } catch (e) {\n      this.error(e);\n    }\n  }\n\n  async getKeys(opts: StorageOptions = null): Promise<Array<keyof M>> {\n    let keys: Array<keyof M> = [];\n\n    try {\n      this.log({\n        action: 'keys',\n      });\n      keys = await this._backend.getKeys(opts);\n    } catch (e) {\n      this.error(e);\n    }\n\n    return keys;\n  }\n\n  async clearStorage(opts: StorageOptions = null): Promise<void> {\n    try {\n      this.log({\n        action: 'drop',\n      });\n      await this._backend.dropStorage(opts);\n    } catch (e) {\n      this.error(e);\n    }\n  }\n}\n\nexport default AsyncStorage;\n"],"mappings":"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"}