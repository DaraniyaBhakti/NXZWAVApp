{"version":3,"file":"/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/ChatView.web.steps.tsx","sources":["/Users/macm14/Documents/NXZWAW/nxzwav-294793-react-native/src/packages/blocks/chat/__tests__/step-definitions/ChatView.web.steps.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAA2D;AAC3D,mCAAiD;AAEjD,sFAAwE;AACxE,mEAAgE;AAChE,+DAA4D;AAE5D,8FAEwD;AACxD,kDAA0B;AAC1B,0EAA8C;AAG9C,MAAM,iBAAiB,GAAG;IACxB,YAAY,EAAE,aAAa;IAC3B,MAAM,EAAC,GAAG;IACV,QAAQ,EAAC,MAAM;IACf,OAAO,EAAC,EAAE;IACV,UAAU,EAAC,IAAI;IACf,QAAQ,EAAC,UAAU;CACpB,CAAC;AAEF,MAAM,YAAY,GAAc;IAC9B,EAAE,EAAE,IAAI;IACR,UAAU,EAAE;QACV,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,YAAY;QAClB,oBAAoB,EAAE,IAAI;QAC1B,cAAc,EAAE;YACd,EAAE,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE;SACzE;QACD,QAAQ,EAAE;YACR;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,cAAc;gBACpB,UAAU,EAAE;oBACV,EAAE,EAAE,CAAC;oBACL,OAAO,EAAE,OAAO;oBAChB,oBAAoB,EAAE,CAAC;oBACvB,eAAe,EAAE,CAAC;oBAClB,UAAU,EAAE,0BAA0B;oBACtC,UAAU,EAAE,0BAA0B;oBACtC,YAAY,EAAE,IAAI;oBAClB,aAAa,EAAE,EAAE;oBACjB,SAAS,EAAE,EAAE;iBACd;aACF;SACF;KACF;IACD,aAAa,EAAE;QACb,QAAQ,EAAE;YACR,IAAI,EAAE;gBACJ;oBACE,EAAE,EAAE,GAAG;oBACP,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,MAAM,sBAAsB,GAAG;IAC7B,UAAU,EAAE;QACV,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE;QACnB,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE;QACrB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;QACf,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;YAC5D,QAAQ,EAAE,CAAC;QACb,CAAC,CAAC;QACF,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE;QACnB,KAAK,EAAE;YACL,MAAM,EAAE;gBACN,YAAY,EAAE,iBAAiB,CAAC,YAAY;gBAC5C,MAAM,EAAC,iBAAiB,CAAC,MAAM;gBAC/B,QAAQ,EAAC,iBAAiB,CAAC,QAAQ;gBACnC,OAAO,EAAC,iBAAiB,CAAC,OAAO;gBACjC,UAAU,EAAC,iBAAiB,CAAC,UAAU;gBACvC,QAAQ,EAAC,iBAAiB,CAAC,QAAQ;aACpC;SACF;KACF;IACD,EAAE,EAAE,UAAU;CACf,CAAC;AAEF,MAAM,kBAAkB,GAAG,2BAAW,CACpC,oDAAoD,CACrD,CAAC;AAEF,6BAAa,CAAC,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE;IACzC,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;QACxE,IAAI,CAAC,KAAK,CAAC,qBAAS,EAAE,aAAa,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,4BAA4B,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;QAC3D,IAAI,kBAAkC,CAAC;QACvC,IAAI,mBAA6B,CAAC;QAClC,IAAI,eAAqB,CAAC;QAE1B,KAAK,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACzC,kBAAkB,GAAG,gBAAO,CAAC,8BAAC,sBAAQ,oBAAK,sBAAsB,EAAI,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YAClC,mBAAmB,GAAG,kBAAkB,CAAC,QAAQ,EAAc,CAAC;YAEhE,MAAM,yBAAyB,GAAG,kBAAkB,CAAC,SAAS,CAC5D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,gBAAgB,CACzD,CAAC;YACF,yBAAyB,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAClD,yBAAyB,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEpD,MAAM,2BAA2B,GAAG,kBAAkB,CAAC,SAAS,CAC9D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,eAAe,CACxD,CAAC;YACF,2BAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAE9C,MAAM,0BAA0B,GAAG,kBAAkB,CAAC,SAAS,CAC7D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,eAAe,CACxD,CAAC;YACF,0BAA0B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAE7C,MAAM,sCAAsC,GAAG,kBAAkB,CAAC,SAAS,CACzE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,sBAAsB,CAC/D,CAAC;YACF,sCAAsC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEzD,MAAM,uBAAuB,GAAG,kBAAkB,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,mBAAmB,CAC5D,CAAC;YACF,uBAAuB,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAEjD,MAAM,wBAAwB,GAAG,kBAAkB,CAAC,SAAS,CAC3D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,cAAc,CACvD,CAAC;YACF,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE;YAC9B,mBAAmB,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;YACzD,MAAM,0BAA0B,GAAG,kBAAkB,CAAC,SAAS,CAC7D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,iBAAiB,CAC1D,CAAC;YACF,0BAA0B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAChD,MAAM,uBAAuB,GAAG,kBAAkB,CAAC,SAAS,CAC1D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,gBAAgB,CACzD,CAAC;YACF,uBAAuB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAE1C,MAAM,8BAA8B,GAAG,kBAAkB,CAAC,SAAS,CACjE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,qBAAqB,CAC9D,CAAC;YACF,8BAA8B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACnC,MAAM,oBAAoB,GAAG,kBAAkB,CAAC,SAAS,CACvD,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,WAAW,CACpD,CAAC;YACF,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC9E,eAAe,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC3C,MAAM,0BAA0B,GAAG,kBAAkB,CAAC,SAAS,CAC7D,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,cAAc,CACvD,CAAC;YACF,0BAA0B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACtD,MAAM,kCAAkC,GAAG,IAAI,iBAAO,CACpD,qBAAO,CAAC,qBAAW,CAAC,sBAAsB,CAAC,CAC5C,CAAC;YAEF,kCAAkC,CAAC,OAAO,CACxC,qBAAO,CAAC,qBAAW,CAAC,0BAA0B,CAAC,EAC/C,kCAAkC,CAAC,SAAS,CAC7C,CAAC;YAEF,mBAAmB,CAAC,kBAAkB,GAAG,kCAAkC,CAAC,SAAS,CAAC;YACtF,qBAAS,CAAC,WAAW,CAAC,WAAW,EAAE,kCAAkC,CAAC,CAAC;YAEvE,mBAAmB,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,CAAC,CAAA;YAC1C,MAAM,8BAA8B,GAAG,kBAAkB,CAAC,SAAS,CACjE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,qBAAqB,CAC9D,CAAC;YACF,8BAA8B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACjD,mBAAmB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAA;QAIpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE;YAClC,mBAAmB,CAAC,oBAAoB,EAAE,CAAA;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\nimport { shallow, ShallowWrapper } from \"enzyme\";\n\nimport * as helpersChatViewWeb from \"../../../../framework/src/Helpers\";\nimport { runEngine } from \"../../../../framework/src/RunEngine\";\nimport { Message } from \"../../../../framework/src/Message\";\n\nimport MessageEnum, {\n  getName,\n} from \"../../../../framework/src/Messages/MessageEnum\";\nimport React from \"react\";\nimport ChatView from \"../../src/ChatView.web\";\nimport { IChatData } from \"../../src/ChatViewController\";\n\nconst paramsChatViewWeb = {\n  receiverUser: \"ReceiveUser\",\n  userID:\"7\",\n  userName:\"name\",\n  userPic:\"\",\n  userPoints:\"12\",\n  userRole:\"designer\"\n};\n\nconst testChatData: IChatData = {\n  id: \"17\",\n  attributes: {\n    id: 1,\n    name: \"test group\",\n    is_notification_mute: true,\n    accounts_chats: [\n      { id: \"1\", attributes: { account_id: 1, muted: true, unread_count: 5 } },\n    ],\n    messages: [\n      {\n        id: \"1\",\n        type: \"conversation\",\n        attributes: {\n          id: 1,\n          message: \"hello\",\n          user_profile_info_id: 1,\n          conversation_id: 1,\n          created_at: \"2022-05-02T21:31:05.047Z\",\n          updated_at: \"2022-05-03T02:45:09.837Z\",\n          is_mark_read: true,\n          profile_image: \"\",\n          user_name: \"\"\n        },\n      },\n    ],\n  },\n  relationships: {\n    accounts: {\n      data: [\n        {\n          id: \"1\",\n          type: \"account\",\n        },\n      ],\n    },\n  },\n};\n\nconst screenPropsChatViewWeb = {\n  navigation: {\n    navigate: jest.fn(),\n    setOptions: jest.fn(),\n    push: jest.fn(),\n    addListener: jest.fn().mockImplementation((event, callback) => {\n      callback();\n    }),\n    onGoBack: jest.fn(),\n    state: {\n      params: {\n        receiverUser: paramsChatViewWeb.receiverUser,\n        userID:paramsChatViewWeb.userID,\n        userName:paramsChatViewWeb.userName,\n        userPic:paramsChatViewWeb.userPic,\n        userPoints:paramsChatViewWeb.userPoints,\n        userRole:paramsChatViewWeb.userRole\n      },\n    },\n  },\n  id: \"ChatView\",\n};\n\nconst featureChatViewWeb = loadFeature(\n  \"./__tests__/features/ChatView-scenario.web.feature\"\n);\n\ndefineFeature(featureChatViewWeb, (test) => {\n  beforeEach(() => {\n    jest.resetModules();\n    jest.clearAllMocks();\n    jest.doMock(\"react-native\", () => ({ Platform: { OS: \"web\" } }));\n    jest.spyOn(helpersChatViewWeb, \"getOS\").mockImplementation(() => \"web\");\n    jest.spyOn(runEngine, \"sendMessage\");\n  });\n\n  test(\"User navigates to ChatView\", ({ given, when, then }) => {\n    let chatViewWebWrapper: ShallowWrapper;\n    let instanceChatViewWeb: ChatView;\n    let fileChatViewWeb: Blob;\n\n    given(\"I am a User loading ChatView\", () => {\n      chatViewWebWrapper = shallow(<ChatView {...screenPropsChatViewWeb} />);\n    });\n\n    when(\"I navigate to ChatView\", () => {\n      instanceChatViewWeb = chatViewWebWrapper.instance() as ChatView;\n\n      const accountIdInputChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"inputAccountID\"\n      );\n      accountIdInputChatViewWeb.simulate(\"change\", \"2\");\n      accountIdInputChatViewWeb.simulate(\"change\", \"hey\");\n      \n      const addAccountButtonChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnAddAccount\"\n      );\n      addAccountButtonChatViewWeb.simulate(\"click\");\n\n      const buttonComponentChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnCloseModal\"\n      );\n      buttonComponentChatViewWeb.simulate(\"click\");\n\n      const buttonClosePreviewComponentChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnClosePreviewModal\"\n      );\n      buttonClosePreviewComponentChatViewWeb.simulate(\"click\");\n\n      const messageInputChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"inputImageMessage\"\n      );\n      messageInputChatViewWeb.simulate(\"change\", \"Hi\");\n\n      const messageInputmChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"inputMessage\"\n      );\n      messageInputmChatViewWeb.simulate(\"change\", \"Hi\");\n    });\n\n    then(\"ChatView will load\", () => {\n      instanceChatViewWeb.setState({ chatData: testChatData });\n      const buttonComponentChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnShowAddModal\"\n      );\n      buttonComponentChatViewWeb.simulate(\"click\");\n    });\n\n    when(\"I click on the btnInsertImage button\", () => {\n      const insertButtonChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnInsertImage\"\n      );\n      insertButtonChatViewWeb.simulate(\"click\");\n\n      const buttonComponentSendChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnSendImageMessage\"\n      );\n      buttonComponentSendChatViewWeb.simulate(\"click\");\n    });\n\n    then(\"I can change image file\", () => {\n      const fileInputChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"FileInput\"\n      );\n      fileInputChatViewWeb.simulate(\"change\", { target: { value: '', files: [] } });\n      fileChatViewWeb = new Blob([new ArrayBuffer(1)]);\n      fileInputChatViewWeb.simulate(\"change\", { target: { value: 'T', files: [fileChatViewWeb] } });\n    });\n\n    when(\"I click on the leaveChat button\", () => {\n      const buttonComponentChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnLeaveChat\"\n      );\n      buttonComponentChatViewWeb.simulate(\"click\");\n    });\n\n    then(\"a call to leave the chat room will be made\", () => {\n      const leaveChatRoomApiMessageChatViewWeb = new Message(\n        getName(MessageEnum.RestAPIResponceMessage)\n      );\n\n      leaveChatRoomApiMessageChatViewWeb.addData(\n        getName(MessageEnum.RestAPIResponceDataMessage),\n        leaveChatRoomApiMessageChatViewWeb.messageId\n      );\n\n      instanceChatViewWeb.leaveChatApiCallId = leaveChatRoomApiMessageChatViewWeb.messageId;\n      runEngine.sendMessage(\"Unit Test\", leaveChatRoomApiMessageChatViewWeb);\n\n      instanceChatViewWeb.setState({message:\"\"})\n      const buttonComponentSendChatViewWeb = chatViewWebWrapper.findWhere(\n        (node) => node.prop(\"data-test-id\") === \"btnSendImageMessage\"\n      );\n      buttonComponentSendChatViewWeb.simulate(\"click\");\n      instanceChatViewWeb.handleMessageChange(\"message\")\n\n\n\n    });\n  \n    then(\"I can leave the screen\", () => {\n      instanceChatViewWeb.componentWillUnmount()\n    });\n  });\n});"]}