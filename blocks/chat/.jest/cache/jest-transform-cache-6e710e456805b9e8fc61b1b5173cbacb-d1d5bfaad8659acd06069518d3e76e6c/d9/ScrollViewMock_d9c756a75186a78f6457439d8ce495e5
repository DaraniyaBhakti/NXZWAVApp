3d356241d63814864467d66b4a53c01c
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
var View = require('../../View/View');
var requireNativeComponent = require('../../../ReactNative/requireNativeComponent');
var RCTScrollView = requireNativeComponent('RCTScrollView');
var ScrollViewComponent = jest.genMockFromModule('../ScrollView');
var ScrollViewMock = function (_ScrollViewComponent) {
  (0, _inherits2.default)(ScrollViewMock, _ScrollViewComponent);
  var _super = _createSuper(ScrollViewMock);
  function ScrollViewMock() {
    (0, _classCallCheck2.default)(this, ScrollViewMock);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(ScrollViewMock, [{
    key: "render",
    value: function render() {
      return React.createElement(RCTScrollView, this.props, this.props.refreshControl, React.createElement(View, null, this.props.children));
    }
  }]);
  return ScrollViewMock;
}(ScrollViewComponent);
module.exports = ScrollViewMock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2luaGVyaXRzMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9nZXRQcm90b3R5cGVPZjIiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwiZGVmYXVsdCIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImFwcGx5Iiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiZSIsIlJlYWN0IiwiVmlldyIsInJlcXVpcmVOYXRpdmVDb21wb25lbnQiLCJSQ1RTY3JvbGxWaWV3IiwiU2Nyb2xsVmlld0NvbXBvbmVudCIsImplc3QiLCJnZW5Nb2NrRnJvbU1vZHVsZSIsIlNjcm9sbFZpZXdNb2NrIiwiX1Njcm9sbFZpZXdDb21wb25lbnQiLCJfc3VwZXIiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJwcm9wcyIsInJlZnJlc2hDb250cm9sIiwiY2hpbGRyZW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiU2Nyb2xsVmlld01vY2suanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqL1xuXG4vKiBlc2xpbnQtZW52IGplc3QgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBWaWV3ID0gcmVxdWlyZSgnLi4vLi4vVmlldy9WaWV3Jyk7XG5cbmNvbnN0IHJlcXVpcmVOYXRpdmVDb21wb25lbnQgPSByZXF1aXJlKCcuLi8uLi8uLi9SZWFjdE5hdGl2ZS9yZXF1aXJlTmF0aXZlQ29tcG9uZW50Jyk7XG5cbmNvbnN0IFJDVFNjcm9sbFZpZXcgPSByZXF1aXJlTmF0aXZlQ29tcG9uZW50KCdSQ1RTY3JvbGxWaWV3Jyk7XG5cbmNvbnN0IFNjcm9sbFZpZXdDb21wb25lbnQ6ICRGbG93Rml4TWUgPSBqZXN0Lmdlbk1vY2tGcm9tTW9kdWxlKCcuLi9TY3JvbGxWaWV3Jyk7XG5cbmNsYXNzIFNjcm9sbFZpZXdNb2NrIGV4dGVuZHMgU2Nyb2xsVmlld0NvbXBvbmVudCB7XG4gIHJlbmRlcigpOiBSZWFjdC5FbGVtZW50PHN0cmluZz4ge1xuICAgIHJldHVybiAoXG4gICAgICA8UkNUU2Nyb2xsVmlldyB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgIHt0aGlzLnByb3BzLnJlZnJlc2hDb250cm9sfVxuICAgICAgICA8Vmlldz57dGhpcy5wcm9wcy5jaGlsZHJlbn08L1ZpZXc+XG4gICAgICA8L1JDVFNjcm9sbFZpZXc+XG4gICAgKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNjcm9sbFZpZXdNb2NrO1xuIl0sIm1hcHBpbmdzIjoiQUFZQSxZQUFZOztBQUFDLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQSxJQUFBQyxnQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUcsVUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUksMkJBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFLLGdCQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxTQUFBTSxhQUFBQyxPQUFBLFFBQUFDLHlCQUFBLEdBQUFDLHlCQUFBLG9CQUFBQyxxQkFBQSxRQUFBQyxLQUFBLE9BQUFOLGdCQUFBLENBQUFPLE9BQUEsRUFBQUwsT0FBQSxHQUFBTSxNQUFBLE1BQUFMLHlCQUFBLFFBQUFNLFNBQUEsT0FBQVQsZ0JBQUEsQ0FBQU8sT0FBQSxRQUFBRyxXQUFBLEVBQUFGLE1BQUEsR0FBQUcsT0FBQSxDQUFBQyxTQUFBLENBQUFOLEtBQUEsRUFBQU8sU0FBQSxFQUFBSixTQUFBLFlBQUFELE1BQUEsR0FBQUYsS0FBQSxDQUFBUSxLQUFBLE9BQUFELFNBQUEsZ0JBQUFkLDJCQUFBLENBQUFRLE9BQUEsUUFBQUMsTUFBQTtBQUFBLFNBQUFKLDBCQUFBLGVBQUFPLE9BQUEscUJBQUFBLE9BQUEsQ0FBQUMsU0FBQSxvQkFBQUQsT0FBQSxDQUFBQyxTQUFBLENBQUFHLElBQUEsMkJBQUFDLEtBQUEsb0NBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFDLElBQUEsQ0FBQVQsT0FBQSxDQUFBQyxTQUFBLENBQUFLLE9BQUEsOENBQUFJLENBQUE7QUFFYixJQUFNQyxLQUFLLEdBQUczQixPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLElBQU00QixJQUFJLEdBQUc1QixPQUFPLENBQUMsaUJBQWlCLENBQUM7QUFFdkMsSUFBTTZCLHNCQUFzQixHQUFHN0IsT0FBTyxDQUFDLDZDQUE2QyxDQUFDO0FBRXJGLElBQU04QixhQUFhLEdBQUdELHNCQUFzQixDQUFDLGVBQWUsQ0FBQztBQUU3RCxJQUFNRSxtQkFBK0IsR0FBR0MsSUFBSSxDQUFDQyxpQkFBaUIsQ0FBQyxlQUFlLENBQUM7QUFBQyxJQUUxRUMsY0FBYyxhQUFBQyxvQkFBQTtFQUFBLElBQUFoQyxVQUFBLENBQUFTLE9BQUEsRUFBQXNCLGNBQUEsRUFBQUMsb0JBQUE7RUFBQSxJQUFBQyxNQUFBLEdBQUE5QixZQUFBLENBQUE0QixjQUFBO0VBQUEsU0FBQUEsZUFBQTtJQUFBLElBQUFqQyxnQkFBQSxDQUFBVyxPQUFBLFFBQUFzQixjQUFBO0lBQUEsT0FBQUUsTUFBQSxDQUFBakIsS0FBQSxPQUFBRCxTQUFBO0VBQUE7RUFBQSxJQUFBaEIsYUFBQSxDQUFBVSxPQUFBLEVBQUFzQixjQUFBO0lBQUFHLEdBQUE7SUFBQUMsS0FBQSxFQUNsQixTQUFBQyxPQUFBLEVBQWdDO01BQzlCLE9BQ0VaLEtBQUEsQ0FBQWEsYUFBQSxDQUFDVixhQUFhLEVBQUssSUFBSSxDQUFDVyxLQUFLLEVBQzFCLElBQUksQ0FBQ0EsS0FBSyxDQUFDQyxjQUFjLEVBQzFCZixLQUFBLENBQUFhLGFBQUEsQ0FBQ1osSUFBSSxRQUFFLElBQUksQ0FBQ2EsS0FBSyxDQUFDRSxRQUFlLENBQ3BCLENBQUM7SUFFcEI7RUFBQztFQUFBLE9BQUFULGNBQUE7QUFBQSxFQVIwQkgsbUJBQW1CO0FBV2hEYSxNQUFNLENBQUNDLE9BQU8sR0FBR1gsY0FBYyJ9